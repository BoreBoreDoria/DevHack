{"version":3,"file":"ng-entity-service-notifier.d.ts","sources":["ng-entity-service-notifier.d.ts"],"names":[],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { Msg } from './types';\nexport declare enum HttpMethod {\n    GET = \"GET\",\n    POST = \"POST\",\n    PUT = \"PUT\",\n    PATCH = \"PATCH\",\n    DELETE = \"DELETE\"\n}\nexport declare type ActionType = 'success' | 'error';\nexport declare type EntityServiceAction = {\n    storeName: string;\n    type: ActionType;\n    payload: any;\n    method: HttpMethod;\n} & Msg;\nexport declare const ofType: (type: ActionType) => import(\"rxjs\").MonoTypeOperatorFunction<EntityServiceAction>;\nexport declare const filterMethod: (method: HttpMethod | keyof (typeof HttpMethod)) => import(\"rxjs\").MonoTypeOperatorFunction<EntityServiceAction>;\nexport declare const filterStore: (name: string) => import(\"rxjs\").MonoTypeOperatorFunction<EntityServiceAction>;\nexport declare class NgEntityServiceNotifier {\n    private dispatcher;\n    action$: import(\"rxjs\").Observable<EntityServiceAction>;\n    dispatch(event: EntityServiceAction): void;\n}\n"]}