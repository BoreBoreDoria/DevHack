{"version":3,"file":"action-factory.js","sourceRoot":"ng://@datorama/akita-ng-entity-service/","sources":["lib/action-factory.ts"],"names":[],"mappings":"AAEA,MAAM,UAAU,aAAa,CAC3B,SAAiB,EACjB,QAAiC;IAEjC,OAAO,UAAS,EAAE,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE;QAC7C,QAAQ,CAAC,QAAQ,CAAC;YAChB,IAAI,EAAE,SAAS;YACf,SAAS;YACT,OAAO;YACP,MAAM;YACN,UAAU;SACX,CAAC,CAAC;IACL,CAAC,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,WAAW,CACzB,SAAiB,EACjB,QAAiC;IAEjC,OAAO,UAAS,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE;QAC3C,QAAQ,CAAC,QAAQ,CAAC;YAChB,IAAI,EAAE,OAAO;YACb,SAAS;YACT,OAAO;YACP,MAAM;YACN,QAAQ;SACT,CAAC,CAAC;IACL,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import { EntityServiceAction, NgEntityServiceNotifier } from './ng-entity-service-notifier';\n\nexport function successAction(\n  storeName: string,\n  notifier: NgEntityServiceNotifier\n): (params: Partial<EntityServiceAction>) => void {\n  return function({ payload, method, successMsg }) {\n    notifier.dispatch({\n      type: 'success',\n      storeName,\n      payload,\n      method,\n      successMsg\n    });\n  };\n}\n\nexport function errorAction(\n  storeName: string,\n  notifier: NgEntityServiceNotifier\n): (params: Partial<EntityServiceAction>) => void {\n  return function({ payload, method, errorMsg }) {\n    notifier.dispatch({\n      type: 'error',\n      storeName,\n      payload,\n      method,\n      errorMsg\n    });\n  };\n}\n"]}