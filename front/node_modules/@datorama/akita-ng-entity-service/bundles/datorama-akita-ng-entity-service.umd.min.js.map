{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@datorama/akita-ng-entity-service/lib/ng-entity-service-notifier.ts","ng://@datorama/akita-ng-entity-service/lib/action-factory.ts","ng://@datorama/akita-ng-entity-service/lib/helpers.ts","ng://@datorama/akita-ng-entity-service/lib/ng-entity-service.config.ts","ng://@datorama/akita-ng-entity-service/lib/ng-entity-service.loader.ts","ng://@datorama/akita-ng-entity-service/lib/ng-entity.service.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__assign","assign","t","s","i","n","arguments","length","apply","this","create","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","__spread","concat","HttpMethod","successAction","storeName","notifier","_a","payload","method","successMsg","dispatch","type","errorAction","errorMsg","isID","idOrConfig","isNumber","isString","NgEntityServiceNotifier","dispatcher","Subject","action$","asObservable","event","Injectable","args","providedIn","NG_ENTITY_SERVICE_CONFIG","InjectionToken","defaultConfig","httpMethods","GET","POST","PATCH","PUT","DELETE","mergeDeep","target","sources","_i","source","shift","isObject","key","_b","NgEntityServiceLoader","loading$","loadersFor","name","_this","filterStore","filter","filterMethod","mthd","isFunction","actionBased","current","pipe","map","action","loading","idBased","id","entityId","get$","add$","update$","delete$","getEntity","updateEntity","deleteEntity","mapResponse","config","res","mapResponseFn","NgEntityService","store","_super","http","inject","HttpClient","loader","globalConfig","mergedConfig","getDecoratorConfig","baseUrl","httpMethodMap","dispatchSuccess","dispatchError","__","constructor","__extends","defineProperty","Error","resourceName","setBaseUrl","getHttp","getConfig","get","getHttpMethod","isSingle","undefined","conf","url","resolveUrl","request","tap","data","skipWrite","upsert","newState","append","add","upsertMany","set","catchError","handleError","finalize","entity","configWithBody","body","responseEntity","update","delete","remove","httpMethod","getDecoratorValue","urlPostfix","final","api","isDefined","throwError","EntityService"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Subject } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { filter } from 'rxjs/operators';\nimport { Msg } from './types';\n\nexport enum HttpMethod {\n  GET = 'GET',\n  POST = 'POST',\n  PUT = 'PUT',\n  PATCH = 'PATCH',\n  DELETE = 'DELETE'\n}\n\nexport type ActionType = 'success' | 'error';\n\nexport type EntityServiceAction = {\n  storeName: string;\n  type: ActionType;\n  payload: any;\n  method: HttpMethod;\n} & Msg;\n\nexport const ofType = (type: ActionType) => filter((action: EntityServiceAction) => action.type === type);\n\nexport const filterMethod = (method: HttpMethod | keyof (typeof HttpMethod)) =>\n  filter((action: EntityServiceAction) => action.method === method);\n\nexport const filterStore = (name: string) => filter((action: EntityServiceAction) => action.storeName === name);\n\n@Injectable({ providedIn: 'root' })\nexport class NgEntityServiceNotifier {\n  private dispatcher = new Subject<EntityServiceAction>();\n  action$ = this.dispatcher.asObservable();\n\n  dispatch(event: EntityServiceAction) {\n    this.dispatcher.next(event);\n  }\n}\n","import { EntityServiceAction, NgEntityServiceNotifier } from './ng-entity-service-notifier';\n\nexport function successAction(\n  storeName: string,\n  notifier: NgEntityServiceNotifier\n): (params: Partial<EntityServiceAction>) => void {\n  return function({ payload, method, successMsg }) {\n    notifier.dispatch({\n      type: 'success',\n      storeName,\n      payload,\n      method,\n      successMsg\n    });\n  };\n}\n\nexport function errorAction(\n  storeName: string,\n  notifier: NgEntityServiceNotifier\n): (params: Partial<EntityServiceAction>) => void {\n  return function({ payload, method, errorMsg }) {\n    notifier.dispatch({\n      type: 'error',\n      storeName,\n      payload,\n      method,\n      errorMsg\n    });\n  };\n}\n","import { isNumber, isString } from '@datorama/akita';\n\nexport function isID(idOrConfig: any) {\n  return isNumber(idOrConfig) || isString(idOrConfig);\n}\n","import { InjectionToken } from '@angular/core';\nimport { NgEntityServiceParams } from './types';\nimport { HttpMethod } from './ng-entity-service-notifier';\nimport { isObject } from '@datorama/akita';\n\nexport interface NgEntityServiceGlobalConfig {\n  baseUrl?: string;\n  httpMethods?: Partial<{\n    GET: HttpMethod;\n    POST: HttpMethod;\n    PATCH: HttpMethod;\n    PUT: HttpMethod;\n    DELETE: HttpMethod;\n  }>;\n}\n\nexport const NG_ENTITY_SERVICE_CONFIG = new InjectionToken<NgEntityServiceGlobalConfig>('NgEntityServiceGlobalConfig');\n\nexport const defaultConfig: NgEntityServiceGlobalConfig = {\n  httpMethods: {\n    GET: HttpMethod.GET,\n    POST: HttpMethod.POST,\n    PATCH: HttpMethod.PATCH,\n    PUT: HttpMethod.PUT,\n    DELETE: HttpMethod.DELETE\n  }\n};\n\nexport function mergeDeep(target, ...sources) {\n  if (!sources.length) return target;\n  const source = sources.shift();\n\n  if (isObject(target) && isObject(source)) {\n    for (const key in source) {\n      if (isObject(source[key])) {\n        if (!target[key]) Object.assign(target, { [key]: {} });\n        mergeDeep(target[key], source[key]);\n      } else {\n        Object.assign(target, { [key]: source[key] });\n      }\n    }\n  }\n\n  return mergeDeep(target, ...sources);\n}\n\nexport function NgEntityServiceConfig(config: NgEntityServiceParams = {}) {\n  return function(constructor) {\n    if (config.baseUrl) {\n      constructor['baseUrl'] = config.baseUrl;\n    }\n\n    if (config.resourceName) {\n      constructor['resourceName'] = config.resourceName;\n    }\n  };\n}\n","import { Subject } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { filter, map } from 'rxjs/operators';\nimport { isFunction } from '@datorama/akita';\nimport { HttpMethod } from './ng-entity-service-notifier';\n\ntype Event = { method: HttpMethod; loading: boolean; storeName: string; entityId?: any };\n\n@Injectable({ providedIn: 'root' })\nexport class NgEntityServiceLoader {\n  private dispatcher = new Subject<Event>();\n  loading$ = this.dispatcher.asObservable();\n\n  dispatch(event: Event) {\n    this.dispatcher.next(event);\n  }\n\n  loadersFor(name?: string) {\n    const filterStore = filter(({ storeName }: Event) => (name ? storeName === name : true));\n    const filterMethod = mthd =>\n      filter(({ method }: Event) => {\n        return isFunction(mthd) ? mthd(method) : method === mthd;\n      });\n\n    const actionBased = (current: ((method) => boolean) | HttpMethod) =>\n      this.loading$.pipe(\n        filterStore,\n        filterMethod(current),\n        map(action => action.loading)\n      );\n\n    const idBased = (id: any, mthd: ((method) => boolean) | HttpMethod) =>\n      this.loading$.pipe(\n        filterStore,\n        filterMethod(mthd),\n        filter(action => action.entityId === id),\n        map(action => action.loading)\n      );\n\n    return {\n      get$: actionBased(HttpMethod.GET),\n      add$: actionBased(HttpMethod.POST),\n      update$: actionBased(method => method === HttpMethod.PUT || method === HttpMethod.PATCH),\n      delete$: actionBased(HttpMethod.DELETE),\n      getEntity: (id: any) => idBased(id, HttpMethod.GET),\n      updateEntity: (id: any) => idBased(id, method => method === HttpMethod.PUT || method === HttpMethod.PATCH),\n      deleteEntity: (id: any) => idBased(id, HttpMethod.DELETE)\n    };\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { inject } from '@angular/core';\nimport { EntityService, EntityState, EntityStore, getEntityType, getIDType, isDefined } from '@datorama/akita';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, finalize, map, tap } from 'rxjs/operators';\nimport { errorAction, successAction } from './action-factory';\nimport { isID } from './helpers';\nimport { EntityServiceAction, HttpMethod, NgEntityServiceNotifier } from './ng-entity-service-notifier';\nimport { defaultConfig, mergeDeep, NgEntityServiceGlobalConfig, NG_ENTITY_SERVICE_CONFIG } from './ng-entity-service.config';\nimport { NgEntityServiceLoader } from './ng-entity-service.loader';\nimport { HttpAddConfig, HttpConfig, HttpDeleteConfig, HttpGetConfig, HttpUpdateConfig, NgEntityServiceParams } from './types';\n\nexport const mapResponse = <T>(config?: HttpConfig<T>) => map((res) => (config && !!config.mapResponseFn ? config.mapResponseFn(res) : res));\n\nexport class NgEntityService<S extends EntityState = any> extends EntityService<S> {\n  baseUrl: string | undefined;\n  loader: NgEntityServiceLoader;\n\n  private readonly http: HttpClient;\n  private readonly notifier: NgEntityServiceNotifier;\n  private readonly mergedConfig: NgEntityServiceParams & NgEntityServiceGlobalConfig;\n  private readonly httpMethodMap:\n    | Partial<{\n        GET: HttpMethod;\n        POST: HttpMethod;\n        PATCH: HttpMethod;\n        PUT: HttpMethod;\n        DELETE: HttpMethod;\n      }>\n    | undefined;\n\n  private readonly dispatchSuccess: (action: Partial<EntityServiceAction>) => void;\n  private readonly dispatchError: (action: Partial<EntityServiceAction>) => void;\n\n  constructor(protected readonly store: EntityStore<S>, readonly config: NgEntityServiceParams = {}) {\n    super();\n    this.http = inject(HttpClient);\n    this.loader = inject(NgEntityServiceLoader);\n    this.notifier = inject(NgEntityServiceNotifier);\n    const globalConfig = inject(NG_ENTITY_SERVICE_CONFIG);\n    this.mergedConfig = mergeDeep({}, defaultConfig, globalConfig, this.getDecoratorConfig(), config);\n    this.baseUrl = this.mergedConfig.baseUrl;\n    this.httpMethodMap = this.mergedConfig.httpMethods;\n\n    this.dispatchSuccess = successAction(this.store.storeName, this.notifier);\n    this.dispatchError = errorAction(this.store.storeName, this.notifier);\n  }\n\n  get api() {\n    if (!this.baseUrl) {\n      throw new Error(`baseUrl of ${this.constructor.name} is not defined.`);\n    }\n\n    return `${this.baseUrl}/${this.resourceName}`;\n  }\n\n  get resourceName() {\n    return this.mergedConfig.resourceName || this.store.storeName;\n  }\n\n  setBaseUrl(baseUrl: string) {\n    this.baseUrl = baseUrl;\n  }\n\n  getHttp() {\n    return this.http;\n  }\n\n  getConfig() {\n    return this.mergedConfig;\n  }\n\n  /**\n   * Get one entity - Creates a GET request\n   *\n   * @example\n   * service.get(id).subscribe()\n   * service.get(id, { headers, params, url }).subscribe()\n   */\n  get<T>(id?: getIDType<S>, config?: HttpGetConfig<T>): Observable<T>;\n  /**\n   * Get all entities - Creates a GET request\n   *\n   * @example\n   * service.get().subscribe()\n   * service.get({ headers, params, url }).subscribe()\n   */\n  get<T>(config?: HttpGetConfig<T>): Observable<T>;\n  get<T>(idOrConfig?: getIDType<S> | HttpGetConfig<T>, config?: HttpGetConfig<T>): Observable<T> {\n    const method = this.getHttpMethod(HttpMethod.GET);\n    const isSingle = isID(idOrConfig);\n    const entityId = isSingle ? (idOrConfig as getIDType<S>) : undefined;\n    const conf = (!isSingle ? (idOrConfig as HttpGetConfig<T>) : config) || {};\n    const url = this.resolveUrl(conf, entityId);\n\n    this.loader.dispatch({\n      method,\n      loading: true,\n      entityId,\n      storeName: this.store.storeName,\n    });\n\n    return this.http.request(method, url, conf).pipe(\n      mapResponse(conf),\n      tap((data: any) => {\n        if (!conf.skipWrite) {\n          if (isSingle) {\n            this.store.upsert(entityId, data, (id, newState) => ({ id, ...newState }));\n          } else {\n            if (conf.append) {\n              this.store.add(data);\n            } else if (conf.upsert) {\n              this.store.upsertMany(data);\n            } else {\n              this.store.set(data);\n            }\n          }\n        }\n\n        this.dispatchSuccess({\n          method,\n          payload: data,\n          successMsg: conf.successMsg,\n        });\n      }),\n      catchError((error) => this.handleError(method, error, conf.errorMsg)),\n      finalize(() => {\n        this.loader.dispatch({\n          method,\n          loading: false,\n          entityId,\n          storeName: this.store.storeName,\n        });\n      })\n    );\n  }\n\n  /**\n   * Add a new entity - Creates a POST request\n   *\n   * @example\n   * service.add(entity).subscribe()\n   * service.add(entity, config).subscribe()\n   */\n  add<T>(entity: getEntityType<S>, config?: HttpAddConfig<T>): Observable<T> {\n    const url = this.resolveUrl(config);\n    const method = this.getHttpMethod(HttpMethod.POST);\n\n    this.loader.dispatch({\n      method,\n      loading: true,\n      storeName: this.store.storeName,\n    });\n\n    const configWithBody = { ...config, ...{ body: entity } };\n\n    return this.http.request(method, url, configWithBody).pipe(\n      mapResponse(config),\n      tap((responseEntity: any) => {\n        if (!config || (config && !config.skipWrite)) {\n          this.store.add(responseEntity, config);\n        }\n        this.dispatchSuccess({\n          method,\n          payload: responseEntity,\n          successMsg: config && config.successMsg,\n        });\n      }),\n      catchError((error) => this.handleError(method, error, config && config.errorMsg)),\n      finalize(() => {\n        this.loader.dispatch({\n          method,\n          loading: false,\n          storeName: this.store.storeName,\n        });\n      })\n    );\n  }\n\n  /**\n   * Update an entity - Creates a PUT/PATCH request\n   *\n   * @example\n   * service.update(id, entity).subscribe()\n   * service.update(id, entity, config).subscribe()\n   */\n  update<T>(id: getIDType<S>, entity: Partial<getEntityType<S>>, config?: HttpUpdateConfig<T>): Observable<T> {\n    const url = this.resolveUrl(config, id);\n    const method = (config && config.method) || this.getHttpMethod(HttpMethod.PUT);\n\n    this.loader.dispatch({\n      method,\n      loading: true,\n      entityId: id,\n      storeName: this.store.storeName,\n    });\n\n    const configWithBody = { ...config, ...{ body: entity } };\n\n    return this.http.request(method, url, configWithBody).pipe(\n      mapResponse(config),\n      tap((responseEntity) => {\n        if (!config || (config && !config.skipWrite)) {\n          this.store.update(id, responseEntity as any);\n        }\n        this.dispatchSuccess({\n          method,\n          payload: responseEntity,\n          successMsg: config && config.successMsg,\n        });\n      }),\n      catchError((error) => this.handleError(method, error, config && config.errorMsg)),\n      finalize(() => {\n        this.loader.dispatch({\n          method,\n          loading: false,\n          entityId: id,\n          storeName: this.store.storeName,\n        });\n      })\n    ) as Observable<T>;\n  }\n\n  /**\n   * Delete an entity - Creates a DELETE request\n   *\n   * @example\n   * service.delete(id).subscribe()\n   * service.delete(id, config).subscribe()\n   */\n  delete<T>(id: getIDType<S>, config?: HttpDeleteConfig<T>): Observable<T> {\n    const url = this.resolveUrl(config, id);\n    const method = this.getHttpMethod(HttpMethod.DELETE);\n\n    this.loader.dispatch({\n      method,\n      loading: true,\n      entityId: id,\n      storeName: this.store.storeName,\n    });\n\n    return this.http.request(method, url, config).pipe(\n      mapResponse(config),\n      tap((res) => {\n        if (!config || (config && !config.skipWrite)) {\n          this.store.remove(id);\n        }\n        this.dispatchSuccess({\n          method,\n          payload: res,\n          successMsg: config && config.successMsg,\n        });\n      }),\n      catchError((error) => this.handleError(method, error, config && config.errorMsg)),\n      finalize(() => {\n        this.loader.dispatch({\n          method,\n          loading: false,\n          entityId: id,\n          storeName: this.store.storeName,\n        });\n      })\n    ) as Observable<T>;\n  }\n\n  /**\n   * Gets the mapped HttpMethod.\n   *\n   * The default HttpMethod can be changed like so:\n   * ```ts\n   * {\n   *   provide: NG_ENTITY_SERVICE_CONFIG,\n   *   useValue: {\n   *     httpMethods: {\n   *       PUT: HttpMethod.PATCH,\n   *     },\n   *   } as NgEntityServiceGlobalConfig,\n   * }\n   * ```\n   *\n   * @param type HttpMethod to get the user configured HttpMethod for\n   * @returns User configured HttpMethod for the method, else the default HttpMethod\n   */\n  protected getHttpMethod(type: HttpMethod) {\n    let httpMethod: HttpMethod;\n    if (this.httpMethodMap) {\n      httpMethod = this.httpMethodMap[type];\n    }\n    if (!httpMethod) {\n      throw new Error('Unknown HttpMethod');\n    }\n\n    return httpMethod;\n  }\n\n  /**\n   * Gets the value given via the NgEntityServiceConfig decorator\n   *\n   * ```ts\n   * @NgEntityServiceConfig({\n   *   baseUrl: 'foo',\n   *   resourceName: 'bar',\n   * })\n   * ```\n   *\n   * @param key The property key\n   * @returns The value of the given decorator key\n   */\n  private getDecoratorValue(key: keyof NgEntityServiceParams): string | undefined {\n    return (this.constructor as any)[key];\n  }\n\n  protected getDecoratorConfig() {\n    const config: NgEntityServiceParams = {};\n\n    const baseUrl = this.getDecoratorValue('baseUrl');\n    if (baseUrl) {\n      config.baseUrl = baseUrl;\n    }\n\n    const resourceName = this.getDecoratorValue('resourceName');\n    if (resourceName) {\n      config.resourceName = resourceName;\n    }\n\n    return config;\n  }\n\n  protected resolveUrl(config?: HttpConfig, id?: any) {\n    const { url, urlPostfix } = Object(config) as HttpConfig;\n    let final = this.api;\n\n    if (url) {\n      return url;\n    }\n\n    if (isDefined(id)) {\n      final += `/${id}`;\n    }\n\n    if (urlPostfix) {\n      final += `/${urlPostfix}`;\n    }\n\n    return final;\n  }\n\n  protected handleError(method: HttpMethod, error: any, errorMsg?: string) {\n    this.dispatchError({\n      method,\n      errorMsg,\n      payload: error,\n    });\n\n    return throwError(error);\n  }\n}\n"]}