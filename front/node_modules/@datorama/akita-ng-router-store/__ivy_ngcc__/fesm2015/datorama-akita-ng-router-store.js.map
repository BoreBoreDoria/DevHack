{"version":3,"file":"datorama-akita-ng-router-store.js","sources":["@datorama/akita-ng-router-store/lib/router.store.ts","@datorama/akita-ng-router-store/lib/router.query.ts","@datorama/akita-ng-router-store/lib/router.service.ts","@datorama/akita-ng-router-store/lib/router.module.ts","@datorama/akita-ng-router-store/datorama-akita-ng-router-store.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Store, StoreConfig, HashMap } from '@datorama/akita';\n\nexport type ActiveRouteState = {\n  url: string;\n  urlAfterRedirects: string;\n  fragment: string;\n  params: HashMap<any>;\n  queryParams: HashMap<any>;\n  data: HashMap<any>;\n  navigationExtras: HashMap<any> | undefined;\n};\n\nexport type RouterState = {\n  state: ActiveRouteState | null;\n  navigationId: number | null;\n};\n\nexport function createInitialRouterState(): RouterState {\n  return {\n    state: null,\n    navigationId: null\n  };\n}\n\n@Injectable({ providedIn: 'root' })\n@StoreConfig({ name: 'router' })\nexport class RouterStore extends Store<RouterState> {\n  constructor() {\n    super(createInitialRouterState());\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { filterNil, Query } from '@datorama/akita';\nimport { combineLatest, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, map, pluck } from 'rxjs/operators';\nimport { RouterState, RouterStore } from './router.store';\n\nfunction slice(section: string) {\n  return (source: Observable<RouterState>) => {\n    return source.pipe(map((data) => data.state)).pipe(\n      filterNil,\n      map((state) => state[section])\n    );\n  };\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RouterQuery extends Query<RouterState> {\n  __navigationCancel = new Subject();\n  __navigationError = new Subject();\n\n  constructor(protected store: RouterStore) {\n    super(store);\n  }\n\n  selectParams<T = any>(names: string[]): Observable<T[]>;\n  selectParams<T = any>(names?: string): Observable<T>;\n  selectParams<T = any>(names?: string | string[]): Observable<T | T[]> {\n    if (names === undefined) {\n      return this.select().pipe(slice('params'), distinctUntilChanged());\n    }\n\n    const select = (p: string) => this.select().pipe(slice('params'), pluck(p), distinctUntilChanged());\n\n    if (Array.isArray(names)) {\n      const sources = names.map(select);\n      return combineLatest(sources);\n    }\n\n    return select(names).pipe(distinctUntilChanged());\n  }\n\n  getParams<T = any>(name?: string): T | null {\n    if (this.getValue().state) {\n      const params = this.getValue().state.params;\n      if (name === undefined) {\n        return params as T;\n      }\n\n      return params[name];\n    }\n\n    return null;\n  }\n\n  selectQueryParams<T = any>(names: string[]): Observable<T[]>;\n  selectQueryParams<T = any>(names?: string): Observable<T>;\n  selectQueryParams<T = any>(names?: string | string[]): Observable<T | T[]> {\n    if (names === undefined) {\n      return this.select().pipe(slice('queryParams'), distinctUntilChanged());\n    }\n\n    const select = (p: string) => this.select().pipe(slice('queryParams'), pluck(p), distinctUntilChanged());\n\n    if (Array.isArray(names)) {\n      const sources = names.map(select);\n      return combineLatest(sources);\n    }\n\n    return select(names);\n  }\n\n  getQueryParams<T = any>(name?: string): T | null {\n    if (this.getValue().state) {\n      const params = this.getValue().state.queryParams;\n      if (name === undefined) {\n        return params as T;\n      }\n\n      return params[name];\n    }\n\n    return null;\n  }\n\n  selectFragment(): Observable<string> {\n    return this.select().pipe(slice('fragment'), distinctUntilChanged());\n  }\n\n  getFragment(): string | null {\n    if (this.getValue().state) {\n      return this.getValue().state.fragment;\n    }\n\n    return null;\n  }\n\n  selectData<T = any>(name?: string): Observable<T> {\n    if (name === undefined) {\n      return this.select().pipe(slice('data'), distinctUntilChanged());\n    }\n\n    return this.select().pipe(slice('data'), pluck(name), distinctUntilChanged());\n  }\n\n  getData<T = any>(name?: string): T | null {\n    if (this.getValue().state) {\n      const data = this.getValue().state.data;\n      if (name === undefined) {\n        return data as T;\n      }\n\n      return data[name];\n    }\n\n    return null;\n  }\n\n  selectNavigationExtras<T = any>(name?: string): Observable<T> {\n    if (name === undefined) {\n      return this.select().pipe(slice('navigationExtras'), distinctUntilChanged());\n    }\n\n    return this.select().pipe(slice('data'), pluck(name), distinctUntilChanged());\n  }\n\n  getNavigationExtras<T = any>(name?: string): T | null {\n    if (this.getValue().state) {\n      const data = this.getValue().state.navigationExtras;\n      if (name === undefined) {\n        return data as T;\n      }\n\n      return data[name];\n    }\n\n    return null;\n  }\n\n  selectNavigationCancel() {\n    return this.__navigationCancel.asObservable();\n  }\n\n  selectNavigationError() {\n    return this.__navigationError.asObservable();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, GuardsCheckEnd, NavigationCancel, NavigationEnd, NavigationError, ResolveEnd, Router, RoutesRecognized } from '@angular/router';\nimport { RouterState, RouterStore } from './router.store';\nimport { RouterQuery } from './router.query';\nimport { action, setSkipAction } from '@datorama/akita';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RouterService {\n  private dispatchTriggeredByRouter = false;\n  private navigationTriggeredByDispatch = false;\n  private lastRouterState: RouterState;\n\n  constructor(private routerStore: RouterStore, private routerQuery: RouterQuery, private router: Router) {}\n\n  @action('Navigation Cancelled')\n  dispatchRouterCancel(event: NavigationCancel) {\n    this.update({ navigationId: event.id });\n    this.routerQuery.__navigationCancel.next(event);\n  }\n\n  @action('Navigation Error')\n  dispatchRouterError(event: NavigationError) {\n    this.update({ navigationId: event.id });\n    this.routerQuery.__navigationError.next(event);\n  }\n\n  @action('Navigation Succeeded')\n  dispatchRouterSuccess() {\n    this.update(this.lastRouterState);\n  }\n\n  init() {\n    this.setUpStoreListener();\n    this.setUpStateRollbackEvents();\n  }\n\n  private update(routerState: Partial<RouterState>) {\n    this.dispatchTriggeredByRouter = true;\n    this.routerStore.update((state) => {\n      return {\n        ...state,\n        ...routerState,\n      };\n    });\n    this.dispatchTriggeredByRouter = false;\n    this.navigationTriggeredByDispatch = false;\n  }\n\n  private setUpStoreListener(): void {\n    this.routerQuery\n      .select((state) => state)\n      .subscribe((s) => {\n        this.lastRouterState = s;\n        this.navigateIfNeeded();\n      });\n  }\n\n  private navigateIfNeeded(): void {\n    if (!this.lastRouterState || !this.lastRouterState.state || this.dispatchTriggeredByRouter) {\n      return;\n    }\n\n    if (this.router.url !== this.lastRouterState.state.url) {\n      this.navigationTriggeredByDispatch = true;\n      setSkipAction();\n      this.router.navigateByUrl(this.lastRouterState.state.url);\n    }\n  }\n\n  private setUpStateRollbackEvents(): void {\n    this.router.events.subscribe((e) => {\n      if (e instanceof RoutesRecognized || e instanceof GuardsCheckEnd || e instanceof ResolveEnd) {\n        this.lastRouterState = this.serializeRoute(e);\n      } else if (e instanceof NavigationCancel) {\n        this.dispatchRouterCancel(e);\n      } else if (e instanceof NavigationError) {\n        this.dispatchRouterError(e);\n      } else if (e instanceof NavigationEnd && !this.navigationTriggeredByDispatch) {\n        this.dispatchRouterSuccess();\n      }\n    });\n  }\n\n  private serializeRoute(navigationEvent: RoutesRecognized | GuardsCheckEnd | ResolveEnd): RouterState {\n    let state: ActivatedRouteSnapshot = navigationEvent.state.root;\n    while (state.firstChild) {\n      state = state.firstChild;\n    }\n    const { params, data, queryParams, fragment } = state;\n\n    return {\n      navigationId: navigationEvent.id,\n      state: {\n        url: navigationEvent.url,\n        urlAfterRedirects: navigationEvent.urlAfterRedirects,\n        params,\n        queryParams,\n        fragment,\n        data,\n        navigationExtras: this.router.getCurrentNavigation().extras ? this.router.getCurrentNavigation().extras.state : {},\n      },\n    };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterService } from './router.service';\n\n@NgModule()\nexport class AkitaNgRouterStoreModule {\n  constructor(private routerService: RouterService) {\n    this.routerService.init();\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}