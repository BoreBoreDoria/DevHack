{"version":3,"file":"datorama-akita-ng-router-store.js","sources":["ng://@datorama/akita-ng-router-store/lib/router.store.ts","ng://@datorama/akita-ng-router-store/lib/router.query.ts","ng://@datorama/akita-ng-router-store/lib/router.service.ts","ng://@datorama/akita-ng-router-store/lib/router.module.ts","ng://@datorama/akita-ng-router-store/datorama-akita-ng-router-store.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Store, StoreConfig, HashMap } from '@datorama/akita';\n\nexport type ActiveRouteState = {\n  url: string;\n  urlAfterRedirects: string;\n  fragment: string;\n  params: HashMap<any>;\n  queryParams: HashMap<any>;\n  data: HashMap<any>;\n  navigationExtras: HashMap<any> | undefined;\n};\n\nexport type RouterState = {\n  state: ActiveRouteState | null;\n  navigationId: number | null;\n};\n\nexport function createInitialRouterState(): RouterState {\n  return {\n    state: null,\n    navigationId: null\n  };\n}\n\n@Injectable({ providedIn: 'root' })\n@StoreConfig({ name: 'router' })\nexport class RouterStore extends Store<RouterState> {\n  constructor() {\n    super(createInitialRouterState());\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { filterNil, Query } from '@datorama/akita';\nimport { combineLatest, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, map, pluck } from 'rxjs/operators';\nimport { RouterState, RouterStore } from './router.store';\n\nfunction slice(section: string) {\n  return (source: Observable<RouterState>) => {\n    return source.pipe(map((data) => data.state)).pipe(\n      filterNil,\n      map((state) => state[section])\n    );\n  };\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RouterQuery extends Query<RouterState> {\n  __navigationCancel = new Subject();\n  __navigationError = new Subject();\n\n  constructor(protected store: RouterStore) {\n    super(store);\n  }\n\n  selectParams<T = any>(names: string[]): Observable<T[]>;\n  selectParams<T = any>(names?: string): Observable<T>;\n  selectParams<T = any>(names?: string | string[]): Observable<T | T[]> {\n    if (names === undefined) {\n      return this.select().pipe(slice('params'), distinctUntilChanged());\n    }\n\n    const select = (p: string) => this.select().pipe(slice('params'), pluck(p), distinctUntilChanged());\n\n    if (Array.isArray(names)) {\n      const sources = names.map(select);\n      return combineLatest(sources);\n    }\n\n    return select(names).pipe(distinctUntilChanged());\n  }\n\n  getParams<T = any>(name?: string): T | null {\n    if (this.getValue().state) {\n      const params = this.getValue().state.params;\n      if (name === undefined) {\n        return params as T;\n      }\n\n      return params[name];\n    }\n\n    return null;\n  }\n\n  selectQueryParams<T = any>(names: string[]): Observable<T[]>;\n  selectQueryParams<T = any>(names?: string): Observable<T>;\n  selectQueryParams<T = any>(names?: string | string[]): Observable<T | T[]> {\n    if (names === undefined) {\n      return this.select().pipe(slice('queryParams'), distinctUntilChanged());\n    }\n\n    const select = (p: string) => this.select().pipe(slice('queryParams'), pluck(p), distinctUntilChanged());\n\n    if (Array.isArray(names)) {\n      const sources = names.map(select);\n      return combineLatest(sources);\n    }\n\n    return select(names);\n  }\n\n  getQueryParams<T = any>(name?: string): T | null {\n    if (this.getValue().state) {\n      const params = this.getValue().state.queryParams;\n      if (name === undefined) {\n        return params as T;\n      }\n\n      return params[name];\n    }\n\n    return null;\n  }\n\n  selectFragment(): Observable<string> {\n    return this.select().pipe(slice('fragment'), distinctUntilChanged());\n  }\n\n  getFragment(): string | null {\n    if (this.getValue().state) {\n      return this.getValue().state.fragment;\n    }\n\n    return null;\n  }\n\n  selectData<T = any>(name?: string): Observable<T> {\n    if (name === undefined) {\n      return this.select().pipe(slice('data'), distinctUntilChanged());\n    }\n\n    return this.select().pipe(slice('data'), pluck(name), distinctUntilChanged());\n  }\n\n  getData<T = any>(name?: string): T | null {\n    if (this.getValue().state) {\n      const data = this.getValue().state.data;\n      if (name === undefined) {\n        return data as T;\n      }\n\n      return data[name];\n    }\n\n    return null;\n  }\n\n  selectNavigationExtras<T = any>(name?: string): Observable<T> {\n    if (name === undefined) {\n      return this.select().pipe(slice('navigationExtras'), distinctUntilChanged());\n    }\n\n    return this.select().pipe(slice('data'), pluck(name), distinctUntilChanged());\n  }\n\n  getNavigationExtras<T = any>(name?: string): T | null {\n    if (this.getValue().state) {\n      const data = this.getValue().state.navigationExtras;\n      if (name === undefined) {\n        return data as T;\n      }\n\n      return data[name];\n    }\n\n    return null;\n  }\n\n  selectNavigationCancel() {\n    return this.__navigationCancel.asObservable();\n  }\n\n  selectNavigationError() {\n    return this.__navigationError.asObservable();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, GuardsCheckEnd, NavigationCancel, NavigationEnd, NavigationError, ResolveEnd, Router, RoutesRecognized } from '@angular/router';\nimport { RouterState, RouterStore } from './router.store';\nimport { RouterQuery } from './router.query';\nimport { action, setSkipAction } from '@datorama/akita';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RouterService {\n  private dispatchTriggeredByRouter = false;\n  private navigationTriggeredByDispatch = false;\n  private lastRouterState: RouterState;\n\n  constructor(private routerStore: RouterStore, private routerQuery: RouterQuery, private router: Router) {}\n\n  @action('Navigation Cancelled')\n  dispatchRouterCancel(event: NavigationCancel) {\n    this.update({ navigationId: event.id });\n    this.routerQuery.__navigationCancel.next(event);\n  }\n\n  @action('Navigation Error')\n  dispatchRouterError(event: NavigationError) {\n    this.update({ navigationId: event.id });\n    this.routerQuery.__navigationError.next(event);\n  }\n\n  @action('Navigation Succeeded')\n  dispatchRouterSuccess() {\n    this.update(this.lastRouterState);\n  }\n\n  init() {\n    this.setUpStoreListener();\n    this.setUpStateRollbackEvents();\n  }\n\n  private update(routerState: Partial<RouterState>) {\n    this.dispatchTriggeredByRouter = true;\n    this.routerStore.update((state) => {\n      return {\n        ...state,\n        ...routerState,\n      };\n    });\n    this.dispatchTriggeredByRouter = false;\n    this.navigationTriggeredByDispatch = false;\n  }\n\n  private setUpStoreListener(): void {\n    this.routerQuery\n      .select((state) => state)\n      .subscribe((s) => {\n        this.lastRouterState = s;\n        this.navigateIfNeeded();\n      });\n  }\n\n  private navigateIfNeeded(): void {\n    if (!this.lastRouterState || !this.lastRouterState.state || this.dispatchTriggeredByRouter) {\n      return;\n    }\n\n    if (this.router.url !== this.lastRouterState.state.url) {\n      this.navigationTriggeredByDispatch = true;\n      setSkipAction();\n      this.router.navigateByUrl(this.lastRouterState.state.url);\n    }\n  }\n\n  private setUpStateRollbackEvents(): void {\n    this.router.events.subscribe((e) => {\n      if (e instanceof RoutesRecognized || e instanceof GuardsCheckEnd || e instanceof ResolveEnd) {\n        this.lastRouterState = this.serializeRoute(e);\n      } else if (e instanceof NavigationCancel) {\n        this.dispatchRouterCancel(e);\n      } else if (e instanceof NavigationError) {\n        this.dispatchRouterError(e);\n      } else if (e instanceof NavigationEnd && !this.navigationTriggeredByDispatch) {\n        this.dispatchRouterSuccess();\n      }\n    });\n  }\n\n  private serializeRoute(navigationEvent: RoutesRecognized | GuardsCheckEnd | ResolveEnd): RouterState {\n    let state: ActivatedRouteSnapshot = navigationEvent.state.root;\n    while (state.firstChild) {\n      state = state.firstChild;\n    }\n    const { params, data, queryParams, fragment } = state;\n\n    return {\n      navigationId: navigationEvent.id,\n      state: {\n        url: navigationEvent.url,\n        urlAfterRedirects: navigationEvent.urlAfterRedirects,\n        params,\n        queryParams,\n        fragment,\n        data,\n        navigationExtras: this.router.getCurrentNavigation().extras ? this.router.getCurrentNavigation().extras.state : {},\n      },\n    };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterService } from './router.service';\n\n@NgModule()\nexport class AkitaNgRouterStoreModule {\n  constructor(private routerService: RouterService) {\n    this.routerService.init();\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}