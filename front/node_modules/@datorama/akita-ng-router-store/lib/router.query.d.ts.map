{"version":3,"file":"router.query.d.ts","sources":["router.query.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { Query } from '@datorama/akita';\nimport { Observable, Subject } from 'rxjs';\nimport { RouterState, RouterStore } from './router.store';\nexport declare class RouterQuery extends Query<RouterState> {\n    protected store: RouterStore;\n    __navigationCancel: Subject<unknown>;\n    __navigationError: Subject<unknown>;\n    constructor(store: RouterStore);\n    selectParams<T = any>(names: string[]): Observable<T[]>;\n    selectParams<T = any>(names?: string): Observable<T>;\n    getParams<T = any>(name?: string): T | null;\n    selectQueryParams<T = any>(names: string[]): Observable<T[]>;\n    selectQueryParams<T = any>(names?: string): Observable<T>;\n    getQueryParams<T = any>(name?: string): T | null;\n    selectFragment(): Observable<string>;\n    getFragment(): string | null;\n    selectData<T = any>(name?: string): Observable<T>;\n    getData<T = any>(name?: string): T | null;\n    selectNavigationExtras<T = any>(name?: string): Observable<T>;\n    getNavigationExtras<T = any>(name?: string): T | null;\n    selectNavigationCancel(): Observable<unknown>;\n    selectNavigationError(): Observable<unknown>;\n}\n"]}