{"version":3,"file":"router.query.js","sourceRoot":"ng://@datorama/akita-ng-router-store/","sources":["lib/router.query.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,iBAAiB,CAAC;AACnD,OAAO,EAAE,aAAa,EAAc,OAAO,EAAE,MAAM,MAAM,CAAC;AAC1D,OAAO,EAAE,oBAAoB,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,gBAAgB,CAAC;AAClE,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;;;AAE1D,SAAS,KAAK,CAAC,OAAe;IAC5B,OAAO,UAAC,MAA+B;QACrC,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,KAAK,EAAV,CAAU,CAAC,CAAC,CAAC,IAAI,CAChD,SAAS,EACT,GAAG,CAAC,UAAC,KAAK,IAAK,OAAA,KAAK,CAAC,OAAO,CAAC,EAAd,CAAc,CAAC,CAC/B,CAAC;IACJ,CAAC,CAAC;AACJ,CAAC;AAED;IAGiC,+BAAkB;IAIjD,qBAAsB,KAAkB;QAAxC,YACE,kBAAM,KAAK,CAAC,SACb;QAFqB,WAAK,GAAL,KAAK,CAAa;QAHxC,wBAAkB,GAAG,IAAI,OAAO,EAAE,CAAC;QACnC,uBAAiB,GAAG,IAAI,OAAO,EAAE,CAAC;;IAIlC,CAAC;IAID,kCAAY,GAAZ,UAAsB,KAAyB;QAA/C,iBAaC;QAZC,IAAI,KAAK,KAAK,SAAS,EAAE;YACvB,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,oBAAoB,EAAE,CAAC,CAAC;SACpE;QAED,IAAM,MAAM,GAAG,UAAC,CAAS,IAAK,OAAA,KAAI,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,oBAAoB,EAAE,CAAC,EAArE,CAAqE,CAAC;QAEpG,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACxB,IAAM,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAClC,OAAO,aAAa,CAAC,OAAO,CAAC,CAAC;SAC/B;QAED,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC;IACpD,CAAC;IAED,+BAAS,GAAT,UAAmB,IAAa;QAC9B,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC,KAAK,EAAE;YACzB,IAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC;YAC5C,IAAI,IAAI,KAAK,SAAS,EAAE;gBACtB,OAAO,MAAW,CAAC;aACpB;YAED,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC;SACrB;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAID,uCAAiB,GAAjB,UAA2B,KAAyB;QAApD,iBAaC;QAZC,IAAI,KAAK,KAAK,SAAS,EAAE;YACvB,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE,oBAAoB,EAAE,CAAC,CAAC;SACzE;QAED,IAAM,MAAM,GAAG,UAAC,CAAS,IAAK,OAAA,KAAI,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,oBAAoB,EAAE,CAAC,EAA1E,CAA0E,CAAC;QAEzG,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACxB,IAAM,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAClC,OAAO,aAAa,CAAC,OAAO,CAAC,CAAC;SAC/B;QAED,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC;IACvB,CAAC;IAED,oCAAc,GAAd,UAAwB,IAAa;QACnC,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC,KAAK,EAAE;YACzB,IAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC;YACjD,IAAI,IAAI,KAAK,SAAS,EAAE;gBACtB,OAAO,MAAW,CAAC;aACpB;YAED,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC;SACrB;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAED,oCAAc,GAAd;QACE,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE,oBAAoB,EAAE,CAAC,CAAC;IACvE,CAAC;IAED,iCAAW,GAAX;QACE,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC,KAAK,EAAE;YACzB,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC;SACvC;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAED,gCAAU,GAAV,UAAoB,IAAa;QAC/B,IAAI,IAAI,KAAK,SAAS,EAAE;YACtB,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,oBAAoB,EAAE,CAAC,CAAC;SAClE;QAED,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,oBAAoB,EAAE,CAAC,CAAC;IAChF,CAAC;IAED,6BAAO,GAAP,UAAiB,IAAa;QAC5B,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC,KAAK,EAAE;YACzB,IAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC;YACxC,IAAI,IAAI,KAAK,SAAS,EAAE;gBACtB,OAAO,IAAS,CAAC;aAClB;YAED,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC;SACnB;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAED,4CAAsB,GAAtB,UAAgC,IAAa;QAC3C,IAAI,IAAI,KAAK,SAAS,EAAE;YACtB,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,EAAE,oBAAoB,EAAE,CAAC,CAAC;SAC9E;QAED,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,oBAAoB,EAAE,CAAC,CAAC;IAChF,CAAC;IAED,yCAAmB,GAAnB,UAA6B,IAAa;QACxC,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC,KAAK,EAAE;YACzB,IAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,gBAAgB,CAAC;YACpD,IAAI,IAAI,KAAK,SAAS,EAAE;gBACtB,OAAO,IAAS,CAAC;aAClB;YAED,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC;SACnB;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAED,4CAAsB,GAAtB;QACE,OAAO,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;IAChD,CAAC;IAED,2CAAqB,GAArB;QACE,OAAO,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;IAC/C,CAAC;;gBA5H4B,WAAW;;;;gBAPzC,UAAU,SAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;gBAbqB,WAAW;;sBAJjC;CAmJC,AApID,CAGiC,KAAK,GAiIrC;SAjIY,WAAW","sourcesContent":["import { Injectable } from '@angular/core';\nimport { filterNil, Query } from '@datorama/akita';\nimport { combineLatest, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, map, pluck } from 'rxjs/operators';\nimport { RouterState, RouterStore } from './router.store';\n\nfunction slice(section: string) {\n  return (source: Observable<RouterState>) => {\n    return source.pipe(map((data) => data.state)).pipe(\n      filterNil,\n      map((state) => state[section])\n    );\n  };\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RouterQuery extends Query<RouterState> {\n  __navigationCancel = new Subject();\n  __navigationError = new Subject();\n\n  constructor(protected store: RouterStore) {\n    super(store);\n  }\n\n  selectParams<T = any>(names: string[]): Observable<T[]>;\n  selectParams<T = any>(names?: string): Observable<T>;\n  selectParams<T = any>(names?: string | string[]): Observable<T | T[]> {\n    if (names === undefined) {\n      return this.select().pipe(slice('params'), distinctUntilChanged());\n    }\n\n    const select = (p: string) => this.select().pipe(slice('params'), pluck(p), distinctUntilChanged());\n\n    if (Array.isArray(names)) {\n      const sources = names.map(select);\n      return combineLatest(sources);\n    }\n\n    return select(names).pipe(distinctUntilChanged());\n  }\n\n  getParams<T = any>(name?: string): T | null {\n    if (this.getValue().state) {\n      const params = this.getValue().state.params;\n      if (name === undefined) {\n        return params as T;\n      }\n\n      return params[name];\n    }\n\n    return null;\n  }\n\n  selectQueryParams<T = any>(names: string[]): Observable<T[]>;\n  selectQueryParams<T = any>(names?: string): Observable<T>;\n  selectQueryParams<T = any>(names?: string | string[]): Observable<T | T[]> {\n    if (names === undefined) {\n      return this.select().pipe(slice('queryParams'), distinctUntilChanged());\n    }\n\n    const select = (p: string) => this.select().pipe(slice('queryParams'), pluck(p), distinctUntilChanged());\n\n    if (Array.isArray(names)) {\n      const sources = names.map(select);\n      return combineLatest(sources);\n    }\n\n    return select(names);\n  }\n\n  getQueryParams<T = any>(name?: string): T | null {\n    if (this.getValue().state) {\n      const params = this.getValue().state.queryParams;\n      if (name === undefined) {\n        return params as T;\n      }\n\n      return params[name];\n    }\n\n    return null;\n  }\n\n  selectFragment(): Observable<string> {\n    return this.select().pipe(slice('fragment'), distinctUntilChanged());\n  }\n\n  getFragment(): string | null {\n    if (this.getValue().state) {\n      return this.getValue().state.fragment;\n    }\n\n    return null;\n  }\n\n  selectData<T = any>(name?: string): Observable<T> {\n    if (name === undefined) {\n      return this.select().pipe(slice('data'), distinctUntilChanged());\n    }\n\n    return this.select().pipe(slice('data'), pluck(name), distinctUntilChanged());\n  }\n\n  getData<T = any>(name?: string): T | null {\n    if (this.getValue().state) {\n      const data = this.getValue().state.data;\n      if (name === undefined) {\n        return data as T;\n      }\n\n      return data[name];\n    }\n\n    return null;\n  }\n\n  selectNavigationExtras<T = any>(name?: string): Observable<T> {\n    if (name === undefined) {\n      return this.select().pipe(slice('navigationExtras'), distinctUntilChanged());\n    }\n\n    return this.select().pipe(slice('data'), pluck(name), distinctUntilChanged());\n  }\n\n  getNavigationExtras<T = any>(name?: string): T | null {\n    if (this.getValue().state) {\n      const data = this.getValue().state.navigationExtras;\n      if (name === undefined) {\n        return data as T;\n      }\n\n      return data[name];\n    }\n\n    return null;\n  }\n\n  selectNavigationCancel() {\n    return this.__navigationCancel.asObservable();\n  }\n\n  selectNavigationError() {\n    return this.__navigationError.asObservable();\n  }\n}\n"]}