{"version":3,"file":"ngxf-socket.io.umd.js","sources":["ng://@ngxf/socket.io/lib/directives/socket.io.directive.ts","ng://@ngxf/socket.io/lib/directives/socket.io.on.directive.ts","ng://@ngxf/socket.io/lib/socket.io.module.ts"],"sourcesContent":["import { Directive, Input, TemplateRef, ViewContainerRef, EmbeddedViewRef, SimpleChanges, OnChanges, OnDestroy } from '@angular/core';\nimport * as io_ from 'socket.io-client';\n\n/**\n * Fixes for rollup:\n * Error: Cannot call a namespace ('io')\n */\nconst io = io_;\n\ninterface SocketIOContext {\n  $implicit: SocketIOClient.Socket;\n}\n\n@Directive({\n  selector: '[socketIO]'\n})\nexport class SocketIODirective implements OnChanges, OnDestroy {\n  @Input() socketIOOf: string;\n\n  private context: SocketIOContext = {\n    $implicit: null\n  };\n  private socket: SocketIOClient.Socket;\n  private viewRef: EmbeddedViewRef<SocketIOContext>;\n\n  constructor(\n    private templateRef: TemplateRef<SocketIOContext>,\n    private vcr: ViewContainerRef\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.socketIOOf && this.socketIOOf) {\n      this.destroy();\n      this.init();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy();\n  }\n\n  private init() {\n    this.context.$implicit = this.socket = io(this.socketIOOf);\n    this.vcr.createEmbeddedView(this.templateRef, this.context);\n  }\n\n  private destroy() {\n    this.vcr.clear();\n    if (this.viewRef) {\n      this.viewRef.destroy();\n      this.viewRef = null;\n    }\n    if (this.socket) {\n      this.socket.disconnect();\n      this.context.$implicit = this.socket = null;\n    }\n  }\n}\n","import { Directive, EmbeddedViewRef, Input, OnChanges, OnDestroy, SimpleChanges, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { fromEvent, SubscriptionLike } from 'rxjs';\n\nimport 'socket.io-client';\n\ninterface SocketIOOnContext {\n  $implicit: any;\n}\n\n@Directive({\n  selector: '[socketIOOn]'\n})\nexport class SocketIOOnDirective implements OnChanges, OnDestroy {\n  @Input() socketIOOnOn: string;\n  @Input() socketIOOnFrom: SocketIOClient.Socket;\n\n  private context: SocketIOOnContext = {\n    $implicit: null\n  };\n  private subscription: SubscriptionLike;\n  private viewRef: EmbeddedViewRef<SocketIOOnContext>;\n\n  constructor(\n    private templateRef: TemplateRef<SocketIOOnContext>,\n    private vcr: ViewContainerRef\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.socketIOOnOn || changes.socketIOOnFrom) {\n      this.destroy();\n      if (this.socketIOOnOn && this.socketIOOnFrom) {\n        if (\n          changes.socketIOOnOn.previousValue !== this.socketIOOnOn ||\n          changes.socketIOOnFrom.previousValue !== this.socketIOOnFrom\n        ) {\n          this.init();\n        }\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy();\n  }\n\n  private init() {\n    this.subscription = fromEvent(this.socketIOOnFrom, this.socketIOOnOn)\n      .subscribe((value: any) => {\n        this.context.$implicit = value;\n        this.viewRef = this.templateRef.createEmbeddedView(this.context);\n        this.viewRef.detectChanges();\n        if (this.viewRef) {\n          this.viewRef.destroy();\n          this.viewRef = null;\n        }\n      });\n  }\n\n  private destroy() {\n    this.vcr.clear();\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      this.subscription = null;\n    }\n    if (this.viewRef) {\n      this.viewRef.destroy();\n      this.viewRef = null;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { SocketIODirective } from './directives/socket.io.directive';\nimport { SocketIOOnDirective } from './directives/socket.io.on.directive';\n\nconst DIRECTIVES = [\n  SocketIODirective,\n  SocketIOOnDirective\n];\n\n@NgModule({\n  declarations: [ DIRECTIVES ],\n  exports: [ DIRECTIVES ]\n})\nexport class NgxfSocketIOModule {}\n\nexport { SocketIODirective } from './directives/socket.io.directive';\nexport { SocketIOOnDirective } from './directives/socket.io.on.directive';\n"],"names":["Directive","TemplateRef","ViewContainerRef","Input","fromEvent","NgModule"],"mappings":"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"}