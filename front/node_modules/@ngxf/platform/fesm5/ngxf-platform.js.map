{"version":3,"file":"ngxf-platform.js","sources":["ng://@ngxf/platform/lib/directives/async.directive.ts","ng://@ngxf/platform/lib/tools/utils/index.ts","ng://@ngxf/platform/lib/tools/recompose/composed.view.ts","ng://@ngxf/platform/lib/directives/compose.directive.ts","ng://@ngxf/platform/lib/tools/cookies.tools.ts","ng://@ngxf/platform/lib/directives/cookies.directive.ts","ng://@ngxf/platform/lib/directives/http.directive.ts","ng://@ngxf/platform/lib/directives/init.directive.ts","ng://@ngxf/platform/lib/directives/is-dev-mode.directive.ts","ng://@ngxf/platform/lib/directives/keep-alive.directive.ts","ng://@ngxf/platform/lib/directives/lazy.directive.ts","ng://@ngxf/platform/lib/directives/nest.directive.ts","ng://@ngxf/platform/lib/directives/rename-prop.directive.ts","ng://@ngxf/platform/lib/directives/repeat.directive.ts","ng://@ngxf/platform/lib/directives/return.directive.ts","ng://@ngxf/platform/lib/directives/route.directive.ts","ng://@ngxf/platform/lib/directives/set-props.directive.ts","ng://@ngxf/platform/lib/directives/timeout.directive.ts","ng://@ngxf/platform/lib/directives/track-by-key.directive.ts","ng://@ngxf/platform/lib/directives/use-effect.directive.ts","ng://@ngxf/platform/lib/directives/use-reducer.directive.ts","ng://@ngxf/platform/lib/directives/use-state.directive.ts","ng://@ngxf/platform/lib/tools/virtual.handler.ts","ng://@ngxf/platform/lib/directives/virtual.directive.ts","ng://@ngxf/platform/lib/pipes/call.pipe.ts","ng://@ngxf/platform/lib/pipes/console.pipe.ts","ng://@ngxf/platform/lib/ivy-hooks/use-effect.hook.ts","ng://@ngxf/platform/lib/ivy-hooks/use-reducer.hook.ts","ng://@ngxf/platform/lib/ivy-hooks/use-state.hook.ts","ng://@ngxf/platform/lib/platform.module.ts"],"sourcesContent":["import {\n  ChangeDetectorRef,\n  Directive,\n  EmbeddedViewRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\nimport { isObservable, Observable, SubscriptionLike } from 'rxjs';\n\ntype ObservableOrPromise<T> = Observable<T> | Promise<T>;\n\ninterface AsyncContext {\n  $implicit: any;\n}\n\ninterface SubscriptionStrategy {\n  createSubscription(async: ObservableOrPromise<any>, next: any, error: any, complete: any): SubscriptionLike | Promise<any>;\n\n  dispose(subscription: SubscriptionLike | Promise<any>): void;\n}\n\nclass ObservableStrategy implements SubscriptionStrategy {\n  createSubscription(async: Observable<any>, next: any, error: any, complete: any): SubscriptionLike {\n    return async.subscribe(next, error, complete);\n  }\n\n  dispose(subscription: SubscriptionLike): void {\n    if (subscription) {\n      subscription.unsubscribe();\n    }\n  }\n}\n\nclass PromiseStrategy implements SubscriptionStrategy {\n  createSubscription(async: Promise<any>, next: any, error: any, complete: any): Promise<any> {\n    const promise = async.then(next, error);\n\n    if ('finally' in promise) {\n      return (promise as any).finally(complete);\n    }\n\n    return promise;\n  }\n\n  dispose(subscription: Promise<any>): void {}\n}\n\nconst observableStrategy = new ObservableStrategy();\nconst promiseStrategy = new PromiseStrategy();\n\nfunction resolveStrategy(async: ObservableOrPromise<any>): SubscriptionStrategy {\n  if (isObservable(async)) {\n    return observableStrategy;\n  }\n\n  if (isPromise(async)) {\n    return promiseStrategy;\n  }\n\n  throw new Error(`InvalidDirectiveArgument: 'async' for directive 'async'`);\n}\n\n@Directive({ selector: '[async]' })\nexport class AsyncDirective implements OnChanges, OnDestroy {\n\n  @Input() async: ObservableOrPromise<any>;\n  @Input() asyncFrom: ObservableOrPromise<any>;\n  @Input() asyncNext: (value: any) => void;\n  @Input() asyncError: (error: any) => void;\n  @Input() asyncComplete: () => void;\n\n  @Output() next: EventEmitter<any> = new EventEmitter<any>();\n  @Output() error: EventEmitter<any> = new EventEmitter<any>();\n  @Output() complete: EventEmitter<any> = new EventEmitter<any>();\n\n  private context: AsyncContext = { $implicit: null };\n  private viewRef: EmbeddedViewRef<AsyncContext> =\n    this.viewContainer.createEmbeddedView(this.templateRef, this.context);\n  private componentInstance: any;\n\n  private strategy: SubscriptionStrategy;\n  private subscription: SubscriptionLike | Promise<any>;\n\n  constructor(\n    private templateRef: TemplateRef<AsyncContext>,\n    private viewContainer: ViewContainerRef,\n    private cd: ChangeDetectorRef\n  ) {\n    this.componentInstance = (cd as EmbeddedViewRef<any>).context;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ('async' in changes) {\n      this.onAsyncDidChanged(this.async, changes.async.previousValue);\n    }\n    if ('asyncFrom' in changes) {\n      this.onAsyncDidChanged(this.asyncFrom, changes.asyncFrom.previousValue);\n    }\n  }\n\n  ngOnDestroy() {\n    this.dispose();\n    this.viewContainer.clear();\n    if (this.viewRef) {\n      this.viewRef.destroy();\n      this.viewRef = null;\n    }\n  }\n\n  private onAsyncDidChanged(current: ObservableOrPromise<any>, previous: ObservableOrPromise<any>): void {\n    if (!this.subscription) {\n      return current && this.subscribe(current);\n    }\n\n    if (current !== previous) {\n      this.dispose();\n      return this.onAsyncDidChanged(current, null);\n    }\n  }\n\n  private subscribe(async: ObservableOrPromise<any>) {\n    this.strategy = resolveStrategy(async);\n    this.subscription = this.strategy.createSubscription(\n      async,\n      (value: any) => this.onNext(value),\n      (error: any) => this.onError(error),\n      () => this.onComplete()\n    );\n  }\n\n  private onNext(value: any): void {\n    this.context.$implicit = value;\n    this.next.emit(value);\n    if (isFunction(this.asyncNext)) {\n      this.asyncNext.call(this.componentInstance, value);\n    }\n    this.viewRef.markForCheck();\n  }\n\n  private onError(error: any): void {\n    this.error.emit(error);\n    if (isFunction(this.asyncError)) {\n      this.asyncError.call(this.componentInstance, error);\n    }\n  }\n\n  private onComplete(): void {\n    this.complete.next();\n    if (isFunction(this.asyncComplete)) {\n      this.asyncComplete.call(this.componentInstance);\n    }\n  }\n\n  private dispose(): void {\n    if (this.strategy) {\n      this.strategy.dispose(this.subscription);\n      this.subscription = null;\n      this.strategy = null;\n    }\n  }\n\n}\n\nfunction isFunction(value: any): value is Function {\n  return typeof value === 'function';\n}\n\nfunction isPromise<T>(value: any): value is Promise<T> {\n  return value && typeof value.subscribe !== 'function' && typeof value.then === 'function';\n}\n","export function omit(obj, fields) {\n  const shallowCopy = {\n    ...obj,\n  };\n  for (let i = 0; i < fields.length; i++) {\n    const key = fields[i];\n    delete shallowCopy[key];\n  }\n  return shallowCopy;\n}\n","import { ElementRef, EmbeddedViewRef, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { omit } from '../utils';\n\nexport const PARENT_CONTEXT_TOKEN = Symbol('[PARENT_CONTEXT_TOKEN]');\n\nexport interface ComposedContext {\n  [ PARENT_CONTEXT_TOKEN ]: TemplateRef<ComposedContext>[];\n  children: ComposedView<ComposedContext>;\n\n  [ key: string ]: any;\n}\n\nexport class ComposedView<C> {\n\n  elementRef: ElementRef;\n\n  private context: ComposedContext;\n  private viewRef: EmbeddedViewRef<ComposedContext>;\n\n  constructor(private viewContainerRef: ViewContainerRef, private templateRefs?: TemplateRef<any>[]) {}\n\n  createEmbeddedView(context: C): EmbeddedViewRef<C> {\n    const [ templateRef, ...tail ] = this.getParentTemplateRefs();\n    this.context = context as any as ComposedContext;\n    if (tail.length > 0) {\n      this.elementRef = templateRef.elementRef;\n      this.context[ PARENT_CONTEXT_TOKEN ] = tail;\n      this.context.children = new ComposedView<ComposedContext>(this.viewContainerRef, tail);\n    }\n    this.viewRef =\n      this.viewContainerRef.createEmbeddedView(templateRef, this.context);\n\n    return this.viewRef as any as EmbeddedViewRef<C>;\n  }\n\n  markForCheck(): void {\n    if (this.viewRef) {\n      this.viewRef.markForCheck();\n    }\n  }\n\n  detectChanges(): void {\n    if (this.viewRef) {\n      this.viewRef.detectChanges();\n    }\n  }\n\n  updateContext(update: (context: any, parent: any) => any) {\n    const parent = this.getHydratedParentContext();\n    update(this.context, parent);\n    this.markForCheck();\n  }\n\n  destroy() {\n    if (this.viewRef && !this.viewRef.destroyed) {\n      this.viewRef.destroy();\n    }\n    this.viewRef = null;\n  }\n\n  private getParentTemplateRefs(): TemplateRef<ComposedContext>[] {\n    if (this.templateRefs) {\n      return this.templateRefs;\n    }\n\n    const view = (this.viewContainerRef.injector as any).view;\n    const context: ComposedContext = findParentContext(view);\n    return context[ PARENT_CONTEXT_TOKEN ];\n  }\n\n  private getHydratedParentContext(): any {\n    const view = (this.viewContainerRef.injector as any).view;\n    return omit(findParentContext(view), [ PARENT_CONTEXT_TOKEN, 'children' ]);\n  }\n}\n\nexport function findParentContext(view: any): ComposedContext {\n  const context: any = view.context;\n\n  if (isParentContext(context)) {\n    return context;\n  }\n\n  return findParentContext(view.parent);\n}\n\nexport function isParentContext(context: any): context is ComposedContext {\n  return context && PARENT_CONTEXT_TOKEN in context;\n}\n","import { Directive, EmbeddedViewRef, Input, OnChanges, OnDestroy, SimpleChanges, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { ComposedView } from '../tools/recompose/composed.view';\n\ninterface ComposeContext {\n  $implicit: ComposeFn<any>;\n  compose: ComposeFn<any>;\n}\n\ntype ComposeFn<T> = (templateRef: TemplateRef<T> | ComposedView<T>) => ComposedView<T>;\n\n@Directive({ selector: '[compose]' })\nexport class ComposeDirective implements OnChanges, OnDestroy {\n\n  @Input() compose: TemplateRef<any>[];\n  @Input() composeOf: TemplateRef<any>[];\n\n  private context: ComposeContext = { $implicit: null, compose: null };\n  private viewRef: EmbeddedViewRef<ComposeContext>;\n\n  constructor(\n    private templateRef: TemplateRef<ComposeContext>,\n    private viewContainerRef: ViewContainerRef\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ('compose' in changes) {\n      this.onTemplateRefsDidChanged(this.compose, changes.compose.previousValue);\n    }\n\n    if ('composeOf' in changes) {\n      this.onTemplateRefsDidChanged(this.composeOf, changes.composeOf.previousValue);\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy();\n  }\n\n  private onTemplateRefsDidChanged(current: TemplateRef<any>[], previous: TemplateRef<any>[]): void {\n    if (!this.viewRef) {\n      return this.create(current);\n    }\n\n    if (this.viewRef.destroyed || current !== previous) {\n      this.destroy();\n      return this.onTemplateRefsDidChanged(current, null);\n    }\n  }\n\n  private create(templateRefs) {\n    this.context.compose = this.context.$implicit = this.createComposeFn(templateRefs);\n    this.viewRef =\n      this.viewContainerRef.createEmbeddedView(this.templateRef, this.context);\n  }\n\n  private destroy() {\n    if (this.viewRef && !this.viewRef.destroyed) {\n      this.viewRef.destroy();\n    }\n\n    this.viewRef = null;\n  }\n\n  private createComposeFn(templateRefs: TemplateRef<any>[]): ComposeFn<any> {\n    return (templateRef: TemplateRef<any> | ComposedView<any>): ComposedView<any> => {\n      return new ComposedView<any>(\n        this.viewContainerRef,\n        [ ...templateRefs, templateRef ]\n      );\n    };\n  }\n}\n","import { Inject, Injectable, Optional } from '@angular/core';\r\nimport { APP_BASE_HREF } from '@angular/common';\r\n\r\nexport interface CookieOptionsArgs {\r\n    path?: string;\r\n    domain?: string;\r\n    expires?: string | Date;\r\n    secure?: boolean;\r\n}\r\n\r\nexport interface ICookies {\r\n    [key: string]: string[];\r\n}\r\n\r\nexport interface ICookieService {\r\n    get(key: string): string;\r\n    set(key: string, value: string, options?: CookieOptionsArgs): void;\r\n    remove(key: string, options?: CookieOptionsArgs): void;\r\n}\r\n\r\nexport class CookieOptions {\r\n\r\n    public path: string;\r\n    public domain: string;\r\n    public expires: string | Date;\r\n    public secure: boolean;\r\n\r\n    constructor({ path, domain, expires, secure }: CookieOptionsArgs = {}) {\r\n        this.path = this.isPresent(path) ? path : null;\r\n        this.domain = this.isPresent(domain) ? domain : null;\r\n        this.expires = this.isPresent(expires) ? expires : null;\r\n        this.secure = this.isPresent(secure) ? secure : false;\r\n    }\r\n\r\n    public merge(options?: CookieOptionsArgs): CookieOptions {\r\n        return new CookieOptions(<CookieOptionsArgs>{\r\n            path: this.isPresent(options) && this.isPresent(options.path) ? options.path : this.path,\r\n            domain: this.isPresent(options) && this.isPresent(options.domain) ? options.domain : this.domain,\r\n            expires: this.isPresent(options) && this.isPresent(options.expires) ? options.expires : this.expires,\r\n            secure: this.isPresent(options) && this.isPresent(options.secure) ? options.secure : this.secure,\r\n        });\r\n    }\r\n\r\n    private isPresent(obj: any): boolean {\r\n        return obj !== undefined && obj !== null;\r\n    }\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class BaseCookieOptions extends CookieOptions {\r\n    constructor(@Optional() @Inject(APP_BASE_HREF) private baseHref: string) {\r\n        super({ path: baseHref || '/' });\r\n    }\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CookiesService implements ICookieService {\r\n\r\n    constructor(\r\n        @Optional() private defaultOptions?: CookieOptions\r\n    ) {\r\n    }\r\n\r\n    protected get cookieString(): string {\r\n        return document.cookie || '';\r\n    }\r\n\r\n    protected set cookieString(val: string) {\r\n        document.cookie = val;\r\n    }\r\n\r\n    private cookieReader(key: string): string {\r\n        const currentCookieString = this.cookieString;\r\n\r\n        if (currentCookieString) {\r\n            const cookieArray = currentCookieString.split('; ');\r\n\r\n            return cookieArray.reduce((cookies: ICookies, current: string): object => {\r\n                const cookie = current.split('=');\r\n\r\n                return { ...cookies, [cookie[0]]: decodeURIComponent(cookie[1]) };\r\n            }, {})[key];\r\n        }\r\n    }\r\n\r\n    private cookieWriter(name: string, value: string, options?: CookieOptionsArgs) {\r\n        this.cookieString = this.buildCookieString(name, value, options);\r\n    }\r\n\r\n    private buildCookieString(name: string, value: string, options?: CookieOptionsArgs): string {\r\n        const defaultOpts = this.defaultOptions || new CookieOptions(<CookieOptionsArgs>{ path: '/' });\r\n        const opts: CookieOptions = this.mergeOptions(defaultOpts, options);\r\n\r\n        let expires = opts.expires;\r\n\r\n        if (!value) {\r\n            expires = 'Thu, 01 Jan 1970 00:00:00 GMT';\r\n            value = '';\r\n        }\r\n\r\n        if (typeof expires === 'string') {\r\n            expires = new Date(expires);\r\n        }\r\n\r\n        let str = encodeURIComponent(name) + '=' + encodeURIComponent(value);\r\n\r\n        str += opts.path ? `;path=${opts.path}` : '';\r\n        str += opts.domain ? `;domain=${opts.domain}` : '';\r\n        str += expires ? `;expires=${expires.toUTCString()}` : '';\r\n        str += opts.secure ? ';secure' : '';\r\n\r\n        const cookieLength = str.length + 1;\r\n\r\n        if (cookieLength > 4096) {\r\n            console.log(`Cookie \\'${name}\\' possibly not set or overflowed because it was too large (${cookieLength} > 4096 bytes)!`);\r\n        }\r\n\r\n        return str;\r\n    }\r\n\r\n    private mergeOptions(defaultOpts: CookieOptions, providedOpts?: CookieOptionsArgs): CookieOptions {\r\n        const newOpts = defaultOpts;\r\n\r\n        if (providedOpts) {\r\n            return newOpts.merge(new CookieOptions(providedOpts));\r\n        }\r\n\r\n        return newOpts;\r\n    }\r\n\r\n    public get(key: string): string {\r\n        return this.cookieReader(key);\r\n    }\r\n\r\n    public set(key: string, value: string, options?: CookieOptionsArgs): void {\r\n        this.cookieWriter(key, value, options);\r\n    }\r\n\r\n    public remove(key: string, options?: CookieOptionsArgs): void {\r\n        this.cookieWriter(key, undefined, options);\r\n    }\r\n}\r\n","import { Directive, EmbeddedViewRef, Input, OnChanges, OnDestroy, SimpleChanges, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { CookieOptionsArgs, CookiesService } from '../tools/cookies.tools';\n\nenum CookiesStrategies {\n  GET = 'get',\n  SET = 'set',\n  REMOVE = 'remove'\n}\n\ninterface CookiesContext {\n  $implicit: any;\n  data: any;\n}\n\ninterface CookiesStrategy {\n  type: CookiesStrategies;\n  changes: string[];\n  require: string[];\n}\n\nconst COOKIES_CONFIG: CookiesStrategy[] = [\n  {\n    type: CookiesStrategies.GET,\n    changes: [ 'cookiesGet' ],\n    require: [ 'cookiesGet' ]\n  },\n  {\n    type: CookiesStrategies.SET,\n    changes: [\n      'cookiesSet',\n      'cookiesValue',\n      'cookiesPath',\n      'cookiesDomain',\n      'cookiesExpires',\n      'cookiesSecure'\n    ],\n    require: [ 'cookiesSet' ]\n  },\n  {\n    type: CookiesStrategies.REMOVE,\n    changes: [ 'cookiesRemove', 'cookiesPath', 'cookiesDomain' ],\n    require: [ 'cookiesRemove' ]\n  }\n];\n\n@Directive({ selector: '[cookies]' })\nexport class CookiesDirective implements OnChanges, OnDestroy {\n\n  @Input() private cookiesGet: string;\n  @Input() private cookiesSet: string;\n  @Input() private cookiesRemove: string;\n  @Input() private cookiesValue: any;\n\n  @Input() private cookiesPath: string;\n  @Input() private cookiesDomain: string;\n  @Input() private cookiesExpires: string | Date;\n  @Input() private cookiesSecure: boolean;\n\n  private context: CookiesContext = {\n    $implicit: null,\n    get data() { return this.$implicit; }\n  };\n\n  private viewRef: EmbeddedViewRef<CookiesContext> =\n    this.viewContainerRef.createEmbeddedView(this.templateRef, this.context);\n\n  constructor(\n    private templateRef: TemplateRef<CookiesContext>,\n    private viewContainerRef: ViewContainerRef,\n    private cookiesService: CookiesService\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    const strategy: CookiesStrategy = this.findStrategy(changes);\n    if (strategy) {\n      this.execute(strategy);\n    }\n  }\n\n  ngOnDestroy() {\n    this.viewContainerRef.clear();\n    if (this.viewRef) {\n      this.viewRef.destroy();\n      this.viewRef = null;\n    }\n  }\n\n  private findStrategy(changes: SimpleChanges): CookiesStrategy {\n    return COOKIES_CONFIG.find((strategy) => {\n      return strategy.changes.some(field => !!changes[ field ])\n        && strategy.require.every(field => !!this[ field ]);\n    });\n  }\n\n  private execute(strategy: CookiesStrategy): void {\n    const options = strategy.changes.map(field => this[ field ]);\n\n    this.action(strategy.type, ...options);\n  }\n\n  private action(type: string, ...options: string[]): void {\n    const name = options[ 0 ];\n    const value = options[ 1 ];\n    const cookieOptions: CookieOptionsArgs = {\n      path: options[ 2 ],\n      domain: options[ 3 ],\n      expires: options[ 4 ],\n      secure: !!options[ 5 ]\n    };\n\n    if (CookiesStrategies.GET === type) {\n      this.context.$implicit = this.getCookie(name);\n    }\n\n    if (CookiesStrategies.SET === type) {\n      this.setCookie(name, value, cookieOptions);\n      this.context.$implicit = value;\n    }\n\n    if (CookiesStrategies.REMOVE === type) {\n      this.removeCookie(name, cookieOptions);\n      this.context.$implicit = null;\n    }\n\n    this.viewRef.markForCheck();\n  }\n\n  private getCookie(name: string): string {\n    return this.cookiesService.get(name);\n  }\n\n  private setCookie(name: string, value: string, options?: CookieOptionsArgs): void {\n    this.cookiesService.set(name, value, options);\n  }\n\n  private removeCookie(name: string, options?: CookieOptionsArgs): void {\n    this.cookiesService.remove(name, options);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Directive, EmbeddedViewRef, Input, OnChanges, OnDestroy, SimpleChanges, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { of, Subscription } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nenum HttpStrategies {\n  DELETE = 'delete',\n  GET = 'get',\n  HEAD = 'head',\n  JSONP = 'jsonp',\n  OPTIONS = 'options',\n  PATCH = 'patch',\n  POST = 'post',\n  PUT = 'put'\n}\n\ninterface HttpContext {\n  $implicit: any;\n  data: any;\n}\n\ninterface HttpStrategy {\n  type: HttpStrategies;\n  changes: string[];\n  require: string[];\n}\n\nconst HTTP_CONFIG: HttpStrategy[] = [\n  {\n    type: HttpStrategies.DELETE,\n    changes: [ 'httpDelete', 'httpWith' ],\n    require: [ 'httpDelete' ]\n  },\n  {\n    type: HttpStrategies.GET,\n    changes: [ 'httpGet', 'httpWith' ],\n    require: [ 'httpGet' ]\n  },\n  {\n    type: HttpStrategies.HEAD,\n    changes: [ 'httpHead', 'httpWith' ],\n    require: [ 'httpHead' ]\n  },\n  {\n    type: HttpStrategies.JSONP,\n    changes: [ 'httpJsonp', 'httpCallback' ],\n    require: [ 'httpJsonp', 'httpCallback' ]\n  },\n  {\n    type: HttpStrategies.OPTIONS,\n    changes: [ 'httpOptions', 'httpWith' ],\n    require: [ 'httpOptions' ]\n  },\n  {\n    type: HttpStrategies.PATCH,\n    changes: [ 'httpPatch', 'httpSend', 'httpWith' ],\n    require: [ 'httpPatch' ]\n  },\n  {\n    type: HttpStrategies.POST,\n    changes: [ 'httpPost', 'httpSend', 'httpWith' ],\n    require: [ 'httpPost' ]\n  },\n  {\n    type: HttpStrategies.PUT,\n    changes: [ 'httpPut', 'httpSend', 'httpWith' ],\n    require: [ 'httpPut' ]\n  }\n];\n\n@Directive({ selector: '[http]' })\nexport class HttpDirective implements OnChanges, OnDestroy {\n\n  @Input() httpDelete: string;\n  @Input() httpGet: string;\n  @Input() httpHead: string;\n  @Input() httpJsonp: string;\n  @Input() httpOptions: string;\n  @Input() httpPatch: string;\n  @Input() httpPost: string;\n  @Input() httpPut: string;\n\n  @Input() httpSend: any;\n  @Input() httpCallback: string;\n  @Input() httpWith: any;\n\n  private context: HttpContext = {\n    $implicit: null,\n    get data() { return this.$implicit; }\n  };\n\n  private viewRef: EmbeddedViewRef<HttpContext> =\n    this.viewContainerRef.createEmbeddedView(this.templateRef, this.context);\n\n  private subscription: Subscription;\n\n  constructor(\n    private http: HttpClient,\n    private templateRef: TemplateRef<HttpContext>,\n    private viewContainerRef: ViewContainerRef\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    const strategy: HttpStrategy = this.findStrategy(changes);\n    if (strategy) {\n      this.execute(strategy);\n    }\n  }\n\n  ngOnDestroy() {\n    this.dispose();\n    this.viewContainerRef.clear();\n    if (this.viewRef) {\n      this.viewRef.destroy();\n      this.viewRef = null;\n    }\n  }\n\n  private findStrategy(changes: SimpleChanges): HttpStrategy {\n    return HTTP_CONFIG.find((strategy) => {\n      return strategy.changes.some(field => !!changes[ field ])\n        && strategy.require.every(field => !!this[ field ]);\n    });\n  }\n\n  private execute(strategy: HttpStrategy) {\n    const params = strategy.changes.map(field => this[ field ]);\n\n    this.request(strategy.type, ...params);\n  }\n\n  private request(method, ...params) {\n    this.dispose();\n    this.subscription = this.http[ method ](...params)\n      .pipe(catchError((e) => {\n        console.error(e);\n        return of(null);\n      }))\n      .subscribe((data) => {\n        this.context.$implicit = data;\n        this.viewRef.markForCheck();\n      });\n  }\n\n  private dispose() {\n    if (this.subscription && !this.subscription.closed) {\n      this.subscription.unsubscribe();\n      this.subscription = null;\n    }\n  }\n}\n","import { Directive, EmbeddedViewRef, Input, OnDestroy, TemplateRef, ViewContainerRef } from '@angular/core';\n\ninterface InitContext<T> {\n  $implicit: T;\n  init: T;\n}\n\n@Directive({ selector: '[init]' })\nexport class InitDirective<T> implements OnDestroy {\n\n  @Input() set init(value: T) {\n    this.setValue(value);\n  }\n\n  @Input() set initOf(value: T) {\n    this.setValue(value);\n  }\n\n  private context: InitContext<T> = { $implicit: null, init: null };\n  private viewRef: EmbeddedViewRef<InitContext<T>> =\n    this.viewContainer.createEmbeddedView(this.templateRef, this.context);\n\n  constructor(\n    private templateRef: TemplateRef<InitContext<T>>,\n    private viewContainer: ViewContainerRef\n  ) {}\n\n  ngOnDestroy() {\n    this.viewContainer.clear();\n    if (this.viewRef) {\n      this.viewRef.destroy();\n      this.viewRef = null;\n    }\n  }\n\n  private setValue(value: T): void {\n    this.context.$implicit = this.context.init = value;\n    if (this.viewRef) {\n      this.viewRef.markForCheck();\n    }\n  }\n\n}\n","import { Directive, EmbeddedViewRef, OnDestroy, TemplateRef, ViewContainerRef, isDevMode, Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class DevModeService {\n  constructor() {}\n\n  isDevMode() {\n    return isDevMode();\n  }\n}\n\n@Directive({\n  selector: '[isDevMode]'\n})\nexport class IsDevModeDirective implements OnDestroy {\n  private viewRef: EmbeddedViewRef<null>;\n\n  constructor(\n    devModeService: DevModeService,\n    viewContainerRef: ViewContainerRef,\n    templateRef: TemplateRef<null>\n  ) {\n    if (devModeService.isDevMode()) {\n      viewContainerRef.createEmbeddedView(templateRef);\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.viewRef) {\n      this.viewRef.destroy();\n      this.viewRef = null;\n    }\n  }\n}\n","import { Directive, Injectable, OnDestroy, TemplateRef, ViewContainerRef, ViewRef } from '@angular/core';\n\nexport type TemplateDef = any;\n\nexport const enum KeepAliveFlags {\n  Detached,\n  Attached\n}\n\nexport class ViewRefAttachable {\n\n  viewRef: ViewRef;\n\n  flag: KeepAliveFlags = KeepAliveFlags.Detached;\n\n  viewContainerRef: ViewContainerRef;\n\n  get attached(): boolean {\n    return this.flag === KeepAliveFlags.Attached;\n  }\n\n  get detached(): boolean {\n    return this.flag === KeepAliveFlags.Detached;\n  }\n\n  constructor(viewRef: ViewRef) {\n    this.viewRef = viewRef;\n  }\n\n  attachToViewContainerRef(viewContainer: ViewContainerRef): void {\n    if (this.viewContainerRef || this.attached) {\n      throw new TypeError(`You can't use *keepAlive with *ngFor:\n  <ng-container *ngFor=\"...\">\n    <!-- Wrong! -->\n    <ng-container *keepAlive></ng-container>\n  </ng-container>\n\nviewRef already attached to viewContainerRef`);\n    }\n\n    this.flag = KeepAliveFlags.Attached;\n    (this.viewContainerRef = viewContainer).insert(this.viewRef);\n  }\n\n  detachFromViewContainerRef(): void {\n    if (!this.viewContainerRef || this.detached) {\n      throw new TypeError('viewRef already detached from viewContainerRef');\n    }\n\n    this.flag = KeepAliveFlags.Detached;\n    this.viewContainerRef.detach(this.viewContainerRef.indexOf(this.viewRef));\n    delete this.viewContainerRef;\n  }\n\n  destroy(): void {\n    this.viewRef.destroy();\n  }\n}\n\n@Injectable({ providedIn: 'root' })\nexport class KeepAliveConfig {\n  limit: number = 50;\n}\n\n@Injectable({ providedIn: 'root',  })\nexport class KeepAliveGC {\n  constructor(private config: KeepAliveConfig) {}\n\n  collect(viewRefs: Map<TemplateDef, ViewRefAttachable>): void {\n    const limit = this.config.limit > 0 ? this.config.limit : Number.MAX_SAFE_INTEGER;\n    for (const [templateDef, viewRefAttachable] of Array.from(viewRefs.entries())) {\n      if (viewRefs.size <= limit) {\n        break;\n      }\n\n      if (viewRefAttachable.flag === KeepAliveFlags.Detached) {\n        viewRefAttachable.destroy();\n        viewRefs.delete(templateDef);\n        console.log('Collect', viewRefAttachable);\n      }\n    }\n  }\n}\n\n@Injectable({ providedIn: 'root' })\nexport class KeepAliveViewRefs implements OnDestroy {\n\n  private viewRefs: Map<TemplateDef, ViewRefAttachable> = new Map<TemplateDef, ViewRefAttachable>();\n\n  constructor(private gc: KeepAliveGC) {}\n\n  add(templateRef: TemplateRef<any>, viewRef: ViewRef): void {\n    const templateDef = this.getTemplateDef(templateRef);\n    if (this.viewRefs.has(templateDef)) {\n      throw new TypeError('templateRef already exists in viewRefs');\n    }\n\n    const viewRefAttachable = new ViewRefAttachable(viewRef);\n    this.viewRefs.set(templateDef, viewRefAttachable);\n  }\n\n  has(templateRef: TemplateRef<any>): boolean {\n    const templateDef = this.getTemplateDef(templateRef);\n    return this.viewRefs.has(templateDef);\n  }\n\n  get(templateRef: TemplateRef<any>): ViewRefAttachable {\n    const templateDef = this.getTemplateDef(templateRef);\n    if (!this.viewRefs.has(templateDef)) {\n      throw new TypeError('templateRef not exists in viewRefs');\n    }\n    return this.viewRefs.get(templateDef);\n  }\n\n  delete(templateRef: TemplateRef<any>): boolean {\n    const templateDef = this.getTemplateDef(templateRef);\n    if (!this.viewRefs.has(templateDef)) {\n      throw new TypeError('templateRef not exists in viewRefs');\n    }\n    this.viewRefs.get(templateRef).viewRef.destroy();\n    return this.viewRefs.delete(templateDef);\n  }\n\n  reattach(templateRef: TemplateRef<any>): void {\n    const templateDef = this.getTemplateDef(templateRef);\n    const viewRefAttachable = this.get(templateRef);\n    this.viewRefs.set(templateDef, viewRefAttachable);\n  }\n\n  ngOnDestroy(): void {\n    this.viewRefs.forEach((viewRefAttachable) =>\n      viewRefAttachable.viewRef.destroy());\n    this.viewRefs.clear();\n  }\n\n  collect(): void {\n    this.gc.collect(this.viewRefs);\n  }\n\n  forEach(fn: (v: ViewRefAttachable) => void): void {\n    this.viewRefs.forEach(fn);\n  }\n\n  private getTemplateDef(templateRef: TemplateRef<any>): TemplateDef {\n    return templateRef['_def'];\n  }\n}\n\n@Injectable({ providedIn: 'root' })\nexport class KeepAliveManager {\n  static patched = Symbol('Already Patched ViewContainerRef Token');\n\n  constructor(private viewRefs: KeepAliveViewRefs) {}\n\n  attach(viewContainerRef: ViewContainerRef, templateRef: TemplateRef<any>): void {\n    if (!this.viewRefs.has(templateRef)) {\n      const viewRef = templateRef.createEmbeddedView({});\n      this.viewRefs.add(templateRef, viewRef);\n    } else {\n      this.viewRefs.reattach(templateRef);\n    }\n\n    this.patchClear(viewContainerRef);\n\n    const viewRefAttachable = this.viewRefs.get(templateRef);\n    viewRefAttachable.attachToViewContainerRef(viewContainerRef);\n\n    this.viewRefs.collect();\n  }\n\n  detach(viewContainerRef: ViewContainerRef, templateRef: TemplateRef<any>): void {\n    const viewRefAttachable = this.viewRefs.get(templateRef);\n    viewRefAttachable.detachFromViewContainerRef();\n\n    this.viewRefs.collect();\n  }\n\n  private patchClear(viewContainerRef: ViewContainerRef): void {\n    if (!viewContainerRef[KeepAliveManager.patched]) {\n      const clear = Object.getPrototypeOf(viewContainerRef).clear;\n      const viewRefs = this.viewRefs;\n      Object.getPrototypeOf(viewContainerRef).clear = function (this: ViewContainerRef) {\n        viewRefs.forEach(v => { v.viewRef[ '_view' ].state |= (1 << 7); });\n        clear.call(this);\n        viewRefs.forEach(v => { v.viewRef[ '_view' ].state &= ~(1 << 7); });\n      };\n      Object.defineProperty(viewContainerRef, KeepAliveManager.patched, { get: () => true });\n    }\n  }\n\n}\n\n@Directive({\n  selector: '[keepAlive]'\n})\nexport class KeepAliveDirective implements OnDestroy {\n  constructor(\n    private manager: KeepAliveManager,\n    private viewContainerRef: ViewContainerRef,\n    private templateRef: TemplateRef<any>\n  ) {\n    manager.attach(viewContainerRef, templateRef);\n  }\n\n  ngOnDestroy(): void {\n    this.manager.detach(this.viewContainerRef, this.templateRef);\n  }\n}\n","import {\n  ComponentFactory,\n  ComponentRef,\n  Directive,\n  EmbeddedViewRef,\n  EventEmitter,\n  InjectionToken,\n  Injector,\n  Input,\n  NgModuleFactory,\n  NgModuleFactoryLoader,\n  NgModuleRef,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  Type,\n  ViewContainerRef\n} from '@angular/core';\nimport { from, Observable, SubscriptionLike } from 'rxjs';\nimport { catchError, finalize, tap } from 'rxjs/operators';\n\ninterface LazyContext {\n  $implicit: any;\n}\n\nexport const LAZY_COMPONENT_TOKEN = new InjectionToken<Type<any>>('Lazy Component Token');\n\n@Directive({ selector: '[lazy]' })\nexport class LazyDirective implements OnChanges, OnDestroy {\n\n  @Input() lazy: string;\n  @Input() lazyLoadChildren: string;\n  @Input() lazyActivate: (component: any) => void;\n  @Input() lazyDeactivate: (component: any) => void;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter<any>();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter<any>();\n\n  private context: LazyContext = {\n    $implicit: null\n  };\n\n  private get component(): any {\n    if (this.componentRef) {\n      return this.componentRef.instance;\n    }\n  }\n\n  private componentRef: ComponentRef<any>;\n\n  private get projectableNodes(): any[][] {\n    return [ this.templateRef.createEmbeddedView(this.context).rootNodes ];\n  }\n\n  private embeddedViewRef: EmbeddedViewRef<LazyContext> =\n    this.templateRef.createEmbeddedView(this.context);\n\n  private subscription: SubscriptionLike;\n  private ngModuleRef: NgModuleRef<any>;\n\n  constructor(\n    private templateRef: TemplateRef<LazyContext>,\n    private viewContainer: ViewContainerRef,\n    private loader: NgModuleFactoryLoader,\n    private injector: Injector\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ('lazy' in changes) {\n      this.onLazyDidChanged(this.lazy, changes.lazy.previousValue);\n    }\n\n    if ('lazyLoadChildren' in changes) {\n      this.onLazyDidChanged(this.lazyLoadChildren, changes.lazyLoadChildren.previousValue);\n    }\n  }\n\n  ngOnDestroy() {\n    this.dispose();\n\n    if (this.embeddedViewRef) {\n      this.embeddedViewRef.destroy();\n      this.embeddedViewRef = null;\n    }\n  }\n\n  private onLazyDidChanged(current: string, previous: string): void {\n    if (!this.ngModuleRef) {\n      return current && this.loadAndRender(current);\n    }\n\n    if (current !== previous) {\n      this.dispose();\n      return this.onLazyDidChanged(current, null);\n    }\n  }\n\n  private loadAndRender(path: string): void {\n    this.subscription = this.load(path).pipe(\n      tap((ngModuleFactory: NgModuleFactory<any>) => {\n        this.ngModuleRef = ngModuleFactory.create(this.injector);\n\n        const component: Type<any> = this.ngModuleRef.injector.get(LAZY_COMPONENT_TOKEN);\n        const componentFactory: ComponentFactory<any> =\n          this.ngModuleRef.componentFactoryResolver.resolveComponentFactory(component);\n\n        this.componentRef = this.viewContainer.createComponent(\n          componentFactory, this.viewContainer.length, this.injector,\n          this.projectableNodes, this.ngModuleRef\n        );\n      }),\n      finalize(() => this.onActivate(this.component))\n    ).subscribe();\n  }\n\n  private load(path: string): Observable<NgModuleFactory<any>> {\n    const pathProduction = path.split('#').join('.ts#');\n    return from(this.loader.load(pathProduction)).pipe(\n      catchError(() => from(this.loader.load(path)))\n    );\n  }\n\n  private onActivate(component: any): void {\n    this.activate.emit(component);\n    if (isFunction(this.lazyActivate)) {\n      this.lazyActivate(component);\n    }\n    this.context.$implicit = component;\n    this.embeddedViewRef.markForCheck();\n  }\n\n  private onDeactivate(component: any): void {\n    this.deactivate.emit(component);\n    if (isFunction(this.lazyDeactivate)) {\n      this.lazyDeactivate(component);\n    }\n    this.context.$implicit = null;\n    this.embeddedViewRef.markForCheck();\n  }\n\n  private dispose(): void {\n    if (this.componentRef) {\n      const c = this.component;\n      this.componentRef.destroy();\n      this.componentRef = null;\n      this.onDeactivate(c);\n    }\n\n    if (this.ngModuleRef) {\n      this.ngModuleRef.destroy();\n      this.ngModuleRef = null;\n    }\n\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      this.subscription = null;\n    }\n  }\n\n}\n\nfunction isFunction(value: any): value is Function {\n  return typeof value === 'function';\n}\n","import { Directive, EmbeddedViewRef, Input, OnChanges, OnDestroy, SimpleChanges, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { ComposedView } from '../tools/recompose/composed.view';\n\ninterface NestContext {\n  $implicit: any;\n  nest: any;\n}\n\n@Directive({ selector: '[nest]' })\nexport class NestDirective implements OnChanges, OnDestroy {\n\n  @Input() nest: TemplateRef<NestContext>[];\n  @Input() nestOf: TemplateRef<NestContext>[];\n\n  private context: NestContext = { $implicit: null, nest: null };\n  private viewRef: EmbeddedViewRef<NestContext>;\n\n  constructor(\n    private templateRef: TemplateRef<NestContext>,\n    private viewContainerRef: ViewContainerRef\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ('nest' in changes) {\n      this.onTemplatesDidChanged(this.nest, changes.nest.previousValue);\n    }\n\n    if ('nestOf' in changes) {\n      this.onTemplatesDidChanged(this.nestOf, changes.nestOf.previousValue);\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy();\n  }\n\n  private onTemplatesDidChanged(current: TemplateRef<NestContext>[], previous: TemplateRef<NestContext>[]) {\n    if (!this.context.$implicit) {\n      return current && this.create(current);\n    }\n\n    if (current !== previous) {\n      this.destroy();\n      this.onTemplatesDidChanged(current, null);\n    }\n  }\n\n  private create(templateRefs: TemplateRef<NestContext>[]) {\n    this.context.$implicit = this.context.nest = new ComposedView<NestContext>(this.viewContainerRef, templateRefs);\n    this.viewRef =\n      this.viewContainerRef.createEmbeddedView(this.templateRef, this.context);\n  }\n\n  private update(templateRefs: TemplateRef<NestContext>[]) {\n    this.context.$implicit = this.context.nest = new ComposedView<NestContext>(this.viewContainerRef, templateRefs);\n    this.viewRef.markForCheck();\n  }\n\n  private destroy() {\n    this.viewContainerRef.clear();\n    if (this.viewRef) {\n      this.viewRef.destroy();\n      this.viewRef = null;\n    }\n  }\n}\n","import { Directive, Input, OnChanges, OnDestroy, SimpleChanges, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { ComposedView } from '../tools/recompose/composed.view';\nimport { omit } from '../tools/utils/index';\n\ninterface RenamePropContext {\n  $implicit: null;\n}\n\n@Directive({ selector: '[renameProp]' })\nexport class RenamePropDirective implements OnChanges, OnDestroy {\n\n  @Input() renameProp: string;\n  @Input() renamePropTo: string;\n\n  private context: RenamePropContext = {\n    $implicit: null\n  };\n  private composedView: ComposedView<RenamePropContext>;\n\n  constructor(\n    private templateRef: TemplateRef<RenamePropContext>,\n    private viewContainerRef: ViewContainerRef\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ('renameProp' in changes && 'renamePropTo' in changes) {\n      this.onRenameDidChanged(\n        this.renameProp, this.renamePropTo,\n        changes.renameProp.previousValue, changes.renamePropTo.previousValue\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy();\n  }\n\n  private onRenameDidChanged(from: string, to: string, fromPrevious: string, toPrevious: string) {\n    if (!this.composedView) {\n      this.create();\n    }\n\n    if (from !== fromPrevious || to !== toPrevious) {\n      this.rename(from, to);\n    }\n  }\n\n  private create() {\n    this.composedView = new ComposedView<RenamePropContext>(this.viewContainerRef);\n    this.composedView.createEmbeddedView(this.context);\n  }\n\n  private rename(from: string, to: string) {\n    this.composedView.updateContext((context, parent) => {\n      return Object.assign(\n        context,\n        omit(parent, [ from ]),\n        { [ to ]: parent[ from ] }\n      );\n    });\n  }\n\n  private destroy() {\n    this.viewContainerRef.clear();\n    if (this.composedView) {\n      this.composedView.destroy();\n      this.composedView = null;\n    }\n  }\n}\n","import { Directive, Input, OnChanges, OnDestroy, SimpleChanges, TemplateRef, ViewContainerRef } from '@angular/core';\n\nexport class RepeatContext {\n  $implicit: number;\n  repeat: number;\n  index: number;\n}\n\n@Directive({ selector: '[repeat]' })\nexport class RepeatDirective implements OnChanges, OnDestroy {\n\n  @Input() repeat: number;\n  @Input() repeatOf: number;\n\n  get count(): number {\n    const count = isNumber(this.repeat) ? this.repeat :\n      isNumber(this.repeatOf) ? this.repeatOf : 0;\n\n    return Math.max(count, 0);\n  }\n\n  constructor(\n    private viewContainerRef: ViewContainerRef,\n    private templateRef: TemplateRef<RepeatContext>\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('repeat' in changes || 'repeatOf' in changes) {\n      this.onRepeatChanged(this.count);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.viewContainerRef.clear();\n  }\n\n  private onRepeatChanged(count: number): void {\n    /** When we need to create new items */\n    for (let i = this.viewContainerRef.length; i < count; i++) {\n      this.viewContainerRef.createEmbeddedView(this.templateRef, {\n        $implicit: i, index: i, repeat: i\n      }, i);\n    }\n\n    /** When we need to remove old items */\n    for (let i = this.viewContainerRef.length; i > count; i--) {\n      this.viewContainerRef.remove(i - 1);\n    }\n  }\n\n}\n\nfunction isNumber(value: unknown): value is number {\n  return typeof value === 'number';\n}\n","import { Directive, Input, OnChanges, OnDestroy, SimpleChanges, ViewContainerRef } from '@angular/core';\nimport { ComposedView } from '../tools/recompose/composed.view';\n\ninterface ReturnContext {\n  $implicit: null;\n}\n\n@Directive({ selector: '[return]' })\nexport class ReturnDirective implements OnChanges, OnDestroy {\n\n  @Input() return: any;\n\n  private context: ReturnContext = {\n    $implicit: null\n  };\n  private composedView: ComposedView<ReturnContext>;\n\n  constructor(private viewContainerRef: ViewContainerRef) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ('return' in changes) {\n      if (!this.composedView) {\n        this.create();\n      } else {\n        this.update();\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.composedView) {\n      this.composedView.destroy();\n      this.composedView = null;\n    }\n  }\n\n  private create() {\n    this.composedView = new ComposedView(this.viewContainerRef);\n    this.composedView.createEmbeddedView(this.context);\n    this.update();\n  }\n\n  private update() {\n    this.composedView.updateContext((context) => {\n      return Object.assign(context, this.return);\n    });\n  }\n\n}\n","import { Directive, EmbeddedViewRef, OnDestroy, TemplateRef, Type, ViewContainerRef } from '@angular/core';\nimport { ActivatedRoute, ActivatedRouteSnapshot, convertToParamMap, Data, ParamMap, Params, Route, UrlSegment } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\n\ninterface RouteContext {\n  $implicit: ActivatedRoute;\n  snapshot: ActivatedRouteSnapshot;\n  url: UrlSegment[];\n  params: Params;\n  queryParams: Params;\n  fragment: string;\n  data: Data;\n  outlet: string;\n  component: Type<any> | string;\n  routeConfig: Route;\n  root: ActivatedRoute;\n  parent: ActivatedRoute | null;\n  firstChild: ActivatedRoute | null;\n  children: ActivatedRoute[];\n  pathFromRoot: ActivatedRoute[];\n  paramMap: ParamMap;\n  queryParamMap: ParamMap;\n}\n\nconst ASYNC_FIELDS = [ 'url', 'params', 'queryParams', 'fragment', 'data', 'paramMap', 'queryParamMap' ];\n\n@Directive({ selector: '[route]' })\nexport class RouteDirective implements OnDestroy {\n  private context: RouteContext = {\n    $implicit: this.route,\n    get snapshot() { return this.route.snapshot; },\n    url: [],\n    params: {},\n    queryParams: {},\n    fragment: null,\n    data: null,\n    get outlet() { return this.route.outlet; },\n    get component() { return this.route.component; },\n    get routeConfig() { return this.route.routeConfig; },\n    get root() { return this.route.root; },\n    get parent() { return this.route.parent; },\n    get firstChild() { return this.route.firstChild; },\n    get children() { return this.route.children; },\n    get pathFromRoot() { return this.route.pathFromRoot; },\n    paramMap: convertToParamMap({}),\n    queryParamMap: convertToParamMap({})\n  };\n  private viewRef: EmbeddedViewRef<RouteContext> =\n    this.viewContainerRef.createEmbeddedView(this.templateRef, this.context);\n  private subscriptions: Subscription[] = this.attachFields(ASYNC_FIELDS);\n\n  constructor(\n    private templateRef: TemplateRef<RouteContext>,\n    private viewContainerRef: ViewContainerRef,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((subscription) => {\n      subscription.unsubscribe();\n    });\n    this.subscriptions = null;\n    this.viewContainerRef.clear();\n    if (this.viewRef) {\n      this.viewRef.destroy();\n      this.viewRef = null;\n    }\n  }\n\n  private attachFields(asyncFields: string[]): Subscription[] {\n    return asyncFields.map(field => this.asyncAttach(field));\n  }\n\n  private asyncAttach(field: string): Subscription {\n    return this.route[ field ]\n      .pipe(distinctUntilChanged())\n      .subscribe(value => {\n        this.context[ field ] = value;\n        this.viewRef.markForCheck();\n      });\n  }\n}\n","import { Directive, Input, OnChanges, OnDestroy, SimpleChanges, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { ComposedView } from '../tools/recompose/composed.view';\n\ninterface SetPropsContext {\n  $implicit: any;\n  setProps: any;\n}\n\n@Directive({ selector: '[setProps]' })\nexport class SetPropsDirective implements OnChanges, OnDestroy {\n\n  @Input() setProps: any;\n\n  private context: SetPropsContext = { $implicit: null, setProps: null };\n  private composedView: ComposedView<SetPropsContext>;\n\n  constructor(\n    private templateRef: TemplateRef<SetPropsContext>,\n    private viewContainerRef: ViewContainerRef\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ('setProps' in changes) {\n      this.onPropsDidChanged(this.setProps, changes.setProps.previousValue);\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy();\n  }\n\n  private onPropsDidChanged(current: TemplateRef<SetPropsContext>[], previous: TemplateRef<SetPropsContext>[]) {\n    if (!this.context.$implicit) {\n      return current && this.create(current);\n    }\n\n    if (current !== previous) {\n      this.destroy();\n      return this.onPropsDidChanged(current, null);\n    }\n  }\n\n  private create(props: any) {\n    this.composedView = new ComposedView<SetPropsContext>(this.viewContainerRef);\n    this.composedView.createEmbeddedView(this.context);\n    this.composedView.updateContext((context, parent) => {\n      return Object.assign(context, parent, props);\n    });\n  }\n\n  private destroy() {\n    this.viewContainerRef.clear();\n    if (this.composedView) {\n      this.composedView.destroy();\n      this.composedView = null;\n    }\n  }\n}\n","import { Directive, Input, OnDestroy, TemplateRef, ViewContainerRef } from '@angular/core';\n\n@Directive({ selector: '[timeout]' })\nexport class TimeoutDirective implements OnDestroy {\n\n  private timeoutId: any;\n\n  constructor(\n    private templateRef: TemplateRef<null>,\n    private viewContainerRef: ViewContainerRef\n  ) {}\n\n  @Input() set timeout(milliseconds: number) {\n    this.dispose();\n    if (isNumber(milliseconds)) {\n      this.create(milliseconds);\n    }\n  }\n\n  ngOnDestroy() {\n    this.dispose();\n    this.viewContainerRef.clear();\n  }\n\n  private create(milliseconds: number) {\n    this.timeoutId = setTimeout(() => {\n      if (this.viewContainerRef) {\n        this.viewContainerRef.createEmbeddedView(this.templateRef);\n      }\n    }, milliseconds);\n  }\n\n  private dispose() {\n    this.viewContainerRef.clear();\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n      this.timeoutId = null;\n    }\n  }\n}\n\nfunction isNumber(value: number): value is number {\n  return typeof value === 'number';\n}\n","import { NgForOf } from '@angular/common';\nimport { Directive, Host, Input, OnChanges, Optional, SimpleChanges, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[ngForTrackByKey]'\n})\nexport class NgForTrackByKeyDirective<T> implements OnChanges {\n\n  @Input() ngForTrackByKey: keyof T;\n\n  constructor(@Host() @Optional() private ngFor: NgForOf<T>, private viewContainerRef: ViewContainerRef) {\n    if (!ngFor) {\n      throw new Error('TrackByKey should use with *ngFor!');\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('ngForTrackByKey' in changes) {\n      const key = this.ngForTrackByKey;\n      if (key) {\n        this.ngFor.ngForTrackBy = (index: number, item: T): T[keyof T] => item[ key ];\n      } else {\n        this.ngFor.ngForTrackBy = undefined;\n      }\n\n      this.ngFor[ '_differ' ] = null;\n      this.ngFor[ '_ngForOfDirty' ] = true;\n      this.viewContainerRef.clear();\n      this.ngFor.ngDoCheck();\n    }\n  }\n\n}\n","import {\n  Directive,\n  DoCheck,\n  EmbeddedViewRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\n\n@Directive({\n  selector: '[useEffect]'\n})\nexport class UseEffectDirective implements OnChanges, DoCheck, OnDestroy {\n  private context: {} = {};\n\n  @Input() useEffect: Function;\n  @Input() useEffectOn: [];\n\n  private onDestroyCallback: Function;\n\n  private viewRef: EmbeddedViewRef<{}>;\n\n  constructor(\n    private templateRef: TemplateRef<{}>,\n    private vcr: ViewContainerRef\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.useEffect && this.useEffect) {\n      this.destroy();\n      this.init();\n    } else if (changes.useEffectOn) {\n      if (Array.isArray(this.useEffectOn)) {\n        const previous = changes.useEffectOn.previousValue || [];\n        const current = changes.useEffectOn.currentValue || [];\n\n        const isChanged = !previous.every((item, index) => current[index] === item);\n\n        if (isChanged) {\n          this.destroy();\n          this.init();\n        }\n      } else {\n        this.destroy();\n        this.init();\n      }\n    }\n  }\n\n  ngDoCheck() {\n    if (!Array.isArray(this.useEffectOn)) {\n      this.destroy();\n      this.init();\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy();\n  }\n\n  private init() {\n    this.viewRef = this.vcr.createEmbeddedView(this.templateRef, this.context);\n    if (this.useEffect) {\n      this.onDestroyCallback = this.useEffect();\n    }\n  }\n\n  private destroy() {\n    if (this.onDestroyCallback) {\n      this.onDestroyCallback();\n      this.onDestroyCallback = null;\n    }\n\n    this.vcr.clear();\n\n    if (this.viewRef) {\n      this.viewRef.destroy();\n      this.viewRef = null;\n    }\n  }\n}\n","import { Directive, EmbeddedViewRef, Input, OnChanges, OnDestroy, SimpleChanges, TemplateRef, ViewContainerRef } from '@angular/core';\n\ninterface Action {\n  type: string;\n  payload: any;\n}\n\ntype Reducer<T = any> = (state: T, action: Action) => T;\n\ninterface UseReducerImplicitContext<T> {\n  state: T;\n  dispatch: (action: Action) => T;\n  reducer: Reducer;\n  detectChanges: Function;\n}\n\ninterface UseReducerContext<T = any> {\n  $implicit: UseReducerImplicitContext<T>;\n}\n\n@Directive({\n  selector: '[useReducer]'\n})\nexport class UseReducerDirective implements OnChanges, OnDestroy {\n  @Input() useReducerInit: Reducer;\n  @Input() useReducerWith: any;\n  @Input() useReducerAnd: Action;\n\n  private context: UseReducerContext = {\n    $implicit: {\n      state: null,\n      dispatch (action: Action): any {\n        this.state = this.reducer(this.state, action);\n        this.detectChanges();\n      },\n      reducer: (() => {}),\n      detectChanges: () => {\n        this.embeddedViewRef.detectChanges();\n      }\n    }\n  };\n  private embeddedViewRef: EmbeddedViewRef<UseReducerContext> =\n    this.vcr.createEmbeddedView(this.templateRef, this.context);\n\n  constructor(\n    private templateRef: TemplateRef<UseReducerContext>,\n    private vcr: ViewContainerRef\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.useReducerInit && typeof this.useReducerInit === 'function') {\n      this.context.$implicit.reducer = this.useReducerInit;\n      this.context.$implicit.state = this.useReducerWith;\n      if (this.useReducerAnd) {\n        this.context.$implicit.dispatch(this.useReducerAnd);\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.vcr.clear();\n    this.embeddedViewRef.destroy();\n    this.embeddedViewRef = null;\n  }\n\n}\n","import { Directive, EmbeddedViewRef, Input, OnChanges, OnDestroy, SimpleChanges, TemplateRef, ViewContainerRef } from '@angular/core';\n\ninterface UseStateContext<T = any> {\n  $implicit: {\n    get: T,\n    set: (value: T) => void;\n    detectChanges: Function;\n  };\n}\n\n@Directive({\n  selector: '[useState]'\n})\nexport class UseStateDirective implements OnChanges, OnDestroy {\n  @Input() useStateDefault: any;\n\n  private context: UseStateContext = {} as any;\n  private embeddedViewRef: EmbeddedViewRef<UseStateContext>;\n  private value: any;\n\n  constructor(\n    private templateRef: TemplateRef<UseStateContext>,\n    private vcr: ViewContainerRef\n  ) {\n    Object.defineProperty(this.context, '$implicit', {\n      get: () => this.value,\n      set: (value) => {\n        this.value = value;\n        if (this.embeddedViewRef) {\n          this.embeddedViewRef.detectChanges();\n        }\n      }\n    });\n    this.embeddedViewRef = this.vcr.createEmbeddedView(this.templateRef, this.context);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.useStateDefault) {\n      this.value = this.useStateDefault;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.vcr.clear();\n    this.embeddedViewRef.destroy();\n    this.embeddedViewRef = null;\n  }\n\n}\n","import { Injectable, ChangeDetectorRef, OnDestroy } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class VirtualHandler implements OnDestroy {\n\n  private elementLink = new Map<Element, ChangeDetectorRef>();\n  private observer = new IntersectionObserver(entries => {\n    entries.forEach(entry => {\n      const cd = this.elementLink.get(entry.target as Element);\n      entry.isIntersecting ? attachCD(cd) : detachCD(cd);\n    });\n  });\n\n  register(element: Element, cd: ChangeDetectorRef) {\n    this.elementLink.set(element, cd);\n    this.observer.observe(element);\n  }\n\n  unregister(element: Element) {\n    this.elementLink.delete(element);\n    this.observer.unobserve(element);\n  }\n\n  ngOnDestroy() {\n    this.elementLink.forEach((cd, e) => this.observer.unobserve(e));\n    this.elementLink.clear();\n  }\n\n}\n\nfunction attachCD(cd: ChangeDetectorRef) {\n  cd.reattach();\n  cd.detectChanges();\n}\n\nfunction detachCD(cd: ChangeDetectorRef) {\n  cd.detach();\n}\n","import { ChangeDetectorRef, Directive, ElementRef, Input, OnDestroy } from '@angular/core';\nimport { VirtualHandler } from '../tools/virtual.handler';\n\n@Directive({ selector: '[virtual]' })\nexport class VirtualDirective implements OnDestroy {\n  @Input() virtual: any;\n\n  constructor(\n    private handler: VirtualHandler,\n    private elementRef: ElementRef,\n    private cd: ChangeDetectorRef\n  ) {\n    this.handler.register(this.elementRef.nativeElement, cd);\n  }\n\n  ngOnDestroy() {\n    this.handler.unregister(this.elementRef.nativeElement);\n  }\n}\n","import { ChangeDetectorRef, EmbeddedViewRef, Pipe, PipeTransform } from '@angular/core';\n\ntype Method<T = any> = (this: T, ...args: any[]) => any;\ntype Head<T extends Method> = Parameters<T>[0];\ntype Tail<T extends Method> = T extends (first: any, ...rest: infer R) => any ? R : never;\n\n@Pipe({ name: 'call' })\nexport class CallPipe<C> implements PipeTransform {\n  private readonly context: C;\n\n  // with Ivy you can inject EmbeddedViewRef directly\n  constructor(private cd: ChangeDetectorRef) {\n    this.context = (this.cd as EmbeddedViewRef<C>).context;\n  }\n\n  transform<M extends Method<C>>(param: Head<M>, fn: M, ...params: Tail<M>): ReturnType<M> {\n    return fn.apply(this.context, [param, ...params]);\n  }\n}\n","import { Inject, InjectionToken, Pipe, PipeTransform } from '@angular/core';\n\nexport function consoleFactory() {\n  return console;\n}\n\nexport const CONSOLE = new InjectionToken<Console>('Console', {\n  providedIn: 'root',\n  factory: consoleFactory\n});\n\nexport const skipValueOperators = [\n  'count',\n  'markTimeline',\n  'time',\n  'timeEnd',\n  'profile',\n  'profileEnd',\n  'timeline',\n  'timelineEnd',\n  'timeStamp',\n  'group',\n  'groupCollapsed'\n];\n\n@Pipe({\n  name: 'console'\n})\nexport class ConsolePipe implements PipeTransform {\n\n  constructor(@Inject(CONSOLE) private console: any) {}\n\n  // info(message?: any, ...optionalParams): void;\n  transform<T>(message: T, logLevel: 'info', ...optionalParams: any[]): T;\n  // log(message?: any, ...optionalParams): void;\n  transform<T>(message: T, logLevel: 'log', ...optionalParams: any[]): T;\n  // warn(message?: any, ...optionalParams): void;\n  transform<T>(message: T, logLevel: 'warn', ...optionalParams: any[]): T;\n  // exception(message?: string, ...optionalParams): void;\n  transform<T>(message: T, logLevel: 'exception', ...optionalParams: any[]): T;\n  // error(message?: any, ...optionalParams): void;\n  transform<T>(message: T, logLevel: 'error', ...optionalParams: any[]): T;\n  // debug(message?: any, ...optionalParams: any[]): void;\n  transform<T>(message: T, logLevel: 'debug', ...optionalParams: any[]): T;\n  // trace(message?: any, ...optionalParams: any[]): void;\n  transform<T>(message: T, logLevel: 'trace', ...optionalParams: any[]): T;\n  // dir(obj: any, options?: NodeJS.InspectOptions): void;\n  transform<T>(obj: T, logLevel: 'dir'/*, options?: NodeJS.InspectOptions*/): T;\n  // dirxml(value: any): void;\n  transform<T>(value: T, logLevel: 'dirxml'): T;\n  // table(...tabularData): void;\n  transform<T>(value: T, logLevel: 'table'): T;\n  // assert(value: any, message?: string, ...optionalParams): void;\n  transform<T>(value: T, logLevel: 'trace', message: string, ...optionalParams: any[]): T;\n  // count(label?: string): void;\n  transform<T>(value: T, logLevel: 'count', label?: string): T;\n  // markTimeline(label?: string): void;\n  transform<T>(value: T, logLevel: 'markTimeline', label?: string): T;\n  // time(label: string): void;\n  transform<T>(value: T, logLevel: 'time', label?: string): T;\n  // timeEnd(label: string): void;\n  transform<T>(value: T, logLevel: 'timeEnd', label?: string): T;\n  // profile(reportName?: string): void;\n  transform<T>(value: T, logLevel: 'profile', reportName?: string): T;\n  // profileEnd(reportName?: string): void;\n  transform<T>(value: T, logLevel: 'profileEnd', reportName?: string): T;\n  // timeline(label?: string): void;\n  transform<T>(value: T, logLevel: 'timeline', label?: string): T;\n  // timelineEnd(label?: string): void;\n  transform<T>(value: T, logLevel: 'timelineEnd', label?: string): T;\n  // timeStamp(label?: string): void;\n  transform<T>(value: T, logLevel: 'timeStamp', label?: string): T;\n  // group(groupTitle?: string, ...optionalParams: any[]): void;\n  transform<T>(value: T, logLevel: 'group', groupTitle?: string, ...optionalParams: any[]): T;\n  // groupCollapsed(groupTitle?: string, ...optionalParams: any[]): void;\n  transform<T>(value: T, logLevel: 'groupCollapsed', groupTitle?: string, ...optionalParams: any[]): T;\n  // groupEnd(): void;\n  transform<T>(value: T, logLevel: 'groupEnd'): T;\n  // clear(): void;\n  transform<T>(value: T, logLevel: 'clear'): T;\n  transform<T>(message: string | T, logLevel: keyof Console = 'log', ...optionalParams: any[]): string | T {\n    let params;\n    if (skipValueOperators.includes(logLevel)) {\n      if (optionalParams.length > 0) {\n        params = optionalParams;\n      } else {\n        params = [ message ];\n      }\n    } else {\n      params = [ message, ...optionalParams ];\n    }\n\n    this.console[ logLevel ](...params);\n    return message;\n  }\n\n}\n","import { SimpleChanges } from '@angular/core';\n\nconst noop = () => { };\nexport function UseEffect(\n  effect: () => (() => any) | any,\n  affectedKeys?: string[]\n) {\n  const destroyEffectsMap = new WeakMap();\n  function init() {\n    const destroyEffect = effect.call(this);\n    destroyEffectsMap.set(this, destroyEffect);\n  }\n  function destroy() {\n    if (destroyEffectsMap.has(this)) {\n      const destroyEffect = destroyEffectsMap.get(this);\n      if (destroyEffect) {\n        destroyEffect();\n      }\n    }\n  }\n  function isChanged(changes: SimpleChanges): boolean {\n    if (!affectedKeys) {\n      return true;\n    }\n\n    if (affectedKeys.length === 0) {\n      return false;\n    }\n\n    return affectedKeys.every((affectedKey) => affectedKey in changes);\n  }\n  return (def: any) => {\n    const originalOnInit = def.ngComponentDef.onInit || noop;\n    def.ngComponentDef.onInit = function onInit() {\n      originalOnInit();\n      init.call(this);\n    };\n\n    const originalOnChanges = def.ngComponentDef.onChanges || noop;\n    def.ngComponentDef.onChanges = function onChanges(changes: SimpleChanges) {\n      originalOnChanges(changes);\n      if (isChanged(changes)) {\n        destroy.call(this);\n        init.call(this);\n      }\n    };\n\n    const originalOnDestroy = def.ngComponentDef.onDestroy || noop;\n    def.ngComponentDef.onDestroy = function onDestroy() {\n      originalOnDestroy();\n      destroy.call(this);\n    };\n  };\n}\n","export function UseReducer<T = any>(\n  [stateKey, dispatchKey]: [string, string],\n  reducer: (state: T, action: { type: any }) => any,\n  initialValue?: T\n) {\n  return (def: any) => {\n    const originalFactory = def.ngComponentDef.factory;\n    def.ngComponentDef.factory = () => {\n      const cmp = originalFactory(def.ngComponentDef.type);\n      cmp[stateKey] = initialValue;\n      cmp[dispatchKey] = (action) => cmp[stateKey] = reducer(cmp[stateKey], action);\n      return cmp;\n    };\n  };\n}\n","export function UseState<T = any>(\n  [stateKey, setStateKey]: [string, string],\n  initialValue?: T\n) {\n  return (def: any) => {\n    const originalFactory = def.ngComponentDef.factory;\n    def.ngComponentDef.factory = () => {\n      const cmp = originalFactory(def.ngComponentDef.type);\n      cmp[stateKey] = initialValue;\n      cmp[setStateKey] = (value) => cmp[stateKey] = value;\n      return cmp;\n    };\n  };\n}\n","import { ANALYZE_FOR_ENTRY_COMPONENTS, ModuleWithProviders, NgModule, Type } from '@angular/core';\n\nimport { AsyncDirective } from './directives/async.directive';\nimport { ComposeDirective } from './directives/compose.directive';\nimport { CookiesDirective } from './directives/cookies.directive';\nimport { HttpDirective } from './directives/http.directive';\nimport { InitDirective } from './directives/init.directive';\nimport { IsDevModeDirective } from './directives/is-dev-mode.directive';\nimport { KeepAliveConfig, KeepAliveDirective } from './directives/keep-alive.directive';\nimport { LazyDirective, LAZY_COMPONENT_TOKEN } from './directives/lazy.directive';\nimport { NestDirective } from './directives/nest.directive';\nimport { RenamePropDirective } from './directives/rename-prop.directive';\nimport { RepeatDirective } from './directives/repeat.directive';\nimport { ReturnDirective } from './directives/return.directive';\nimport { RouteDirective } from './directives/route.directive';\nimport { SetPropsDirective } from './directives/set-props.directive';\nimport { TimeoutDirective } from './directives/timeout.directive';\nimport { NgForTrackByKeyDirective } from './directives/track-by-key.directive';\nimport { UseEffectDirective } from './directives/use-effect.directive';\nimport { UseReducerDirective } from './directives/use-reducer.directive';\nimport { UseStateDirective } from './directives/use-state.directive';\nimport { VirtualDirective } from './directives/virtual.directive';\n\nimport { CallPipe } from './pipes/call.pipe';\nimport { ConsolePipe } from './pipes/console.pipe';\n\nconst DIRECTIVES = [\n  AsyncDirective,\n  ComposeDirective,\n  CookiesDirective,\n  HttpDirective,\n  LazyDirective,\n  InitDirective,\n  IsDevModeDirective,\n  KeepAliveDirective,\n  NestDirective,\n  RenamePropDirective,\n  RepeatDirective,\n  ReturnDirective,\n  RouteDirective,\n  SetPropsDirective,\n  TimeoutDirective,\n  NgForTrackByKeyDirective,\n  UseReducerDirective,\n  UseStateDirective,\n  UseEffectDirective,\n  VirtualDirective\n];\n\nconst PIPES = [\n  CallPipe,\n  ConsolePipe\n];\n\n@NgModule({\n  imports: [],\n  declarations: [ DIRECTIVES, PIPES ],\n  exports: [ DIRECTIVES, PIPES ]\n})\nexport class NgxfModule {\n  static forLazy(component: Type<any>): ModuleWithProviders<NgxfModule> {\n    return {\n      ngModule: NgxfModule,\n      providers: [\n        { provide: LAZY_COMPONENT_TOKEN, useValue: component },\n        { provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: component, multi: true }\n      ]\n    };\n  }\n  static forKeepAlive(keepAliveConfig: KeepAliveConfig): ModuleWithProviders<NgxfModule> {\n    return {\n      ngModule: NgxfModule,\n      providers: [\n        { provide: KeepAliveConfig, useValue: keepAliveConfig }\n      ]\n    };\n  }\n}\n\nexport { AsyncDirective } from './directives/async.directive';\nexport { ComposeDirective } from './directives/compose.directive';\nexport { CookiesDirective } from './directives/cookies.directive';\nexport { HttpDirective } from './directives/http.directive';\nexport { InitDirective } from './directives/init.directive';\nexport { IsDevModeDirective } from './directives/is-dev-mode.directive';\nexport { KeepAliveDirective, KeepAliveConfig, KeepAliveGC } from './directives/keep-alive.directive';\nexport { LazyDirective, LAZY_COMPONENT_TOKEN } from './directives/lazy.directive';\nexport { NestDirective } from './directives/nest.directive';\nexport { RenamePropDirective } from './directives/rename-prop.directive';\nexport { RepeatDirective } from './directives/repeat.directive';\nexport { ReturnDirective } from './directives/return.directive';\nexport { RouteDirective } from './directives/route.directive';\nexport { SetPropsDirective } from './directives/set-props.directive';\nexport { TimeoutDirective } from './directives/timeout.directive';\nexport { NgForTrackByKeyDirective } from './directives/track-by-key.directive';\nexport { UseEffectDirective } from './directives/use-effect.directive';\nexport { UseReducerDirective } from './directives/use-reducer.directive';\nexport { UseStateDirective } from './directives/use-state.directive';\nexport { VirtualDirective } from './directives/virtual.directive';\n\nexport { CallPipe } from './pipes/call.pipe';\nexport { ConsolePipe } from './pipes/console.pipe';\n\nexport { UseEffect } from './ivy-hooks/use-effect.hook';\nexport { UseReducer } from './ivy-hooks/use-reducer.hook';\nexport { UseState } from './ivy-hooks/use-state.hook';\n"],"names":["isFunction","isNumber"],"mappings":"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"}