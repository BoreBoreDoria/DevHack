/**
 * @fileoverview added by tsickle
 * Generated from: lib/directives/use-effect.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';
export class UseEffectDirective {
    /**
     * @param {?} templateRef
     * @param {?} vcr
     */
    constructor(templateRef, vcr) {
        this.templateRef = templateRef;
        this.vcr = vcr;
        this.context = {};
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        if (changes.useEffect && this.useEffect) {
            this.destroy();
            this.init();
        }
        else if (changes.useEffectOn) {
            if (Array.isArray(this.useEffectOn)) {
                /** @type {?} */
                const previous = changes.useEffectOn.previousValue || [];
                /** @type {?} */
                const current = changes.useEffectOn.currentValue || [];
                /** @type {?} */
                const isChanged = !previous.every((/**
                 * @param {?} item
                 * @param {?} index
                 * @return {?}
                 */
                (item, index) => current[index] === item));
                if (isChanged) {
                    this.destroy();
                    this.init();
                }
            }
            else {
                this.destroy();
                this.init();
            }
        }
    }
    /**
     * @return {?}
     */
    ngDoCheck() {
        if (!Array.isArray(this.useEffectOn)) {
            this.destroy();
            this.init();
        }
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this.destroy();
    }
    /**
     * @private
     * @return {?}
     */
    init() {
        this.viewRef = this.vcr.createEmbeddedView(this.templateRef, this.context);
        if (this.useEffect) {
            this.onDestroyCallback = this.useEffect();
        }
    }
    /**
     * @private
     * @return {?}
     */
    destroy() {
        if (this.onDestroyCallback) {
            this.onDestroyCallback();
            this.onDestroyCallback = null;
        }
        this.vcr.clear();
        if (this.viewRef) {
            this.viewRef.destroy();
            this.viewRef = null;
        }
    }
}
UseEffectDirective.decorators = [
    { type: Directive, args: [{
                selector: '[useEffect]'
            },] }
];
/** @nocollapse */
UseEffectDirective.ctorParameters = () => [
    { type: TemplateRef },
    { type: ViewContainerRef }
];
UseEffectDirective.propDecorators = {
    useEffect: [{ type: Input }],
    useEffectOn: [{ type: Input }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    UseEffectDirective.prototype.context;
    /** @type {?} */
    UseEffectDirective.prototype.useEffect;
    /** @type {?} */
    UseEffectDirective.prototype.useEffectOn;
    /**
     * @type {?}
     * @private
     */
    UseEffectDirective.prototype.onDestroyCallback;
    /**
     * @type {?}
     * @private
     */
    UseEffectDirective.prototype.viewRef;
    /**
     * @type {?}
     * @private
     */
    UseEffectDirective.prototype.templateRef;
    /**
     * @type {?}
     * @private
     */
    UseEffectDirective.prototype.vcr;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLWVmZmVjdC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Abmd4Zi9wbGF0Zm9ybS8iLCJzb3VyY2VzIjpbImxpYi9kaXJlY3RpdmVzL3VzZS1lZmZlY3QuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUNMLFNBQVMsRUFHVCxLQUFLLEVBSUwsV0FBVyxFQUNYLGdCQUFnQixFQUNqQixNQUFNLGVBQWUsQ0FBQztBQUt2QixNQUFNLE9BQU8sa0JBQWtCOzs7OztJQVU3QixZQUNVLFdBQTRCLEVBQzVCLEdBQXFCO1FBRHJCLGdCQUFXLEdBQVgsV0FBVyxDQUFpQjtRQUM1QixRQUFHLEdBQUgsR0FBRyxDQUFrQjtRQVh2QixZQUFPLEdBQU8sRUFBRSxDQUFDO0lBWXRCLENBQUM7Ozs7O0lBRUosV0FBVyxDQUFDLE9BQXNCO1FBQ2hDLElBQUksT0FBTyxDQUFDLFNBQVMsSUFBSSxJQUFJLENBQUMsU0FBUyxFQUFFO1lBQ3ZDLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztZQUNmLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztTQUNiO2FBQU0sSUFBSSxPQUFPLENBQUMsV0FBVyxFQUFFO1lBQzlCLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLEVBQUU7O3NCQUM3QixRQUFRLEdBQUcsT0FBTyxDQUFDLFdBQVcsQ0FBQyxhQUFhLElBQUksRUFBRTs7c0JBQ2xELE9BQU8sR0FBRyxPQUFPLENBQUMsV0FBVyxDQUFDLFlBQVksSUFBSSxFQUFFOztzQkFFaEQsU0FBUyxHQUFHLENBQUMsUUFBUSxDQUFDLEtBQUs7Ozs7O2dCQUFDLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxFQUFFLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxLQUFLLElBQUksRUFBQztnQkFFM0UsSUFBSSxTQUFTLEVBQUU7b0JBQ2IsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO29CQUNmLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztpQkFDYjthQUNGO2lCQUFNO2dCQUNMLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztnQkFDZixJQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7YUFDYjtTQUNGO0lBQ0gsQ0FBQzs7OztJQUVELFNBQVM7UUFDUCxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLEVBQUU7WUFDcEMsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1lBQ2YsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO1NBQ2I7SUFDSCxDQUFDOzs7O0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUNqQixDQUFDOzs7OztJQUVPLElBQUk7UUFDVixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDM0UsSUFBSSxJQUFJLENBQUMsU0FBUyxFQUFFO1lBQ2xCLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxJQUFJLENBQUMsU0FBUyxFQUFFLENBQUM7U0FDM0M7SUFDSCxDQUFDOzs7OztJQUVPLE9BQU87UUFDYixJQUFJLElBQUksQ0FBQyxpQkFBaUIsRUFBRTtZQUMxQixJQUFJLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztZQUN6QixJQUFJLENBQUMsaUJBQWlCLEdBQUcsSUFBSSxDQUFDO1NBQy9CO1FBRUQsSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUVqQixJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDaEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLEVBQUUsQ0FBQztZQUN2QixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztTQUNyQjtJQUNILENBQUM7OztZQXRFRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGFBQWE7YUFDeEI7Ozs7WUFOQyxXQUFXO1lBQ1gsZ0JBQWdCOzs7d0JBU2YsS0FBSzswQkFDTCxLQUFLOzs7Ozs7O0lBSE4scUNBQXlCOztJQUV6Qix1Q0FBNkI7O0lBQzdCLHlDQUF5Qjs7Ozs7SUFFekIsK0NBQW9DOzs7OztJQUVwQyxxQ0FBcUM7Ozs7O0lBR25DLHlDQUFvQzs7Ozs7SUFDcEMsaUNBQTZCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgRGlyZWN0aXZlLFxuICBEb0NoZWNrLFxuICBFbWJlZGRlZFZpZXdSZWYsXG4gIElucHV0LFxuICBPbkNoYW5nZXMsXG4gIE9uRGVzdHJveSxcbiAgU2ltcGxlQ2hhbmdlcyxcbiAgVGVtcGxhdGVSZWYsXG4gIFZpZXdDb250YWluZXJSZWZcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1t1c2VFZmZlY3RdJ1xufSlcbmV4cG9ydCBjbGFzcyBVc2VFZmZlY3REaXJlY3RpdmUgaW1wbGVtZW50cyBPbkNoYW5nZXMsIERvQ2hlY2ssIE9uRGVzdHJveSB7XG4gIHByaXZhdGUgY29udGV4dDoge30gPSB7fTtcblxuICBASW5wdXQoKSB1c2VFZmZlY3Q6IEZ1bmN0aW9uO1xuICBASW5wdXQoKSB1c2VFZmZlY3RPbjogW107XG5cbiAgcHJpdmF0ZSBvbkRlc3Ryb3lDYWxsYmFjazogRnVuY3Rpb247XG5cbiAgcHJpdmF0ZSB2aWV3UmVmOiBFbWJlZGRlZFZpZXdSZWY8e30+O1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgdGVtcGxhdGVSZWY6IFRlbXBsYXRlUmVmPHt9PixcbiAgICBwcml2YXRlIHZjcjogVmlld0NvbnRhaW5lclJlZlxuICApIHt9XG5cbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xuICAgIGlmIChjaGFuZ2VzLnVzZUVmZmVjdCAmJiB0aGlzLnVzZUVmZmVjdCkge1xuICAgICAgdGhpcy5kZXN0cm95KCk7XG4gICAgICB0aGlzLmluaXQoKTtcbiAgICB9IGVsc2UgaWYgKGNoYW5nZXMudXNlRWZmZWN0T24pIHtcbiAgICAgIGlmIChBcnJheS5pc0FycmF5KHRoaXMudXNlRWZmZWN0T24pKSB7XG4gICAgICAgIGNvbnN0IHByZXZpb3VzID0gY2hhbmdlcy51c2VFZmZlY3RPbi5wcmV2aW91c1ZhbHVlIHx8IFtdO1xuICAgICAgICBjb25zdCBjdXJyZW50ID0gY2hhbmdlcy51c2VFZmZlY3RPbi5jdXJyZW50VmFsdWUgfHwgW107XG5cbiAgICAgICAgY29uc3QgaXNDaGFuZ2VkID0gIXByZXZpb3VzLmV2ZXJ5KChpdGVtLCBpbmRleCkgPT4gY3VycmVudFtpbmRleF0gPT09IGl0ZW0pO1xuXG4gICAgICAgIGlmIChpc0NoYW5nZWQpIHtcbiAgICAgICAgICB0aGlzLmRlc3Ryb3koKTtcbiAgICAgICAgICB0aGlzLmluaXQoKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5kZXN0cm95KCk7XG4gICAgICAgIHRoaXMuaW5pdCgpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIG5nRG9DaGVjaygpIHtcbiAgICBpZiAoIUFycmF5LmlzQXJyYXkodGhpcy51c2VFZmZlY3RPbikpIHtcbiAgICAgIHRoaXMuZGVzdHJveSgpO1xuICAgICAgdGhpcy5pbml0KCk7XG4gICAgfVxuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgdGhpcy5kZXN0cm95KCk7XG4gIH1cblxuICBwcml2YXRlIGluaXQoKSB7XG4gICAgdGhpcy52aWV3UmVmID0gdGhpcy52Y3IuY3JlYXRlRW1iZWRkZWRWaWV3KHRoaXMudGVtcGxhdGVSZWYsIHRoaXMuY29udGV4dCk7XG4gICAgaWYgKHRoaXMudXNlRWZmZWN0KSB7XG4gICAgICB0aGlzLm9uRGVzdHJveUNhbGxiYWNrID0gdGhpcy51c2VFZmZlY3QoKTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGRlc3Ryb3koKSB7XG4gICAgaWYgKHRoaXMub25EZXN0cm95Q2FsbGJhY2spIHtcbiAgICAgIHRoaXMub25EZXN0cm95Q2FsbGJhY2soKTtcbiAgICAgIHRoaXMub25EZXN0cm95Q2FsbGJhY2sgPSBudWxsO1xuICAgIH1cblxuICAgIHRoaXMudmNyLmNsZWFyKCk7XG5cbiAgICBpZiAodGhpcy52aWV3UmVmKSB7XG4gICAgICB0aGlzLnZpZXdSZWYuZGVzdHJveSgpO1xuICAgICAgdGhpcy52aWV3UmVmID0gbnVsbDtcbiAgICB9XG4gIH1cbn1cbiJdfQ==