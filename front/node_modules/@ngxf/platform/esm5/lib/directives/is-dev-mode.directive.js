/**
 * @fileoverview added by tsickle
 * Generated from: lib/directives/is-dev-mode.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, TemplateRef, ViewContainerRef, isDevMode, Injectable } from '@angular/core';
import * as i0 from "@angular/core";
var DevModeService = /** @class */ (function () {
    function DevModeService() {
    }
    /**
     * @return {?}
     */
    DevModeService.prototype.isDevMode = /**
     * @return {?}
     */
    function () {
        return isDevMode();
    };
    DevModeService.decorators = [
        { type: Injectable, args: [{ providedIn: 'root' },] }
    ];
    /** @nocollapse */
    DevModeService.ctorParameters = function () { return []; };
    /** @nocollapse */ DevModeService.ɵprov = i0.ɵɵdefineInjectable({ factory: function DevModeService_Factory() { return new DevModeService(); }, token: DevModeService, providedIn: "root" });
    return DevModeService;
}());
export { DevModeService };
var IsDevModeDirective = /** @class */ (function () {
    function IsDevModeDirective(devModeService, viewContainerRef, templateRef) {
        if (devModeService.isDevMode()) {
            viewContainerRef.createEmbeddedView(templateRef);
        }
    }
    /**
     * @return {?}
     */
    IsDevModeDirective.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        if (this.viewRef) {
            this.viewRef.destroy();
            this.viewRef = null;
        }
    };
    IsDevModeDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[isDevMode]'
                },] }
    ];
    /** @nocollapse */
    IsDevModeDirective.ctorParameters = function () { return [
        { type: DevModeService },
        { type: ViewContainerRef },
        { type: TemplateRef }
    ]; };
    return IsDevModeDirective;
}());
export { IsDevModeDirective };
if (false) {
    /**
     * @type {?}
     * @private
     */
    IsDevModeDirective.prototype.viewRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXMtZGV2LW1vZGUuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG5neGYvcGxhdGZvcm0vIiwic291cmNlcyI6WyJsaWIvZGlyZWN0aXZlcy9pcy1kZXYtbW9kZS5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUE4QixXQUFXLEVBQUUsZ0JBQWdCLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFFNUg7SUFFRTtJQUFlLENBQUM7Ozs7SUFFaEIsa0NBQVM7OztJQUFUO1FBQ0UsT0FBTyxTQUFTLEVBQUUsQ0FBQztJQUNyQixDQUFDOztnQkFORixVQUFVLFNBQUMsRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFOzs7Ozt5QkFGbEM7Q0FTQyxBQVBELElBT0M7U0FOWSxjQUFjO0FBUTNCO0lBTUUsNEJBQ0UsY0FBOEIsRUFDOUIsZ0JBQWtDLEVBQ2xDLFdBQThCO1FBRTlCLElBQUksY0FBYyxDQUFDLFNBQVMsRUFBRSxFQUFFO1lBQzlCLGdCQUFnQixDQUFDLGtCQUFrQixDQUFDLFdBQVcsQ0FBQyxDQUFDO1NBQ2xEO0lBQ0gsQ0FBQzs7OztJQUVELHdDQUFXOzs7SUFBWDtRQUNFLElBQUksSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUNoQixJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sRUFBRSxDQUFDO1lBQ3ZCLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO1NBQ3JCO0lBQ0gsQ0FBQzs7Z0JBckJGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsYUFBYTtpQkFDeEI7Ozs7Z0JBS21CLGNBQWM7Z0JBbEIyQixnQkFBZ0I7Z0JBQTdCLFdBQVc7O0lBaUMzRCx5QkFBQztDQUFBLEFBdEJELElBc0JDO1NBbkJZLGtCQUFrQjs7Ozs7O0lBQzdCLHFDQUF1QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgRW1iZWRkZWRWaWV3UmVmLCBPbkRlc3Ryb3ksIFRlbXBsYXRlUmVmLCBWaWV3Q29udGFpbmVyUmVmLCBpc0Rldk1vZGUsIEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQEluamVjdGFibGUoeyBwcm92aWRlZEluOiAncm9vdCcgfSlcbmV4cG9ydCBjbGFzcyBEZXZNb2RlU2VydmljZSB7XG4gIGNvbnN0cnVjdG9yKCkge31cblxuICBpc0Rldk1vZGUoKSB7XG4gICAgcmV0dXJuIGlzRGV2TW9kZSgpO1xuICB9XG59XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tpc0Rldk1vZGVdJ1xufSlcbmV4cG9ydCBjbGFzcyBJc0Rldk1vZGVEaXJlY3RpdmUgaW1wbGVtZW50cyBPbkRlc3Ryb3kge1xuICBwcml2YXRlIHZpZXdSZWY6IEVtYmVkZGVkVmlld1JlZjxudWxsPjtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBkZXZNb2RlU2VydmljZTogRGV2TW9kZVNlcnZpY2UsXG4gICAgdmlld0NvbnRhaW5lclJlZjogVmlld0NvbnRhaW5lclJlZixcbiAgICB0ZW1wbGF0ZVJlZjogVGVtcGxhdGVSZWY8bnVsbD5cbiAgKSB7XG4gICAgaWYgKGRldk1vZGVTZXJ2aWNlLmlzRGV2TW9kZSgpKSB7XG4gICAgICB2aWV3Q29udGFpbmVyUmVmLmNyZWF0ZUVtYmVkZGVkVmlldyh0ZW1wbGF0ZVJlZik7XG4gICAgfVxuICB9XG5cbiAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XG4gICAgaWYgKHRoaXMudmlld1JlZikge1xuICAgICAgdGhpcy52aWV3UmVmLmRlc3Ryb3koKTtcbiAgICAgIHRoaXMudmlld1JlZiA9IG51bGw7XG4gICAgfVxuICB9XG59XG4iXX0=