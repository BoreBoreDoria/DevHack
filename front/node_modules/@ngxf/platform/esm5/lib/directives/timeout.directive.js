/**
 * @fileoverview added by tsickle
 * Generated from: lib/directives/timeout.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';
var TimeoutDirective = /** @class */ (function () {
    function TimeoutDirective(templateRef, viewContainerRef) {
        this.templateRef = templateRef;
        this.viewContainerRef = viewContainerRef;
    }
    Object.defineProperty(TimeoutDirective.prototype, "timeout", {
        set: /**
         * @param {?} milliseconds
         * @return {?}
         */
        function (milliseconds) {
            this.dispose();
            if (isNumber(milliseconds)) {
                this.create(milliseconds);
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    TimeoutDirective.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.dispose();
        this.viewContainerRef.clear();
    };
    /**
     * @private
     * @param {?} milliseconds
     * @return {?}
     */
    TimeoutDirective.prototype.create = /**
     * @private
     * @param {?} milliseconds
     * @return {?}
     */
    function (milliseconds) {
        var _this = this;
        this.timeoutId = setTimeout((/**
         * @return {?}
         */
        function () {
            if (_this.viewContainerRef) {
                _this.viewContainerRef.createEmbeddedView(_this.templateRef);
            }
        }), milliseconds);
    };
    /**
     * @private
     * @return {?}
     */
    TimeoutDirective.prototype.dispose = /**
     * @private
     * @return {?}
     */
    function () {
        this.viewContainerRef.clear();
        if (this.timeoutId) {
            clearTimeout(this.timeoutId);
            this.timeoutId = null;
        }
    };
    TimeoutDirective.decorators = [
        { type: Directive, args: [{ selector: '[timeout]' },] }
    ];
    /** @nocollapse */
    TimeoutDirective.ctorParameters = function () { return [
        { type: TemplateRef },
        { type: ViewContainerRef }
    ]; };
    TimeoutDirective.propDecorators = {
        timeout: [{ type: Input }]
    };
    return TimeoutDirective;
}());
export { TimeoutDirective };
if (false) {
    /**
     * @type {?}
     * @private
     */
    TimeoutDirective.prototype.timeoutId;
    /**
     * @type {?}
     * @private
     */
    TimeoutDirective.prototype.templateRef;
    /**
     * @type {?}
     * @private
     */
    TimeoutDirective.prototype.viewContainerRef;
}
/**
 * @param {?} value
 * @return {?}
 */
function isNumber(value) {
    return typeof value === 'number';
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGltZW91dC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Abmd4Zi9wbGF0Zm9ybS8iLCJzb3VyY2VzIjpbImxpYi9kaXJlY3RpdmVzL3RpbWVvdXQuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQWEsV0FBVyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTNGO0lBS0UsMEJBQ1UsV0FBOEIsRUFDOUIsZ0JBQWtDO1FBRGxDLGdCQUFXLEdBQVgsV0FBVyxDQUFtQjtRQUM5QixxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQWtCO0lBQ3pDLENBQUM7SUFFSixzQkFBYSxxQ0FBTzs7Ozs7UUFBcEIsVUFBcUIsWUFBb0I7WUFDdkMsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1lBQ2YsSUFBSSxRQUFRLENBQUMsWUFBWSxDQUFDLEVBQUU7Z0JBQzFCLElBQUksQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLENBQUM7YUFDM0I7UUFDSCxDQUFDOzs7T0FBQTs7OztJQUVELHNDQUFXOzs7SUFBWDtRQUNFLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUNmLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUNoQyxDQUFDOzs7Ozs7SUFFTyxpQ0FBTTs7Ozs7SUFBZCxVQUFlLFlBQW9CO1FBQW5DLGlCQU1DO1FBTEMsSUFBSSxDQUFDLFNBQVMsR0FBRyxVQUFVOzs7UUFBQztZQUMxQixJQUFJLEtBQUksQ0FBQyxnQkFBZ0IsRUFBRTtnQkFDekIsS0FBSSxDQUFDLGdCQUFnQixDQUFDLGtCQUFrQixDQUFDLEtBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQzthQUM1RDtRQUNILENBQUMsR0FBRSxZQUFZLENBQUMsQ0FBQztJQUNuQixDQUFDOzs7OztJQUVPLGtDQUFPOzs7O0lBQWY7UUFDRSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDOUIsSUFBSSxJQUFJLENBQUMsU0FBUyxFQUFFO1lBQ2xCLFlBQVksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7WUFDN0IsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUM7U0FDdkI7SUFDSCxDQUFDOztnQkFwQ0YsU0FBUyxTQUFDLEVBQUUsUUFBUSxFQUFFLFdBQVcsRUFBRTs7OztnQkFGRSxXQUFXO2dCQUFFLGdCQUFnQjs7OzBCQVloRSxLQUFLOztJQTJCUix1QkFBQztDQUFBLEFBckNELElBcUNDO1NBcENZLGdCQUFnQjs7Ozs7O0lBRTNCLHFDQUF1Qjs7Ozs7SUFHckIsdUNBQXNDOzs7OztJQUN0Qyw0Q0FBMEM7Ozs7OztBQWdDOUMsU0FBUyxRQUFRLENBQUMsS0FBYTtJQUM3QixPQUFPLE9BQU8sS0FBSyxLQUFLLFFBQVEsQ0FBQztBQUNuQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBJbnB1dCwgT25EZXN0cm95LCBUZW1wbGF0ZVJlZiwgVmlld0NvbnRhaW5lclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5ARGlyZWN0aXZlKHsgc2VsZWN0b3I6ICdbdGltZW91dF0nIH0pXG5leHBvcnQgY2xhc3MgVGltZW91dERpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uRGVzdHJveSB7XG5cbiAgcHJpdmF0ZSB0aW1lb3V0SWQ6IGFueTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHRlbXBsYXRlUmVmOiBUZW1wbGF0ZVJlZjxudWxsPixcbiAgICBwcml2YXRlIHZpZXdDb250YWluZXJSZWY6IFZpZXdDb250YWluZXJSZWZcbiAgKSB7fVxuXG4gIEBJbnB1dCgpIHNldCB0aW1lb3V0KG1pbGxpc2Vjb25kczogbnVtYmVyKSB7XG4gICAgdGhpcy5kaXNwb3NlKCk7XG4gICAgaWYgKGlzTnVtYmVyKG1pbGxpc2Vjb25kcykpIHtcbiAgICAgIHRoaXMuY3JlYXRlKG1pbGxpc2Vjb25kcyk7XG4gICAgfVxuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgdGhpcy5kaXNwb3NlKCk7XG4gICAgdGhpcy52aWV3Q29udGFpbmVyUmVmLmNsZWFyKCk7XG4gIH1cblxuICBwcml2YXRlIGNyZWF0ZShtaWxsaXNlY29uZHM6IG51bWJlcikge1xuICAgIHRoaXMudGltZW91dElkID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICBpZiAodGhpcy52aWV3Q29udGFpbmVyUmVmKSB7XG4gICAgICAgIHRoaXMudmlld0NvbnRhaW5lclJlZi5jcmVhdGVFbWJlZGRlZFZpZXcodGhpcy50ZW1wbGF0ZVJlZik7XG4gICAgICB9XG4gICAgfSwgbWlsbGlzZWNvbmRzKTtcbiAgfVxuXG4gIHByaXZhdGUgZGlzcG9zZSgpIHtcbiAgICB0aGlzLnZpZXdDb250YWluZXJSZWYuY2xlYXIoKTtcbiAgICBpZiAodGhpcy50aW1lb3V0SWQpIHtcbiAgICAgIGNsZWFyVGltZW91dCh0aGlzLnRpbWVvdXRJZCk7XG4gICAgICB0aGlzLnRpbWVvdXRJZCA9IG51bGw7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIGlzTnVtYmVyKHZhbHVlOiBudW1iZXIpOiB2YWx1ZSBpcyBudW1iZXIge1xuICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJztcbn1cbiJdfQ==