/**
 * @fileoverview added by tsickle
 * Generated from: lib/ivy-hooks/use-effect.hook.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var noop = (/**
 * @return {?}
 */
function () { });
var ɵ0 = noop;
/**
 * @param {?} effect
 * @param {?=} affectedKeys
 * @return {?}
 */
export function UseEffect(effect, affectedKeys) {
    /** @type {?} */
    var destroyEffectsMap = new WeakMap();
    /**
     * @return {?}
     */
    function init() {
        /** @type {?} */
        var destroyEffect = effect.call(this);
        destroyEffectsMap.set(this, destroyEffect);
    }
    /**
     * @return {?}
     */
    function destroy() {
        if (destroyEffectsMap.has(this)) {
            /** @type {?} */
            var destroyEffect = destroyEffectsMap.get(this);
            if (destroyEffect) {
                destroyEffect();
            }
        }
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    function isChanged(changes) {
        if (!affectedKeys) {
            return true;
        }
        if (affectedKeys.length === 0) {
            return false;
        }
        return affectedKeys.every((/**
         * @param {?} affectedKey
         * @return {?}
         */
        function (affectedKey) { return affectedKey in changes; }));
    }
    return (/**
     * @param {?} def
     * @return {?}
     */
    function (def) {
        /** @type {?} */
        var originalOnInit = def.ngComponentDef.onInit || noop;
        def.ngComponentDef.onInit = (/**
         * @return {?}
         */
        function onInit() {
            originalOnInit();
            init.call(this);
        });
        /** @type {?} */
        var originalOnChanges = def.ngComponentDef.onChanges || noop;
        def.ngComponentDef.onChanges = (/**
         * @param {?} changes
         * @return {?}
         */
        function onChanges(changes) {
            originalOnChanges(changes);
            if (isChanged(changes)) {
                destroy.call(this);
                init.call(this);
            }
        });
        /** @type {?} */
        var originalOnDestroy = def.ngComponentDef.onDestroy || noop;
        def.ngComponentDef.onDestroy = (/**
         * @return {?}
         */
        function onDestroy() {
            originalOnDestroy();
            destroy.call(this);
        });
    });
}
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLWVmZmVjdC5ob29rLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG5neGYvcGxhdGZvcm0vIiwic291cmNlcyI6WyJsaWIvaXZ5LWhvb2tzL3VzZS1lZmZlY3QuaG9vay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7SUFFTSxJQUFJOzs7QUFBRyxjQUFRLENBQUMsQ0FBQTs7Ozs7OztBQUN0QixNQUFNLFVBQVUsU0FBUyxDQUN2QixNQUErQixFQUMvQixZQUF1Qjs7UUFFakIsaUJBQWlCLEdBQUcsSUFBSSxPQUFPLEVBQUU7Ozs7SUFDdkMsU0FBUyxJQUFJOztZQUNMLGFBQWEsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQztRQUN2QyxpQkFBaUIsQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUFFLGFBQWEsQ0FBQyxDQUFDO0lBQzdDLENBQUM7Ozs7SUFDRCxTQUFTLE9BQU87UUFDZCxJQUFJLGlCQUFpQixDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRTs7Z0JBQ3pCLGFBQWEsR0FBRyxpQkFBaUIsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDO1lBQ2pELElBQUksYUFBYSxFQUFFO2dCQUNqQixhQUFhLEVBQUUsQ0FBQzthQUNqQjtTQUNGO0lBQ0gsQ0FBQzs7Ozs7SUFDRCxTQUFTLFNBQVMsQ0FBQyxPQUFzQjtRQUN2QyxJQUFJLENBQUMsWUFBWSxFQUFFO1lBQ2pCLE9BQU8sSUFBSSxDQUFDO1NBQ2I7UUFFRCxJQUFJLFlBQVksQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO1lBQzdCLE9BQU8sS0FBSyxDQUFDO1NBQ2Q7UUFFRCxPQUFPLFlBQVksQ0FBQyxLQUFLOzs7O1FBQUMsVUFBQyxXQUFXLElBQUssT0FBQSxXQUFXLElBQUksT0FBTyxFQUF0QixDQUFzQixFQUFDLENBQUM7SUFDckUsQ0FBQztJQUNEOzs7O0lBQU8sVUFBQyxHQUFROztZQUNSLGNBQWMsR0FBRyxHQUFHLENBQUMsY0FBYyxDQUFDLE1BQU0sSUFBSSxJQUFJO1FBQ3hELEdBQUcsQ0FBQyxjQUFjLENBQUMsTUFBTTs7O1FBQUcsU0FBUyxNQUFNO1lBQ3pDLGNBQWMsRUFBRSxDQUFDO1lBQ2pCLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDbEIsQ0FBQyxDQUFBLENBQUM7O1lBRUksaUJBQWlCLEdBQUcsR0FBRyxDQUFDLGNBQWMsQ0FBQyxTQUFTLElBQUksSUFBSTtRQUM5RCxHQUFHLENBQUMsY0FBYyxDQUFDLFNBQVM7Ozs7UUFBRyxTQUFTLFNBQVMsQ0FBQyxPQUFzQjtZQUN0RSxpQkFBaUIsQ0FBQyxPQUFPLENBQUMsQ0FBQztZQUMzQixJQUFJLFNBQVMsQ0FBQyxPQUFPLENBQUMsRUFBRTtnQkFDdEIsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDbkIsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQzthQUNqQjtRQUNILENBQUMsQ0FBQSxDQUFDOztZQUVJLGlCQUFpQixHQUFHLEdBQUcsQ0FBQyxjQUFjLENBQUMsU0FBUyxJQUFJLElBQUk7UUFDOUQsR0FBRyxDQUFDLGNBQWMsQ0FBQyxTQUFTOzs7UUFBRyxTQUFTLFNBQVM7WUFDL0MsaUJBQWlCLEVBQUUsQ0FBQztZQUNwQixPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3JCLENBQUMsQ0FBQSxDQUFDO0lBQ0osQ0FBQyxFQUFDO0FBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuY29uc3Qgbm9vcCA9ICgpID0+IHsgfTtcbmV4cG9ydCBmdW5jdGlvbiBVc2VFZmZlY3QoXG4gIGVmZmVjdDogKCkgPT4gKCgpID0+IGFueSkgfCBhbnksXG4gIGFmZmVjdGVkS2V5cz86IHN0cmluZ1tdXG4pIHtcbiAgY29uc3QgZGVzdHJveUVmZmVjdHNNYXAgPSBuZXcgV2Vha01hcCgpO1xuICBmdW5jdGlvbiBpbml0KCkge1xuICAgIGNvbnN0IGRlc3Ryb3lFZmZlY3QgPSBlZmZlY3QuY2FsbCh0aGlzKTtcbiAgICBkZXN0cm95RWZmZWN0c01hcC5zZXQodGhpcywgZGVzdHJveUVmZmVjdCk7XG4gIH1cbiAgZnVuY3Rpb24gZGVzdHJveSgpIHtcbiAgICBpZiAoZGVzdHJveUVmZmVjdHNNYXAuaGFzKHRoaXMpKSB7XG4gICAgICBjb25zdCBkZXN0cm95RWZmZWN0ID0gZGVzdHJveUVmZmVjdHNNYXAuZ2V0KHRoaXMpO1xuICAgICAgaWYgKGRlc3Ryb3lFZmZlY3QpIHtcbiAgICAgICAgZGVzdHJveUVmZmVjdCgpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBpc0NoYW5nZWQoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IGJvb2xlYW4ge1xuICAgIGlmICghYWZmZWN0ZWRLZXlzKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBpZiAoYWZmZWN0ZWRLZXlzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIHJldHVybiBhZmZlY3RlZEtleXMuZXZlcnkoKGFmZmVjdGVkS2V5KSA9PiBhZmZlY3RlZEtleSBpbiBjaGFuZ2VzKTtcbiAgfVxuICByZXR1cm4gKGRlZjogYW55KSA9PiB7XG4gICAgY29uc3Qgb3JpZ2luYWxPbkluaXQgPSBkZWYubmdDb21wb25lbnREZWYub25Jbml0IHx8IG5vb3A7XG4gICAgZGVmLm5nQ29tcG9uZW50RGVmLm9uSW5pdCA9IGZ1bmN0aW9uIG9uSW5pdCgpIHtcbiAgICAgIG9yaWdpbmFsT25Jbml0KCk7XG4gICAgICBpbml0LmNhbGwodGhpcyk7XG4gICAgfTtcblxuICAgIGNvbnN0IG9yaWdpbmFsT25DaGFuZ2VzID0gZGVmLm5nQ29tcG9uZW50RGVmLm9uQ2hhbmdlcyB8fCBub29wO1xuICAgIGRlZi5uZ0NvbXBvbmVudERlZi5vbkNoYW5nZXMgPSBmdW5jdGlvbiBvbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xuICAgICAgb3JpZ2luYWxPbkNoYW5nZXMoY2hhbmdlcyk7XG4gICAgICBpZiAoaXNDaGFuZ2VkKGNoYW5nZXMpKSB7XG4gICAgICAgIGRlc3Ryb3kuY2FsbCh0aGlzKTtcbiAgICAgICAgaW5pdC5jYWxsKHRoaXMpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBjb25zdCBvcmlnaW5hbE9uRGVzdHJveSA9IGRlZi5uZ0NvbXBvbmVudERlZi5vbkRlc3Ryb3kgfHwgbm9vcDtcbiAgICBkZWYubmdDb21wb25lbnREZWYub25EZXN0cm95ID0gZnVuY3Rpb24gb25EZXN0cm95KCkge1xuICAgICAgb3JpZ2luYWxPbkRlc3Ryb3koKTtcbiAgICAgIGRlc3Ryb3kuY2FsbCh0aGlzKTtcbiAgICB9O1xuICB9O1xufVxuIl19