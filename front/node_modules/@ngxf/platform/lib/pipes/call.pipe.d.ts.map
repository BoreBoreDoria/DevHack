{"version":3,"file":"call.pipe.d.ts","sources":["call.pipe.d.ts"],"names":[],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA","sourcesContent":["import { ChangeDetectorRef, PipeTransform } from '@angular/core';\ndeclare type Method<T = any> = (this: T, ...args: any[]) => any;\ndeclare type Head<T extends Method> = Parameters<T>[0];\ndeclare type Tail<T extends Method> = T extends (first: any, ...rest: infer R) => any ? R : never;\nexport declare class CallPipe<C> implements PipeTransform {\n    private cd;\n    private readonly context;\n    constructor(cd: ChangeDetectorRef);\n    transform<M extends Method<C>>(param: Head<M>, fn: M, ...params: Tail<M>): ReturnType<M>;\n}\nexport {};\n"]}