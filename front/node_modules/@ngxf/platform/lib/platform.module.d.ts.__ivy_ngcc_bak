import { ModuleWithProviders, Type } from '@angular/core';
import { KeepAliveConfig } from './directives/keep-alive.directive';
export declare class NgxfModule {
    static forLazy(component: Type<any>): ModuleWithProviders<NgxfModule>;
    static forKeepAlive(keepAliveConfig: KeepAliveConfig): ModuleWithProviders<NgxfModule>;
}
export { AsyncDirective } from './directives/async.directive';
export { ComposeDirective } from './directives/compose.directive';
export { CookiesDirective } from './directives/cookies.directive';
export { HttpDirective } from './directives/http.directive';
export { InitDirective } from './directives/init.directive';
export { IsDevModeDirective } from './directives/is-dev-mode.directive';
export { KeepAliveDirective, KeepAliveConfig, KeepAliveGC } from './directives/keep-alive.directive';
export { LazyDirective, LAZY_COMPONENT_TOKEN } from './directives/lazy.directive';
export { NestDirective } from './directives/nest.directive';
export { RenamePropDirective } from './directives/rename-prop.directive';
export { RepeatDirective } from './directives/repeat.directive';
export { ReturnDirective } from './directives/return.directive';
export { RouteDirective } from './directives/route.directive';
export { SetPropsDirective } from './directives/set-props.directive';
export { TimeoutDirective } from './directives/timeout.directive';
export { NgForTrackByKeyDirective } from './directives/track-by-key.directive';
export { UseEffectDirective } from './directives/use-effect.directive';
export { UseReducerDirective } from './directives/use-reducer.directive';
export { UseStateDirective } from './directives/use-state.directive';
export { VirtualDirective } from './directives/virtual.directive';
export { CallPipe } from './pipes/call.pipe';
export { ConsolePipe } from './pipes/console.pipe';
export { UseEffect } from './ivy-hooks/use-effect.hook';
export { UseReducer } from './ivy-hooks/use-reducer.hook';
export { UseState } from './ivy-hooks/use-state.hook';
