import * as ɵngcc0 from '@angular/core';
export interface CookieOptionsArgs {
    path?: string;
    domain?: string;
    expires?: string | Date;
    secure?: boolean;
}
export interface ICookies {
    [key: string]: string[];
}
export interface ICookieService {
    get(key: string): string;
    set(key: string, value: string, options?: CookieOptionsArgs): void;
    remove(key: string, options?: CookieOptionsArgs): void;
}
export declare class CookieOptions {
    path: string;
    domain: string;
    expires: string | Date;
    secure: boolean;
    constructor({ path, domain, expires, secure }?: CookieOptionsArgs);
    merge(options?: CookieOptionsArgs): CookieOptions;
    private isPresent;
}
export declare class BaseCookieOptions extends CookieOptions {
    private baseHref;
    constructor(baseHref: string);
}
export declare class CookiesService implements ICookieService {
    private defaultOptions?;
    constructor(defaultOptions?: CookieOptions);
    protected get cookieString(): string;
    protected set cookieString(val: string);
    private cookieReader;
    private cookieWriter;
    private buildCookieString;
    private mergeOptions;
    get(key: string): string;
    set(key: string, value: string, options?: CookieOptionsArgs): void;
    remove(key: string, options?: CookieOptionsArgs): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CookiesService, [{ optional: true; }]>;
}

//# sourceMappingURL=cookies.tools.d.ts.map