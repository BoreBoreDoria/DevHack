import { OnChanges, OnDestroy, SimpleChanges, TemplateRef, ViewContainerRef } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
interface RenamePropContext {
    $implicit: null;
}
export declare class RenamePropDirective implements OnChanges, OnDestroy {
    private templateRef;
    private viewContainerRef;
    renameProp: string;
    renamePropTo: string;
    private context;
    private composedView;
    constructor(templateRef: TemplateRef<RenamePropContext>, viewContainerRef: ViewContainerRef);
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    private onRenameDidChanged;
    private create;
    private rename;
    private destroy;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<RenamePropDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<RenamePropDirective, "[renameProp]", never, { "renameProp": "renameProp"; "renamePropTo": "renamePropTo"; }, {}, never>;
}
export {};

//# sourceMappingURL=rename-prop.directive.d.ts.map