{"version":3,"file":"transfer-list.component.d.ts","sources":["transfer-list.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { ChangeDetectorRef, ElementRef, EventEmitter, TemplateRef } from '@angular/core';\nimport { TransferDirection, TransferItem } from './interface';\nexport declare class NzTransferListComponent {\n    private cdr;\n    private elementRef;\n    direction: TransferDirection;\n    titleText: string;\n    showSelectAll: boolean;\n    dataSource: TransferItem[];\n    itemUnit: string | undefined;\n    itemsUnit: string | undefined;\n    filter: string;\n    disabled: boolean;\n    showSearch?: boolean;\n    searchPlaceholder?: string;\n    notFoundContent?: string;\n    filterOption?: (inputValue: string, item: TransferItem) => boolean;\n    renderList: TemplateRef<void> | null;\n    render: TemplateRef<void> | null;\n    footer: TemplateRef<void> | null;\n    readonly handleSelectAll: EventEmitter<boolean>;\n    readonly handleSelect: EventEmitter<TransferItem>;\n    readonly filterChange: EventEmitter<{\n        direction: TransferDirection;\n        value: string;\n    }>;\n    stat: {\n        checkAll: boolean;\n        checkHalf: boolean;\n        checkCount: number;\n        shownCount: number;\n    };\n    get validData(): TransferItem[];\n    onItemSelect: (item: TransferItem) => void;\n    onItemSelectAll: (status: boolean) => void;\n    private updateCheckStatus;\n    handleFilter(value: string): void;\n    handleClear(): void;\n    private matchFilter;\n    constructor(cdr: ChangeDetectorRef, elementRef: ElementRef);\n    markForCheck(): void;\n}\n"]}