/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
export function applyConfigDefaults(config, defaultOptions) {
    return Object.assign(Object.assign({}, defaultOptions), config);
}
export function getValueWithConfig(userValue, configValue, defaultValue) {
    return typeof userValue === 'undefined' ? (typeof configValue === 'undefined' ? defaultValue : configValue) : userValue;
}
/**
 * Assign the params into the content component instance.
 * @deprecated Should use dependency injection to get the params for user
 * @breaking-change 11.0.0
 */
export function setContentInstanceParams(instance, params) {
    Object.assign(instance, params);
}
export function getConfigFromComponent(component) {
    const { nzMask, nzMaskClosable, nzClosable, nzOkLoading, nzOkDisabled, nzCancelDisabled, nzCancelLoading, nzKeyboard, nzNoAnimation, nzContent, nzComponentParams, nzFooter, nzGetContainer, nzZIndex, nzWidth, nzWrapClassName, nzClassName, nzStyle, nzTitle, nzCloseIcon, nzMaskStyle, nzBodyStyle, nzOkText, nzCancelText, nzOkType, nzOkDanger, nzIconType, nzModalType, nzOnOk, nzOnCancel, nzAfterOpen, nzAfterClose, nzCloseOnNavigation, nzAutofocus } = component;
    return {
        nzMask,
        nzMaskClosable,
        nzClosable,
        nzOkLoading,
        nzOkDisabled,
        nzCancelDisabled,
        nzCancelLoading,
        nzKeyboard,
        nzNoAnimation,
        nzContent,
        nzComponentParams,
        nzFooter,
        nzGetContainer,
        nzZIndex,
        nzWidth,
        nzWrapClassName,
        nzClassName,
        nzStyle,
        nzTitle,
        nzCloseIcon,
        nzMaskStyle,
        nzBodyStyle,
        nzOkText,
        nzCancelText,
        nzOkType,
        nzOkDanger,
        nzIconType,
        nzModalType,
        nzOnOk,
        nzOnCancel,
        nzAfterOpen,
        nzAfterClose,
        nzCloseOnNavigation,
        nzAutofocus
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvdnN0cy93b3JrLzEvcy9jb21wb25lbnRzL21vZGFsLyIsInNvdXJjZXMiOlsidXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztHQUdHO0FBS0gsTUFBTSxVQUFVLG1CQUFtQixDQUFDLE1BQW9CLEVBQUUsY0FBNEI7SUFDcEYsdUNBQVksY0FBYyxHQUFLLE1BQU0sRUFBRztBQUMxQyxDQUFDO0FBRUQsTUFBTSxVQUFVLGtCQUFrQixDQUFJLFNBQXdCLEVBQUUsV0FBMEIsRUFBRSxZQUFlO0lBQ3pHLE9BQU8sT0FBTyxTQUFTLEtBQUssV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sV0FBVyxLQUFLLFdBQVcsQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDO0FBQzFILENBQUM7QUFFRDs7OztHQUlHO0FBQ0gsTUFBTSxVQUFVLHdCQUF3QixDQUFJLFFBQVcsRUFBRSxNQUE4QjtJQUNyRixNQUFNLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRSxNQUFNLENBQUMsQ0FBQztBQUNsQyxDQUFDO0FBRUQsTUFBTSxVQUFVLHNCQUFzQixDQUFDLFNBQTJCO0lBQ2hFLE1BQU0sRUFDSixNQUFNLEVBQ04sY0FBYyxFQUNkLFVBQVUsRUFDVixXQUFXLEVBQ1gsWUFBWSxFQUNaLGdCQUFnQixFQUNoQixlQUFlLEVBQ2YsVUFBVSxFQUNWLGFBQWEsRUFDYixTQUFTLEVBQ1QsaUJBQWlCLEVBQ2pCLFFBQVEsRUFDUixjQUFjLEVBQ2QsUUFBUSxFQUNSLE9BQU8sRUFDUCxlQUFlLEVBQ2YsV0FBVyxFQUNYLE9BQU8sRUFDUCxPQUFPLEVBQ1AsV0FBVyxFQUNYLFdBQVcsRUFDWCxXQUFXLEVBQ1gsUUFBUSxFQUNSLFlBQVksRUFDWixRQUFRLEVBQ1IsVUFBVSxFQUNWLFVBQVUsRUFDVixXQUFXLEVBQ1gsTUFBTSxFQUNOLFVBQVUsRUFDVixXQUFXLEVBQ1gsWUFBWSxFQUNaLG1CQUFtQixFQUNuQixXQUFXLEVBQ1osR0FBRyxTQUFTLENBQUM7SUFDZCxPQUFPO1FBQ0wsTUFBTTtRQUNOLGNBQWM7UUFDZCxVQUFVO1FBQ1YsV0FBVztRQUNYLFlBQVk7UUFDWixnQkFBZ0I7UUFDaEIsZUFBZTtRQUNmLFVBQVU7UUFDVixhQUFhO1FBQ2IsU0FBUztRQUNULGlCQUFpQjtRQUNqQixRQUFRO1FBQ1IsY0FBYztRQUNkLFFBQVE7UUFDUixPQUFPO1FBQ1AsZUFBZTtRQUNmLFdBQVc7UUFDWCxPQUFPO1FBQ1AsT0FBTztRQUNQLFdBQVc7UUFDWCxXQUFXO1FBQ1gsV0FBVztRQUNYLFFBQVE7UUFDUixZQUFZO1FBQ1osUUFBUTtRQUNSLFVBQVU7UUFDVixVQUFVO1FBQ1YsV0FBVztRQUNYLE1BQU07UUFDTixVQUFVO1FBQ1YsV0FBVztRQUNYLFlBQVk7UUFDWixtQkFBbUI7UUFDbkIsV0FBVztLQUNaLENBQUM7QUFDSixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2dpdGh1Yi5jb20vTkctWk9SUk8vbmctem9ycm8tYW50ZC9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKi9cblxuaW1wb3J0IHsgTW9kYWxPcHRpb25zIH0gZnJvbSAnLi9tb2RhbC10eXBlcyc7XG5pbXBvcnQgeyBOek1vZGFsQ29tcG9uZW50IH0gZnJvbSAnLi9tb2RhbC5jb21wb25lbnQnO1xuXG5leHBvcnQgZnVuY3Rpb24gYXBwbHlDb25maWdEZWZhdWx0cyhjb25maWc6IE1vZGFsT3B0aW9ucywgZGVmYXVsdE9wdGlvbnM6IE1vZGFsT3B0aW9ucyk6IE1vZGFsT3B0aW9ucyB7XG4gIHJldHVybiB7IC4uLmRlZmF1bHRPcHRpb25zLCAuLi5jb25maWcgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFZhbHVlV2l0aENvbmZpZzxUPih1c2VyVmFsdWU6IFQgfCB1bmRlZmluZWQsIGNvbmZpZ1ZhbHVlOiBUIHwgdW5kZWZpbmVkLCBkZWZhdWx0VmFsdWU6IFQpOiBUIHwgdW5kZWZpbmVkIHtcbiAgcmV0dXJuIHR5cGVvZiB1c2VyVmFsdWUgPT09ICd1bmRlZmluZWQnID8gKHR5cGVvZiBjb25maWdWYWx1ZSA9PT0gJ3VuZGVmaW5lZCcgPyBkZWZhdWx0VmFsdWUgOiBjb25maWdWYWx1ZSkgOiB1c2VyVmFsdWU7XG59XG5cbi8qKlxuICogQXNzaWduIHRoZSBwYXJhbXMgaW50byB0aGUgY29udGVudCBjb21wb25lbnQgaW5zdGFuY2UuXG4gKiBAZGVwcmVjYXRlZCBTaG91bGQgdXNlIGRlcGVuZGVuY3kgaW5qZWN0aW9uIHRvIGdldCB0aGUgcGFyYW1zIGZvciB1c2VyXG4gKiBAYnJlYWtpbmctY2hhbmdlIDExLjAuMFxuICovXG5leHBvcnQgZnVuY3Rpb24gc2V0Q29udGVudEluc3RhbmNlUGFyYW1zPFQ+KGluc3RhbmNlOiBULCBwYXJhbXM6IFBhcnRpYWw8VD4gfCB1bmRlZmluZWQpOiB2b2lkIHtcbiAgT2JqZWN0LmFzc2lnbihpbnN0YW5jZSwgcGFyYW1zKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldENvbmZpZ0Zyb21Db21wb25lbnQoY29tcG9uZW50OiBOek1vZGFsQ29tcG9uZW50KTogTW9kYWxPcHRpb25zIHtcbiAgY29uc3Qge1xuICAgIG56TWFzayxcbiAgICBuek1hc2tDbG9zYWJsZSxcbiAgICBuekNsb3NhYmxlLFxuICAgIG56T2tMb2FkaW5nLFxuICAgIG56T2tEaXNhYmxlZCxcbiAgICBuekNhbmNlbERpc2FibGVkLFxuICAgIG56Q2FuY2VsTG9hZGluZyxcbiAgICBuektleWJvYXJkLFxuICAgIG56Tm9BbmltYXRpb24sXG4gICAgbnpDb250ZW50LFxuICAgIG56Q29tcG9uZW50UGFyYW1zLFxuICAgIG56Rm9vdGVyLFxuICAgIG56R2V0Q29udGFpbmVyLFxuICAgIG56WkluZGV4LFxuICAgIG56V2lkdGgsXG4gICAgbnpXcmFwQ2xhc3NOYW1lLFxuICAgIG56Q2xhc3NOYW1lLFxuICAgIG56U3R5bGUsXG4gICAgbnpUaXRsZSxcbiAgICBuekNsb3NlSWNvbixcbiAgICBuek1hc2tTdHlsZSxcbiAgICBuekJvZHlTdHlsZSxcbiAgICBuek9rVGV4dCxcbiAgICBuekNhbmNlbFRleHQsXG4gICAgbnpPa1R5cGUsXG4gICAgbnpPa0RhbmdlcixcbiAgICBuekljb25UeXBlLFxuICAgIG56TW9kYWxUeXBlLFxuICAgIG56T25PayxcbiAgICBuek9uQ2FuY2VsLFxuICAgIG56QWZ0ZXJPcGVuLFxuICAgIG56QWZ0ZXJDbG9zZSxcbiAgICBuekNsb3NlT25OYXZpZ2F0aW9uLFxuICAgIG56QXV0b2ZvY3VzXG4gIH0gPSBjb21wb25lbnQ7XG4gIHJldHVybiB7XG4gICAgbnpNYXNrLFxuICAgIG56TWFza0Nsb3NhYmxlLFxuICAgIG56Q2xvc2FibGUsXG4gICAgbnpPa0xvYWRpbmcsXG4gICAgbnpPa0Rpc2FibGVkLFxuICAgIG56Q2FuY2VsRGlzYWJsZWQsXG4gICAgbnpDYW5jZWxMb2FkaW5nLFxuICAgIG56S2V5Ym9hcmQsXG4gICAgbnpOb0FuaW1hdGlvbixcbiAgICBuekNvbnRlbnQsXG4gICAgbnpDb21wb25lbnRQYXJhbXMsXG4gICAgbnpGb290ZXIsXG4gICAgbnpHZXRDb250YWluZXIsXG4gICAgbnpaSW5kZXgsXG4gICAgbnpXaWR0aCxcbiAgICBueldyYXBDbGFzc05hbWUsXG4gICAgbnpDbGFzc05hbWUsXG4gICAgbnpTdHlsZSxcbiAgICBuelRpdGxlLFxuICAgIG56Q2xvc2VJY29uLFxuICAgIG56TWFza1N0eWxlLFxuICAgIG56Qm9keVN0eWxlLFxuICAgIG56T2tUZXh0LFxuICAgIG56Q2FuY2VsVGV4dCxcbiAgICBuek9rVHlwZSxcbiAgICBuek9rRGFuZ2VyLFxuICAgIG56SWNvblR5cGUsXG4gICAgbnpNb2RhbFR5cGUsXG4gICAgbnpPbk9rLFxuICAgIG56T25DYW5jZWwsXG4gICAgbnpBZnRlck9wZW4sXG4gICAgbnpBZnRlckNsb3NlLFxuICAgIG56Q2xvc2VPbk5hdmlnYXRpb24sXG4gICAgbnpBdXRvZm9jdXNcbiAgfTtcbn1cbiJdfQ==