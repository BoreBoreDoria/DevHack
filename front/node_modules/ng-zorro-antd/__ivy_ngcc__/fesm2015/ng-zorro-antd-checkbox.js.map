{"version":3,"file":"ng-zorro-antd-checkbox.js","sources":["../../components/checkbox/checkbox-wrapper.component.ts","../../components/checkbox/checkbox.component.ts","../../components/checkbox/checkbox-group.component.ts","../../components/checkbox/checkbox.module.ts","../../components/checkbox/public-api.ts","../../components/checkbox/ng-zorro-antd-checkbox.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Output, Renderer2, ViewEncapsulation } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzCheckboxComponent } from './checkbox.component';\n\n@Component({\n  selector: 'nz-checkbox-wrapper',\n  exportAs: 'nzCheckboxWrapper',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: ` <ng-content></ng-content> `\n})\nexport class NzCheckboxWrapperComponent {\n  @Output() readonly nzOnChange = new EventEmitter<NzSafeAny[]>();\n  private checkboxList: NzCheckboxComponent[] = [];\n\n  addCheckbox(value: NzCheckboxComponent): void {\n    this.checkboxList.push(value);\n  }\n\n  removeCheckbox(value: NzCheckboxComponent): void {\n    this.checkboxList.splice(this.checkboxList.indexOf(value), 1);\n  }\n\n  onChange(): void {\n    const listOfCheckedValue = this.checkboxList.filter(item => item.nzChecked).map(item => item.nzValue);\n    this.nzOnChange.emit(listOfCheckedValue);\n  }\n\n  constructor(renderer: Renderer2, elementRef: ElementRef) {\n    renderer.addClass(elementRef.nativeElement, 'ant-checkbox-group');\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { BooleanInput, NzSafeAny, OnChangeType, OnTouchedType } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { NzCheckboxWrapperComponent } from './checkbox-wrapper.component';\n\n@Component({\n  selector: '[nz-checkbox]',\n  exportAs: 'nzCheckbox',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <span\n      class=\"ant-checkbox\"\n      [class.ant-checkbox-checked]=\"nzChecked && !nzIndeterminate\"\n      [class.ant-checkbox-disabled]=\"nzDisabled\"\n      [class.ant-checkbox-indeterminate]=\"nzIndeterminate\"\n    >\n      <input\n        #inputElement\n        type=\"checkbox\"\n        class=\"ant-checkbox-input\"\n        [attr.autofocus]=\"nzAutoFocus ? 'autofocus' : null\"\n        [checked]=\"nzChecked\"\n        [ngModel]=\"nzChecked\"\n        [disabled]=\"nzDisabled\"\n        (ngModelChange)=\"innerCheckedChange($event)\"\n        (click)=\"$event.stopPropagation()\"\n      />\n      <span class=\"ant-checkbox-inner\"></span>\n    </span>\n    <span><ng-content></ng-content></span>\n  `,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NzCheckboxComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '[class.ant-checkbox-wrapper-checked]': 'nzChecked',\n    '(click)': 'hostClick($event)'\n  }\n})\nexport class NzCheckboxComponent implements OnInit, ControlValueAccessor, OnDestroy, AfterViewInit {\n  static ngAcceptInputType_nzAutoFocus: BooleanInput;\n  static ngAcceptInputType_nzDisabled: BooleanInput;\n  static ngAcceptInputType_nzIndeterminate: BooleanInput;\n  static ngAcceptInputType_nzChecked: BooleanInput;\n\n  onChange: OnChangeType = () => {};\n  onTouched: OnTouchedType = () => {};\n  @ViewChild('inputElement', { static: true }) private inputElement!: ElementRef;\n  @Output() readonly nzCheckedChange = new EventEmitter<boolean>();\n  @Input() nzValue: NzSafeAny | null = null;\n  @Input() @InputBoolean() nzAutoFocus = false;\n  @Input() @InputBoolean() nzDisabled = false;\n  @Input() @InputBoolean() nzIndeterminate = false;\n  @Input() @InputBoolean() nzChecked = false;\n\n  hostClick(e: MouseEvent): void {\n    e.preventDefault();\n    this.focus();\n    this.innerCheckedChange(!this.nzChecked);\n  }\n\n  innerCheckedChange(checked: boolean): void {\n    if (!this.nzDisabled) {\n      this.nzChecked = checked;\n      this.onChange(this.nzChecked);\n      this.nzCheckedChange.emit(this.nzChecked);\n      if (this.nzCheckboxWrapperComponent) {\n        this.nzCheckboxWrapperComponent.onChange();\n      }\n    }\n  }\n\n  writeValue(value: boolean): void {\n    this.nzChecked = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: OnChangeType): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: OnTouchedType): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    this.nzDisabled = disabled;\n    this.cdr.markForCheck();\n  }\n\n  focus(): void {\n    this.focusMonitor.focusVia(this.inputElement, 'keyboard');\n  }\n\n  blur(): void {\n    this.inputElement.nativeElement.blur();\n  }\n\n  constructor(\n    private elementRef: ElementRef<HTMLElement>,\n    @Optional() private nzCheckboxWrapperComponent: NzCheckboxWrapperComponent,\n    private cdr: ChangeDetectorRef,\n    private focusMonitor: FocusMonitor\n  ) {\n    // TODO: move to host after View Engine deprecation\n    this.elementRef.nativeElement.classList.add('ant-checkbox-wrapper');\n  }\n\n  ngOnInit(): void {\n    this.focusMonitor.monitor(this.elementRef, true).subscribe(focusOrigin => {\n      if (!focusOrigin) {\n        Promise.resolve().then(() => this.onTouched());\n      }\n    });\n    if (this.nzCheckboxWrapperComponent) {\n      this.nzCheckboxWrapperComponent.addCheckbox(this);\n    }\n  }\n  ngAfterViewInit(): void {\n    if (this.nzAutoFocus) {\n      this.focus();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.focusMonitor.stopMonitoring(this.elementRef);\n    if (this.nzCheckboxWrapperComponent) {\n      this.nzCheckboxWrapperComponent.removeCheckbox(this);\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { ChangeDetectorRef, Component, ElementRef, forwardRef, Input, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { BooleanInput, OnChangeType, OnTouchedType } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\nexport interface NzCheckBoxOptionInterface {\n  label: string;\n  value: string;\n  checked?: boolean;\n  disabled?: boolean;\n}\n\n@Component({\n  selector: 'nz-checkbox-group',\n  exportAs: 'nzCheckboxGroup',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <label\n      nz-checkbox\n      class=\"ant-checkbox-group-item\"\n      *ngFor=\"let o of options; trackBy: trackByOption\"\n      [nzDisabled]=\"o.disabled || nzDisabled\"\n      [nzChecked]=\"o.checked!\"\n      (nzCheckedChange)=\"onCheckedChange(o, $event)\"\n    >\n      <span>{{ o.label }}</span>\n    </label>\n  `,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NzCheckboxGroupComponent),\n      multi: true\n    }\n  ]\n})\nexport class NzCheckboxGroupComponent implements ControlValueAccessor, OnInit, OnDestroy {\n  static ngAcceptInputType_nzDisabled: BooleanInput;\n\n  onChange: OnChangeType = () => {};\n  onTouched: OnTouchedType = () => {};\n  options: NzCheckBoxOptionInterface[] = [];\n  @Input() @InputBoolean() nzDisabled = false;\n\n  trackByOption(_: number, option: NzCheckBoxOptionInterface): string {\n    return option.value;\n  }\n\n  onCheckedChange(option: NzCheckBoxOptionInterface, checked: boolean): void {\n    option.checked = checked;\n    this.onChange(this.options);\n  }\n\n  constructor(private elementRef: ElementRef, private focusMonitor: FocusMonitor, private cdr: ChangeDetectorRef) {\n    // TODO: move to host after View Engine deprecation\n    this.elementRef.nativeElement.classList.add('ant-checkbox-group');\n  }\n\n  ngOnInit(): void {\n    this.focusMonitor.monitor(this.elementRef, true).subscribe(focusOrigin => {\n      if (!focusOrigin) {\n        Promise.resolve().then(() => this.onTouched());\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.focusMonitor.stopMonitoring(this.elementRef);\n  }\n\n  writeValue(value: NzCheckBoxOptionInterface[]): void {\n    this.options = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: OnChangeType): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: OnTouchedType): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    this.nzDisabled = disabled;\n    this.cdr.markForCheck();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NzCheckboxGroupComponent } from './checkbox-group.component';\nimport { NzCheckboxWrapperComponent } from './checkbox-wrapper.component';\nimport { NzCheckboxComponent } from './checkbox.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, A11yModule],\n  declarations: [NzCheckboxComponent, NzCheckboxGroupComponent, NzCheckboxWrapperComponent],\n  exports: [NzCheckboxComponent, NzCheckboxGroupComponent, NzCheckboxWrapperComponent]\n})\nexport class NzCheckboxModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './checkbox.component';\nexport * from './checkbox.module';\nexport * from './checkbox-group.component';\nexport * from './checkbox-wrapper.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}