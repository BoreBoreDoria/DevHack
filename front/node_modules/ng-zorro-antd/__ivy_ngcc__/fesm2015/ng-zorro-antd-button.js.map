{"version":3,"file":"ng-zorro-antd-button.js","sources":["../../components/button/button.component.ts","../../components/button/button-group.component.ts","../../components/button/button.module.ts","../../components/button/public-api.ts","../../components/button/ng-zorro-antd-button.ts"],"names":["NzTransitionPatchModule"],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Renderer2,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport { NzConfigKey, NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { warnDeprecation } from 'ng-zorro-antd/core/logger';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\nimport { NzIconDirective } from 'ng-zorro-antd/icon';\nimport { Subject } from 'rxjs';\nimport { filter, startWith, takeUntil } from 'rxjs/operators';\n\n/**\n * @deprecated `danger` not supported, use `nzDanger` instead\n * @breaking-change 12.0.0\n */\ntype NzLegacyButtonType = 'primary' | 'default' | 'dashed' | 'danger' | 'link' | 'text' | null;\n\nexport type NzButtonType = NzLegacyButtonType;\nexport type NzButtonShape = 'circle' | 'round' | null;\nexport type NzButtonSize = 'large' | 'default' | 'small';\n\nconst NZ_CONFIG_MODULE_NAME: NzConfigKey = 'button';\n\n@Component({\n  selector: 'button[nz-button], a[nz-button]',\n  exportAs: 'nzButton',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <i nz-icon nzType=\"loading\" *ngIf=\"nzLoading\"></i>\n    <ng-content></ng-content>\n  `,\n  host: {\n    '[class.ant-btn-primary]': `nzType === 'primary'`,\n    '[class.ant-btn-dashed]': `nzType === 'dashed'`,\n    '[class.ant-btn-link]': `nzType === 'link'`,\n    '[class.ant-btn-text]': `nzType === 'text'`,\n    '[class.ant-btn-danger]': `nzType === 'danger'`,\n    '[class.ant-btn-circle]': `nzShape === 'circle'`,\n    '[class.ant-btn-round]': `nzShape === 'round'`,\n    '[class.ant-btn-lg]': `nzSize === 'large'`,\n    '[class.ant-btn-sm]': `nzSize === 'small'`,\n    '[class.ant-btn-dangerous]': `nzDanger`,\n    '[class.ant-btn-loading]': `nzLoading`,\n    '[class.ant-btn-background-ghost]': `nzGhost`,\n    '[class.ant-btn-block]': `nzBlock`,\n    '[class.ant-input-search-button]': `nzSearch`,\n    '[attr.tabindex]': 'disabled ? -1 : (tabIndex === null ? null : tabIndex)',\n    '[attr.disabled]': 'disabled || null'\n  }\n})\nexport class NzButtonComponent implements OnDestroy, OnChanges, AfterViewInit, AfterContentInit {\n  readonly _nzModuleName: NzConfigKey = NZ_CONFIG_MODULE_NAME;\n  static ngAcceptInputType_nzBlock: BooleanInput;\n  static ngAcceptInputType_nzGhost: BooleanInput;\n  static ngAcceptInputType_nzSearch: BooleanInput;\n  static ngAcceptInputType_nzLoading: BooleanInput;\n  static ngAcceptInputType_nzDanger: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n\n  @ContentChild(NzIconDirective, { read: ElementRef }) nzIconDirectiveElement!: ElementRef;\n  @Input() @InputBoolean() nzBlock: boolean = false;\n  @Input() @InputBoolean() nzGhost: boolean = false;\n  @Input() @InputBoolean() nzSearch: boolean = false;\n  @Input() @InputBoolean() nzLoading: boolean = false;\n  @Input() @InputBoolean() nzDanger: boolean = false;\n  @Input() @InputBoolean() disabled: boolean = false;\n  @Input() tabIndex: number | string | null = null;\n  @Input() nzType: NzButtonType = null;\n  @Input() nzShape: NzButtonShape = null;\n  @Input() @WithConfig() nzSize: NzButtonSize = 'default';\n  private destroy$ = new Subject<void>();\n  private loading$ = new Subject<boolean>();\n\n  insertSpan(nodes: NodeList, renderer: Renderer2): void {\n    nodes.forEach(node => {\n      if (node.nodeName === '#text') {\n        const span = renderer.createElement('span');\n        const parent = renderer.parentNode(node);\n        renderer.insertBefore(parent, span, node);\n        renderer.appendChild(span, node);\n      }\n    });\n  }\n\n  assertIconOnly(element: HTMLButtonElement, renderer: Renderer2): void {\n    const listOfNode = Array.from(element.childNodes);\n    const iconCount = listOfNode.filter(node => node.nodeName === 'I').length;\n    const noText = listOfNode.every(node => node.nodeName !== '#text');\n    const noSpan = listOfNode.every(node => node.nodeName !== 'SPAN');\n    const isIconOnly = noSpan && noText && iconCount >= 1;\n    if (isIconOnly) {\n      renderer.addClass(element, 'ant-btn-icon-only');\n    }\n  }\n\n  constructor(\n    private elementRef: ElementRef,\n    private cdr: ChangeDetectorRef,\n    private renderer: Renderer2,\n    public nzConfigService: NzConfigService\n  ) {\n    // TODO: move to host after View Engine deprecation\n    this.elementRef.nativeElement.classList.add('ant-btn');\n    this.nzConfigService\n      .getConfigChangeEventForComponent(NZ_CONFIG_MODULE_NAME)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.cdr.markForCheck();\n      });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzLoading, nzType } = changes;\n    if (nzLoading) {\n      this.loading$.next(this.nzLoading);\n    }\n\n    if (nzType?.currentValue === 'danger') {\n      warnDeprecation(`'danger' value of 'nzType' in Button is going to be removed in 12.0.0. Please use 'nzDanger' instead.`);\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.assertIconOnly(this.elementRef.nativeElement, this.renderer);\n    this.insertSpan(this.elementRef.nativeElement.childNodes, this.renderer);\n  }\n\n  ngAfterContentInit(): void {\n    this.loading$\n      .pipe(\n        startWith(this.nzLoading),\n        filter(() => !!this.nzIconDirectiveElement),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(loading => {\n        const nativeElement = this.nzIconDirectiveElement.nativeElement;\n        if (loading) {\n          this.renderer.setStyle(nativeElement, 'display', 'none');\n        } else {\n          this.renderer.removeStyle(nativeElement, 'display');\n        }\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\n\nexport type NzButtonGroupSize = 'large' | 'default' | 'small';\n\n@Component({\n  selector: 'nz-button-group',\n  exportAs: 'nzButtonGroup',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    '[class.ant-btn-group-lg]': `nzSize === 'large'`,\n    '[class.ant-btn-group-sm]': `nzSize === 'small'`\n  },\n  preserveWhitespaces: false,\n  template: `\n    <ng-content></ng-content>\n  `\n})\nexport class NzButtonGroupComponent {\n  @Input() nzSize: NzButtonGroupSize = 'default';\n\n  constructor(private elementRef: ElementRef) {\n    // TODO: move to host after View Engine deprecation\n    this.elementRef.nativeElement.classList.add('ant-btn-group');\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ɵNzTransitionPatchModule as NzTransitionPatchModule } from 'ng-zorro-antd/core/transition-patch';\nimport { NzWaveModule } from 'ng-zorro-antd/core/wave';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzButtonGroupComponent } from './button-group.component';\nimport { NzButtonComponent } from './button.component';\n\n@NgModule({\n  declarations: [NzButtonComponent, NzButtonGroupComponent],\n  exports: [NzButtonComponent, NzButtonGroupComponent, NzTransitionPatchModule, NzWaveModule],\n  imports: [CommonModule, NzWaveModule, NzIconModule, NzTransitionPatchModule]\n})\nexport class NzButtonModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './button.component';\nexport * from './button-group.component';\nexport * from './button.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}