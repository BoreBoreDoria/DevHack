{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","../../components/tree-view/checkbox.ts","../../components/tree-view/tree.ts","../../components/tree-view/node.ts","../../components/tree-view/utils.ts","../../components/tree-view/indent.ts","../../components/tree-view/option.ts","../../components/tree-view/outlet.ts","../../components/tree-view/padding.ts","../../components/tree-view/toggle.ts","../../components/tree-view/tree-view.ts","../../components/tree-view/tree-virtual-scroll-view.ts","../../components/tree-view/tree-view.module.ts","../../components/tree-view/data-source.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","TypeError","String","__","this","constructor","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","s","Symbol","iterator","m","next","value","done","__read","n","e","ar","push","error","__spread","concat","NzTreeNodeCheckboxComponent","nzClick","EventEmitter","onClick","nzDisabled","emit","Component","args","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","preserveWhitespaces","host","class","[class.ant-tree-checkbox-checked]","[class.ant-tree-checkbox-indeterminate]","[class.ant-tree-checkbox-disabled]","(click)","Input","Output","InputBoolean","NzTreeView","differs","changeDetectorRef","noAnimation","directionality","_this","_super","destroy$","Subject","dir","_dataSourceChanged","nzDirectoryTree","nzBlockNode","dataSource","ngOnInit","_a","change","pipe","takeUntil","subscribe","direction","detectChanges","ngOnDestroy","complete","renderNodeChanges","data","dataDiffer","viewContainer","parentData","CdkTree","IterableDiffers","ChangeDetectorRef","NzNoAnimationDirective","type","Host","Optional","Directionality","NzTreeNodeComponent","elementRef","tree","renderer","cdr","indents","disabled","selected","isLeaf","_elementRef","nativeElement","classList","add","treeControl","isExpandable","disable","updateDisabledClass","enable","select","updateSelectedClass","deselect","setIndents","markForCheck","addClass","removeClass","CdkTreeNode","exportAs","providers","provide","useExisting","[class.ant-tree-treenode-switcher-open]","[class.ant-tree-treenode-switcher-close]","ElementRef","Renderer2","NzTreeNodeDefDirective","CdkTreeNodeDef","Directive","NzTreeVirtualScrollNodeOutletDirective","_viewContainerRef","_viewRef","ngOnChanges","changes","shouldRecreateView","viewContainerRef","remove","indexOf","createEmbeddedView","nodeDef","context","mostRecentTreeNode","updateExistingContext","ctxChange","hasContextShapeChanged","prevCtxKeys","keys","previousValue","currCtxKeys","currentValue","currCtxKeys_1","currCtxKeys_1_1","propName","ctx","_b","_c","getParent","nodes","node","getLevel","index","level","preLevel","getNextSibling","_index","nextLevel","ViewContainerRef","BUILD_INDENTS_SCHEDULER","requestAnimationFrame","animationFrameScheduler","asapScheduler","NzTreeNodeIndentLineDirective","treeNode","isLast","preNodeRef","nextNodeRef","currentIndents","buildIndents","checkLast","changeSubscription","merge","_dataChanges","auditTime","checkAdjacent","getIndents","dataNodes","parent","unshift","diffString","map","join","preNode","nextNode","unsubscribe","[class.ant-tree-treenode-leaf-last]","NzTreeNodeOptionComponent","nzSelected","isExpanded","[class.ant-tree-node-content-wrapper-open]","[class.ant-tree-node-selected]","_node","CdkTreeNodeOutlet","NzTreeNodeOutletDirective","Inject","CDK_TREE_NODE_OUTLET_NODE","NzTreeNodePaddingDirective","apply","_indent","_level","_setLevelInput","indent","_setIndentInput","CdkTreeNodePadding","NzTreeNodeToggleDirective","_recursive","coerceBooleanProperty","_treeNode","CdkTreeNodeToggle","[class.ant-tree-switcher_open]","[class.ant-tree-switcher_close]","NzTreeViewComponent","_afterViewInit","ngAfterViewInit","Promise","resolve","then","encapsulation","ViewEncapsulation","None","[class.ant-tree-block-node]","[class.ant-tree-directory]","[class.ant-tree-rtl]","animations","treeCollapseMotion","ViewChild","static","DEFAULT_SIZE","NzTreeVirtualScrollViewComponent","itemSize","nzNodeWidth","nzItemSize","nzMinBufferPx","nzMaxBufferPx","bind","createNode","nodeData","_getNodeDef","CdkTreeNodeOutletContext","warnDeprecation","CdkVirtualScrollViewport","treeWithControlComponents","NzTreeNodeToggleRotateIconDirective","NzTreeNodeToggleActiveIconDirective","NzTreeNodeNoopToggleDirective","NzTreeNodeIndentsComponent","NgModule","imports","BidiModule","CommonModule","NzNoAnimationModule","ScrollingModule","declarations","exports","NzTreeFlattener","transformFunction","getChildren","flattenNode","resultNodes","parentMap","flatNode","childrenNodes","isArray","flattenChildren","take","children","forEach","child","childParentMap","slice","flattenNodes","structuredData","expandFlattenedNodes","results","currentExpand","expand","NzTreeFlatDataSource","_treeControl","_treeFlattener","initialData","_flattenedData","BehaviorSubject","_expandedData","_data","flatNodes","setData","getData","getValue","connect","collectionViewer","viewChange","expansionModel","changed","disconnect","DataSource"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\n@Component({\n  selector: 'nz-tree-node-checkbox:not([builtin])',\n  template: `\n    <span class=\"ant-tree-checkbox-inner\"></span>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  host: {\n    class: 'ant-tree-checkbox',\n    '[class.ant-tree-checkbox-checked]': `nzChecked`,\n    '[class.ant-tree-checkbox-indeterminate]': `nzIndeterminate`,\n    '[class.ant-tree-checkbox-disabled]': `nzDisabled`,\n    '(click)': 'onClick($event)'\n  }\n})\nexport class NzTreeNodeCheckboxComponent {\n  static ngAcceptInputType_nzDisabled: BooleanInput;\n\n  @Input() nzChecked?: boolean;\n  @Input() nzIndeterminate?: boolean;\n  @Input() @InputBoolean() nzDisabled?: boolean;\n  @Output() readonly nzClick = new EventEmitter<MouseEvent>();\n\n  onClick(e: MouseEvent): void {\n    if (!this.nzDisabled) {\n      this.nzClick.emit(e);\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport { DataSource } from '@angular/cdk/collections';\nimport { CdkTree, TreeControl } from '@angular/cdk/tree';\nimport {\n  ChangeDetectorRef,\n  Component,\n  Host,\n  Input,\n  IterableDiffer,\n  IterableDiffers,\n  OnDestroy,\n  OnInit,\n  Optional,\n  ViewContainerRef\n} from '@angular/core';\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\n\nimport { Observable, Subject } from 'rxjs';\n\nimport { BooleanInput, NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({ template: '' })\n// tslint:disable-next-line: component-class-suffix\nexport class NzTreeView<T> extends CdkTree<T> implements OnInit, OnDestroy {\n  static ngAcceptInputType_nzDirectoryTree: BooleanInput;\n  static ngAcceptInputType_nzBlockNode: BooleanInput;\n\n  private destroy$ = new Subject();\n  dir: Direction = 'ltr';\n  _dataSourceChanged = new Subject<void>();\n  @Input('nzTreeControl') treeControl!: TreeControl<T, NzSafeAny>;\n  @Input('nzDataSource')\n  get dataSource(): DataSource<T> | Observable<T[]> | T[] {\n    return super.dataSource;\n  }\n  set dataSource(dataSource: DataSource<T> | Observable<T[]> | T[]) {\n    super.dataSource = dataSource;\n  }\n  @Input() @InputBoolean() nzDirectoryTree = false;\n  @Input() @InputBoolean() nzBlockNode = false;\n\n  constructor(\n    protected differs: IterableDiffers,\n    protected changeDetectorRef: ChangeDetectorRef,\n    @Host() @Optional() public noAnimation?: NzNoAnimationDirective,\n    @Optional() private directionality?: Directionality\n  ) {\n    super(differs, changeDetectorRef);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    if (this.directionality) {\n      this.dir = this.directionality.value;\n      this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\n        this.dir = direction;\n        this.changeDetectorRef.detectChanges();\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  renderNodeChanges(data: T[] | ReadonlyArray<T>, dataDiffer?: IterableDiffer<T>, viewContainer?: ViewContainerRef, parentData?: T): void {\n    super.renderNodeChanges(data, dataDiffer, viewContainer, parentData);\n    this._dataSourceChanged.next();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CdkTreeNode, CdkTreeNodeDef, CdkTreeNodeOutletContext } from '@angular/cdk/tree';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Directive,\n  ElementRef,\n  EmbeddedViewRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  SimpleChange,\n  SimpleChanges,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { NzTreeView } from './tree';\n\nexport interface NzTreeVirtualNodeData<T> {\n  data: T;\n  context: CdkTreeNodeOutletContext<T>;\n  nodeDef: CdkTreeNodeDef<T>;\n}\n\n@Component({\n  selector: 'nz-tree-node:not([builtin])',\n  exportAs: 'nzTreeNode',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: CdkTreeNode, useExisting: NzTreeNodeComponent }],\n  template: `\n    <nz-tree-node-indents [indents]=\"indents\" *ngIf=\"indents.length\"></nz-tree-node-indents>\n    <ng-content select=\"nz-tree-node-toggle, [nz-tree-node-toggle]\"></ng-content>\n    <nz-tree-node-toggle class=\"nz-tree-leaf-line-icon\" *ngIf=\"indents.length && isLeaf\" nzTreeNodeNoopToggle>\n      <span class=\"ant-tree-switcher-leaf-line\"></span>\n    </nz-tree-node-toggle>\n    <ng-content select=\"nz-tree-node-checkbox\"></ng-content>\n    <ng-content select=\"nz-tree-node-option\"></ng-content>\n    <ng-content></ng-content>\n  `,\n  host: {\n    '[class.ant-tree-treenode-switcher-open]': 'isExpanded',\n    '[class.ant-tree-treenode-switcher-close]': '!isExpanded'\n  }\n})\nexport class NzTreeNodeComponent<T> extends CdkTreeNode<T> implements OnDestroy, OnInit {\n  indents: boolean[] = [];\n  disabled = false;\n  selected = false;\n  isLeaf = false;\n\n  constructor(\n    protected elementRef: ElementRef<HTMLElement>,\n    protected tree: NzTreeView<T>,\n    private renderer: Renderer2,\n    private cdr: ChangeDetectorRef\n  ) {\n    super(elementRef, tree);\n    this._elementRef.nativeElement.classList.add('ant-tree-treenode');\n  }\n\n  ngOnInit(): void {\n    this.isLeaf = !this.tree.treeControl.isExpandable(this.data);\n  }\n\n  disable(): void {\n    this.disabled = true;\n    this.updateDisabledClass();\n  }\n\n  enable(): void {\n    this.disabled = false;\n    this.updateDisabledClass();\n  }\n\n  select(): void {\n    this.selected = true;\n    this.updateSelectedClass();\n  }\n\n  deselect(): void {\n    this.selected = false;\n    this.updateSelectedClass();\n  }\n\n  setIndents(indents: boolean[]): void {\n    this.indents = indents;\n    this.cdr.markForCheck();\n  }\n\n  private updateSelectedClass(): void {\n    if (this.selected) {\n      this.renderer.addClass(this.elementRef.nativeElement, 'ant-tree-treenode-selected');\n    } else {\n      this.renderer.removeClass(this.elementRef.nativeElement, 'ant-tree-treenode-selected');\n    }\n  }\n\n  private updateDisabledClass(): void {\n    if (this.disabled) {\n      this.renderer.addClass(this.elementRef.nativeElement, 'ant-tree-treenode-disabled');\n    } else {\n      this.renderer.removeClass(this.elementRef.nativeElement, 'ant-tree-treenode-disabled');\n    }\n  }\n}\n\n@Directive({\n  selector: '[nzTreeNodeDef]',\n  providers: [{ provide: CdkTreeNodeDef, useExisting: NzTreeNodeDefDirective }]\n})\nexport class NzTreeNodeDefDirective<T> extends CdkTreeNodeDef<T> {\n  @Input('nzTreeNodeDefWhen') when!: (index: number, nodeData: T) => boolean;\n}\n\n@Directive({\n  selector: '[nzTreeVirtualScrollNodeOutlet]'\n})\nexport class NzTreeVirtualScrollNodeOutletDirective<T> implements OnChanges {\n  private _viewRef: EmbeddedViewRef<NzSafeAny> | null = null;\n  @Input() data!: NzTreeVirtualNodeData<T>;\n\n  constructor(private _viewContainerRef: ViewContainerRef) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const recreateView = this.shouldRecreateView(changes);\n    if (recreateView) {\n      const viewContainerRef = this._viewContainerRef;\n\n      if (this._viewRef) {\n        viewContainerRef.remove(viewContainerRef.indexOf(this._viewRef));\n      }\n\n      this._viewRef = this.data ? viewContainerRef.createEmbeddedView(this.data.nodeDef.template, this.data.context) : null;\n\n      if (CdkTreeNode.mostRecentTreeNode && this._viewRef) {\n        CdkTreeNode.mostRecentTreeNode.data = this.data.data;\n      }\n    } else if (this._viewRef && this.data.context) {\n      this.updateExistingContext(this.data.context);\n    }\n  }\n\n  private shouldRecreateView(changes: SimpleChanges): boolean {\n    const ctxChange = changes.data;\n    return !!changes.data || (ctxChange && this.hasContextShapeChanged(ctxChange));\n  }\n\n  private hasContextShapeChanged(ctxChange: SimpleChange): boolean {\n    const prevCtxKeys = Object.keys(ctxChange.previousValue || {});\n    const currCtxKeys = Object.keys(ctxChange.currentValue || {});\n\n    if (prevCtxKeys.length === currCtxKeys.length) {\n      for (const propName of currCtxKeys) {\n        if (prevCtxKeys.indexOf(propName) === -1) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return true;\n  }\n\n  private updateExistingContext(ctx: NzSafeAny): void {\n    for (const propName of Object.keys(ctx)) {\n      this._viewRef!.context[propName] = (this.data.context as NzSafeAny)[propName];\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport function getParent<T>(nodes: T[], node: T, getLevel: (dataNode: T) => number): T | null {\n  let index = nodes.indexOf(node);\n  if (index < 0) {\n    return null;\n  }\n  const level = getLevel(node);\n  for (index--; index >= 0; index--) {\n    const preLevel = getLevel(nodes[index]);\n    if (preLevel + 1 === level) {\n      return nodes[index];\n    }\n    if (preLevel + 1 < level) {\n      return null;\n    }\n  }\n  return null;\n}\n\nexport function getNextSibling<T>(nodes: T[], node: T, getLevel: (dataNode: T) => number, _index?: number): T | null {\n  let index = typeof _index !== 'undefined' ? _index : nodes.indexOf(node);\n  if (index < 0) {\n    return null;\n  }\n  const level = getLevel(node);\n\n  for (index++; index < nodes.length; index++) {\n    const nextLevel = getLevel(nodes[index]);\n    if (nextLevel < level) {\n      return null;\n    }\n    if (nextLevel === level) {\n      return nodes[index];\n    }\n  }\n  return null;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Directive, Input, OnDestroy } from '@angular/core';\nimport { animationFrameScheduler, asapScheduler, merge, Subscription } from 'rxjs';\nimport { auditTime } from 'rxjs/operators';\nimport { NzTreeNodeComponent } from './node';\nimport { NzTreeView } from './tree';\n\nimport { getNextSibling, getParent } from './utils';\n\n/**\n * [true, false, false, true] => 1001\n */\nfunction booleanArrayToString(arr: boolean[]): string {\n  return arr.map(i => (i ? 1 : 0)).join('');\n}\n\nconst BUILD_INDENTS_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\n\n@Component({\n  selector: 'nz-tree-node-indents',\n  template: `\n    <span class=\"ant-tree-indent-unit\" [class.ant-tree-indent-unit-end]=\"!isEnd\" *ngFor=\"let isEnd of indents\"></span>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'ant-tree-indent'\n  }\n})\nexport class NzTreeNodeIndentsComponent {\n  @Input() indents: boolean[] = [];\n}\n\n@Directive({\n  selector: 'nz-tree-node[nzTreeNodeIndentLine]',\n  host: {\n    class: 'ant-tree-show-line',\n    '[class.ant-tree-treenode-leaf-last]': 'isLast && isLeaf'\n  }\n})\nexport class NzTreeNodeIndentLineDirective<T> implements OnDestroy {\n  isLast: boolean | 'unset' = 'unset';\n  isLeaf = false;\n  private preNodeRef: T | null = null;\n  private nextNodeRef: T | null = null;\n  private currentIndents: string = '';\n  private changeSubscription: Subscription;\n\n  constructor(private treeNode: NzTreeNodeComponent<T>, private tree: NzTreeView<T>) {\n    this.buildIndents();\n    this.checkLast();\n\n    /**\n     * The dependent data (TreeControl.dataNodes) can be set after node instantiation,\n     * and setting the indents can cause frame rate loss if it is set too often.\n     */\n    this.changeSubscription = merge(this.treeNode._dataChanges, tree._dataSourceChanged)\n      .pipe(auditTime(0, BUILD_INDENTS_SCHEDULER))\n      .subscribe(() => {\n        this.buildIndents();\n        this.checkAdjacent();\n      });\n  }\n\n  private getIndents(): boolean[] {\n    const indents = [];\n    const nodes = this.tree.treeControl.dataNodes;\n    const getLevel = this.tree.treeControl.getLevel;\n    let parent = getParent(nodes, this.treeNode.data, getLevel);\n    while (parent) {\n      const parentNextSibling = getNextSibling(nodes, parent, getLevel);\n      if (parentNextSibling) {\n        indents.unshift(true);\n      } else {\n        indents.unshift(false);\n      }\n      parent = getParent(nodes, parent, getLevel);\n    }\n    return indents;\n  }\n\n  private buildIndents(): void {\n    if (this.treeNode.data) {\n      const indents = this.getIndents();\n      const diffString = booleanArrayToString(indents);\n      if (diffString !== this.currentIndents) {\n        this.treeNode.setIndents(this.getIndents());\n        this.currentIndents = diffString;\n      }\n    }\n  }\n\n  /**\n   * We need to add an class name for the last child node,\n   * this result can also be affected when the adjacent nodes are changed.\n   */\n  private checkAdjacent(): void {\n    const nodes = this.tree.treeControl.dataNodes;\n    const index = nodes.indexOf(this.treeNode.data);\n    const preNode = nodes[index - 1] || null;\n    const nextNode = nodes[index + 1] || null;\n    if (this.nextNodeRef !== nextNode || this.preNodeRef !== preNode) {\n      this.checkLast(index);\n    }\n    this.preNodeRef = preNode;\n    this.nextNodeRef = nextNode;\n  }\n\n  private checkLast(index?: number): void {\n    const nodes = this.tree.treeControl.dataNodes;\n    this.isLeaf = this.treeNode.isLeaf;\n    this.isLast = !getNextSibling(nodes, this.treeNode.data, this.tree.treeControl.getLevel, index);\n  }\n\n  ngOnDestroy(): void {\n    this.preNodeRef = null;\n    this.nextNodeRef = null;\n    this.changeSubscription.unsubscribe();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\nimport { NzTreeNodeComponent } from './node';\n\n@Component({\n  selector: 'nz-tree-node-option',\n  template: `\n    <span class=\"ant-tree-title\"><ng-content></ng-content></span>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'ant-tree-node-content-wrapper',\n    '[class.ant-tree-node-content-wrapper-open]': 'isExpanded',\n    '[class.ant-tree-node-selected]': 'nzSelected',\n    '(click)': 'onClick($event)'\n  }\n})\nexport class NzTreeNodeOptionComponent<T> implements OnChanges {\n  static ngAcceptInputType_nzSelected: BooleanInput;\n  static ngAcceptInputType_nzDisabled: BooleanInput;\n\n  @Input() @InputBoolean() nzSelected = false;\n  @Input() @InputBoolean() nzDisabled = false;\n  @Output() readonly nzClick = new EventEmitter<MouseEvent>();\n\n  constructor(private treeNode: NzTreeNodeComponent<T>) {}\n\n  get isExpanded(): boolean {\n    return this.treeNode.isExpanded;\n  }\n\n  onClick(e: MouseEvent): void {\n    if (!this.nzDisabled) {\n      this.nzClick.emit(e);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzDisabled, nzSelected } = changes;\n    if (nzDisabled) {\n      if (nzDisabled.currentValue) {\n        this.treeNode.disable();\n      } else {\n        this.treeNode.enable();\n      }\n    }\n\n    if (nzSelected) {\n      if (nzSelected.currentValue) {\n        this.treeNode.select();\n      } else {\n        this.treeNode.deselect();\n      }\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CdkTreeNodeOutlet, CDK_TREE_NODE_OUTLET_NODE } from '@angular/cdk/tree';\nimport { Directive, Inject, Optional, ViewContainerRef } from '@angular/core';\n\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\n@Directive({\n  selector: '[nzTreeNodeOutlet]',\n  providers: [\n    {\n      provide: CdkTreeNodeOutlet,\n      useExisting: NzTreeNodeOutletDirective\n    }\n  ]\n})\nexport class NzTreeNodeOutletDirective implements CdkTreeNodeOutlet {\n  constructor(public viewContainer: ViewContainerRef, @Inject(CDK_TREE_NODE_OUTLET_NODE) @Optional() public _node?: NzSafeAny) {}\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CdkTreeNodePadding } from '@angular/cdk/tree';\nimport { Directive, Input } from '@angular/core';\n\n@Directive({\n  selector: '[nzTreeNodePadding]',\n  providers: [{ provide: CdkTreeNodePadding, useExisting: NzTreeNodePaddingDirective }]\n})\nexport class NzTreeNodePaddingDirective<T> extends CdkTreeNodePadding<T> {\n  _indent = 24;\n\n  @Input('nzTreeNodePadding')\n  get level(): number {\n    return this._level;\n  }\n  set level(value: number) {\n    this._setLevelInput(value);\n  }\n\n  @Input('nzTreeNodePaddingIndent')\n  get indent(): number | string {\n    return this._indent;\n  }\n  set indent(indent: number | string) {\n    this._setIndentInput(indent);\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { CdkTreeNodeToggle } from '@angular/cdk/tree';\nimport { Directive, Input } from '@angular/core';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\n\n@Directive({\n  selector: 'nz-tree-node-toggle[nzTreeNodeNoopToggle], [nzTreeNodeNoopToggle]',\n  host: {\n    class: 'ant-tree-switcher ant-tree-switcher-noop'\n  }\n})\nexport class NzTreeNodeNoopToggleDirective {}\n\n@Directive({\n  selector: 'nz-tree-node-toggle:not([nzTreeNodeNoopToggle]), [nzTreeNodeToggle]',\n  providers: [{ provide: CdkTreeNodeToggle, useExisting: NzTreeNodeToggleDirective }],\n  host: {\n    class: 'ant-tree-switcher',\n    '[class.ant-tree-switcher_open]': 'isExpanded',\n    '[class.ant-tree-switcher_close]': '!isExpanded'\n  }\n})\nexport class NzTreeNodeToggleDirective<T> extends CdkTreeNodeToggle<T> {\n  static ngAcceptInputType_recursive: BooleanInput;\n  @Input('nzTreeNodeToggleRecursive')\n  get recursive(): boolean {\n    return this._recursive;\n  }\n  set recursive(value: boolean) {\n    this._recursive = coerceBooleanProperty(value);\n  }\n\n  get isExpanded(): boolean {\n    return this._treeNode.isExpanded;\n  }\n}\n\n@Directive({\n  selector: '[nz-icon][nzTreeNodeToggleRotateIcon]',\n  host: {\n    class: 'ant-tree-switcher-icon'\n  }\n})\nexport class NzTreeNodeToggleRotateIconDirective {}\n\n@Directive({\n  selector: '[nz-icon][nzTreeNodeToggleActiveIcon]',\n  host: {\n    class: 'ant-tree-switcher-loading-icon'\n  }\n})\nexport class NzTreeNodeToggleActiveIconDirective {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CdkTree } from '@angular/cdk/tree';\nimport { AfterViewInit, ChangeDetectionStrategy, Component, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { treeCollapseMotion } from 'ng-zorro-antd/core/animation';\n\nimport { NzTreeNodeOutletDirective } from './outlet';\nimport { NzTreeView } from './tree';\n\n@Component({\n  selector: 'nz-tree-view',\n  exportAs: 'nzTreeView',\n  template: `\n    <div class=\"ant-tree-list-holder\">\n      <div\n        [@.disabled]=\"!_afterViewInit || noAnimation?.nzNoAnimation\"\n        [@treeCollapseMotion]=\"_nodeOutlet.viewContainer.length\"\n        class=\"ant-tree-list-holder-inner\"\n      >\n        <ng-container nzTreeNodeOutlet></ng-container>\n      </div>\n    </div>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: CdkTree, useExisting: NzTreeViewComponent },\n    { provide: NzTreeView, useExisting: NzTreeViewComponent }\n  ],\n  host: {\n    class: 'ant-tree',\n    '[class.ant-tree-block-node]': 'nzDirectoryTree || nzBlockNode',\n    '[class.ant-tree-directory]': 'nzDirectoryTree',\n    '[class.ant-tree-rtl]': `dir === 'rtl'`\n  },\n  animations: [treeCollapseMotion]\n})\nexport class NzTreeViewComponent<T> extends NzTreeView<T> implements AfterViewInit {\n  @ViewChild(NzTreeNodeOutletDirective, { static: true }) nodeOutlet!: NzTreeNodeOutletDirective;\n  _afterViewInit = false;\n  ngAfterViewInit(): void {\n    Promise.resolve().then(() => {\n      this._afterViewInit = true;\n      this.changeDetectorRef.markForCheck();\n    });\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { CdkTree, CdkTreeNodeOutletContext } from '@angular/cdk/tree';\nimport { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { warnDeprecation } from 'ng-zorro-antd/core/logger';\n\nimport { NzTreeVirtualNodeData } from './node';\nimport { NzTreeNodeOutletDirective } from './outlet';\n\nimport { NzTreeView } from './tree';\n\nconst DEFAULT_SIZE = 28;\n\n@Component({\n  selector: 'nz-tree-virtual-scroll-view',\n  exportAs: 'nzTreeVirtualScrollView',\n  template: `\n    <div class=\"ant-tree-list\">\n      <cdk-virtual-scroll-viewport\n        class=\"ant-tree-list-holder\"\n        [itemSize]=\"itemSize\"\n        [minBufferPx]=\"nzMinBufferPx\"\n        [maxBufferPx]=\"nzMaxBufferPx\"\n      >\n        <ng-container *cdkVirtualFor=\"let item of nodes; let i = index\">\n          <ng-template nzTreeVirtualScrollNodeOutlet [data]=\"item\"></ng-template>\n        </ng-container>\n      </cdk-virtual-scroll-viewport>\n    </div>\n    <ng-container nzTreeNodeOutlet></ng-container>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: NzTreeView, useExisting: NzTreeVirtualScrollViewComponent },\n    { provide: CdkTree, useExisting: NzTreeVirtualScrollViewComponent }\n  ],\n  host: {\n    class: 'ant-tree',\n    '[class.ant-tree-block-node]': 'nzDirectoryTree || nzBlockNode',\n    '[class.ant-tree-directory]': 'nzDirectoryTree',\n    '[class.ant-tree-rtl]': `dir === 'rtl'`\n  }\n})\nexport class NzTreeVirtualScrollViewComponent<T> extends NzTreeView<T> implements OnChanges {\n  itemSize = DEFAULT_SIZE;\n\n  @ViewChild(NzTreeNodeOutletDirective, { static: true }) readonly nodeOutlet!: NzTreeNodeOutletDirective;\n  @ViewChild(CdkVirtualScrollViewport, { static: true }) readonly virtualScrollViewport!: CdkVirtualScrollViewport;\n\n  /**\n   * @deprecated use `nzItemSize` instead\n   * @breaking-change 12.0.0\n   */\n  @Input() nzNodeWidth = DEFAULT_SIZE;\n\n  @Input() nzItemSize = DEFAULT_SIZE;\n  @Input() nzMinBufferPx = DEFAULT_SIZE * 5;\n  @Input() nzMaxBufferPx = DEFAULT_SIZE * 10;\n\n  nodes: Array<NzTreeVirtualNodeData<T>> = [];\n\n  renderNodeChanges(data: T[] | ReadonlyArray<T>): void {\n    this.nodes = new Array(...data).map((n, i) => this.createNode(n, i));\n  }\n\n  private createNode(nodeData: T, index: number): NzTreeVirtualNodeData<T> {\n    const node = this._getNodeDef(nodeData, index);\n    const context = new CdkTreeNodeOutletContext<T>(nodeData);\n    if (this.treeControl.getLevel) {\n      context.level = this.treeControl.getLevel(nodeData);\n    } else {\n      context.level = 0;\n    }\n    return {\n      data: nodeData,\n      context,\n      nodeDef: node\n    };\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzNodeWidth, nzItemSize } = changes;\n    if (nzNodeWidth) {\n      warnDeprecation('`nzNodeWidth` in nz-tree-virtual-scroll-view will be removed in 12.0.0, please use `nzItemSize` instead.');\n      this.itemSize = nzNodeWidth.currentValue;\n    }\n    if (nzItemSize) {\n      this.itemSize = nzItemSize.currentValue;\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\n\nimport { NzTreeNodeCheckboxComponent } from './checkbox';\nimport { NzTreeNodeIndentLineDirective, NzTreeNodeIndentsComponent } from './indent';\nimport { NzTreeNodeComponent, NzTreeNodeDefDirective, NzTreeVirtualScrollNodeOutletDirective } from './node';\nimport { NzTreeNodeOptionComponent } from './option';\nimport { NzTreeNodeOutletDirective } from './outlet';\nimport { NzTreeNodePaddingDirective } from './padding';\nimport {\n  NzTreeNodeNoopToggleDirective,\n  NzTreeNodeToggleActiveIconDirective,\n  NzTreeNodeToggleDirective,\n  NzTreeNodeToggleRotateIconDirective\n} from './toggle';\nimport { NzTreeView } from './tree';\nimport { NzTreeViewComponent } from './tree-view';\nimport { NzTreeVirtualScrollViewComponent } from './tree-virtual-scroll-view';\n\nconst treeWithControlComponents = [\n  NzTreeView,\n  NzTreeNodeOutletDirective,\n  NzTreeViewComponent,\n  NzTreeNodeDefDirective,\n  NzTreeNodeComponent,\n  NzTreeNodeToggleDirective,\n  NzTreeNodePaddingDirective,\n  NzTreeNodeToggleRotateIconDirective,\n  NzTreeNodeToggleActiveIconDirective,\n  NzTreeNodeOptionComponent,\n  NzTreeNodeNoopToggleDirective,\n  NzTreeNodeCheckboxComponent,\n  NzTreeNodeIndentsComponent,\n  NzTreeVirtualScrollViewComponent,\n  NzTreeVirtualScrollNodeOutletDirective,\n  NzTreeNodeIndentLineDirective\n];\n\n@NgModule({\n  imports: [BidiModule, CommonModule, NzNoAnimationModule, ScrollingModule],\n  declarations: [treeWithControlComponents],\n  exports: [treeWithControlComponents]\n})\nexport class NzTreeViewModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CollectionViewer, DataSource } from '@angular/cdk/collections';\nimport { FlatTreeControl, TreeControl } from '@angular/cdk/tree';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nexport class NzTreeFlattener<T, F, K = F> {\n  constructor(\n    public transformFunction: (node: T, level: number) => F,\n    public getLevel: (node: F) => number,\n    public isExpandable: (node: F) => boolean,\n    public getChildren: (node: T) => Observable<T[]> | T[] | undefined | null\n  ) {}\n\n  private flattenNode(node: T, level: number, resultNodes: F[], parentMap: boolean[]): F[] {\n    const flatNode = this.transformFunction(node, level);\n    resultNodes.push(flatNode);\n\n    if (this.isExpandable(flatNode)) {\n      const childrenNodes = this.getChildren(node);\n      if (childrenNodes) {\n        if (Array.isArray(childrenNodes)) {\n          this.flattenChildren(childrenNodes, level, resultNodes, parentMap);\n        } else {\n          childrenNodes.pipe(take(1)).subscribe(children => {\n            this.flattenChildren(children, level, resultNodes, parentMap);\n          });\n        }\n      }\n    }\n    return resultNodes;\n  }\n\n  private flattenChildren(children: T[], level: number, resultNodes: F[], parentMap: boolean[]): void {\n    children.forEach((child, index) => {\n      const childParentMap: boolean[] = parentMap.slice();\n      childParentMap.push(index !== children.length - 1);\n      this.flattenNode(child, level + 1, resultNodes, childParentMap);\n    });\n  }\n\n  /**\n   * Flatten a list of node type T to flattened version of node F.\n   * Please note that type T may be nested, and the length of `structuredData` may be different\n   * from that of returned list `F[]`.\n   */\n  flattenNodes(structuredData: T[]): F[] {\n    const resultNodes: F[] = [];\n    structuredData.forEach(node => this.flattenNode(node, 0, resultNodes, []));\n    return resultNodes;\n  }\n\n  /**\n   * Expand flattened node with current expansion status.\n   * The returned list may have different length.\n   */\n  expandFlattenedNodes(nodes: F[], treeControl: TreeControl<F, K>): F[] {\n    const results: F[] = [];\n    const currentExpand: boolean[] = [];\n    currentExpand[0] = true;\n\n    nodes.forEach(node => {\n      let expand = true;\n      for (let i = 0; i <= this.getLevel(node); i++) {\n        expand = expand && currentExpand[i];\n      }\n      if (expand) {\n        results.push(node);\n      }\n      if (this.isExpandable(node)) {\n        currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n      }\n    });\n    return results;\n  }\n}\n\nexport class NzTreeFlatDataSource<T, F, K = F> extends DataSource<F> {\n  _flattenedData = new BehaviorSubject<F[]>([]);\n\n  _expandedData = new BehaviorSubject<F[]>([]);\n\n  _data: BehaviorSubject<T[]>;\n\n  constructor(private _treeControl: FlatTreeControl<F, K>, private _treeFlattener: NzTreeFlattener<T, F, K>, initialData: T[] = []) {\n    super();\n    this._data = new BehaviorSubject<T[]>(initialData);\n    this.flatNodes();\n  }\n\n  setData(value: T[]): void {\n    this._data.next(value);\n    this.flatNodes();\n  }\n\n  getData(): T[] {\n    return this._data.getValue();\n  }\n\n  connect(collectionViewer: CollectionViewer): Observable<F[]> {\n    const changes = [collectionViewer.viewChange, this._treeControl.expansionModel.changed, this._flattenedData];\n    return merge(...changes).pipe(\n      map(() => {\n        this._expandedData.next(this._treeFlattener.expandFlattenedNodes(this._flattenedData.value, this._treeControl));\n        return this._expandedData.value;\n      })\n    );\n  }\n\n  disconnect(): void {\n    // no op\n  }\n\n  private flatNodes(): void {\n    this._flattenedData.next(this._treeFlattener.flattenNodes(this.getData()));\n    this._treeControl.dataNodes = this._flattenedData.value;\n  }\n}\n"]}