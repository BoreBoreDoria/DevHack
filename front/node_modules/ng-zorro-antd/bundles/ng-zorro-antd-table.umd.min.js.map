{"version":3,"sources":["../../components/table/src/addon/filter-trigger.component.ts","../../components/table/src/addon/filter.component.ts","../../components/table/src/addon/row-expand-button.directive.ts","../../components/table/src/addon/row-indent.directive.ts","../../components/table/src/addon/selection.component.ts","../../components/table/src/addon/sorters.component.ts","../../components/table/src/cell/cell-fixed.directive.ts","../../node_modules/tslib/tslib.es6.js","../../components/table/src/table-style.service.ts","../../components/table/src/cell/cell.directive.ts","../../components/table/src/cell/td-addon.component.ts","../../components/table/src/cell/th-addon.component.ts","../../components/table/src/cell/th-measure.directive.ts","../../components/table/src/cell/th-selection.component.ts","../../components/table/src/styled/align.directive.ts","../../components/table/src/styled/ellipsis.directive.ts","../../components/table/src/styled/word-break.directive.ts","../../components/table/src/table/table-content.component.ts","../../components/table/src/table/table-fixed-row.component.ts","../../components/table/src/table/table-inner-default.component.ts","../../components/table/src/table/table-inner-scroll.component.ts","../../components/table/src/table/table-virtual-scroll.directive.ts","../../components/table/src/table-data.service.ts","../../components/table/src/table/table.component.ts","../../components/table/src/table/tbody.component.ts","../../components/table/src/table/tr.directive.ts","../../components/table/src/table/thead.component.ts","../../components/table/src/table/title-footer.component.ts","../../components/table/src/table/tr-expand.directive.ts","../../components/table/src/table/tr-measure.component.ts","../../components/table/src/table.module.ts"],"names":["NzFilterTriggerComponent","cdr","elementRef","this","nzActive","nzVisible","nzVisibleChange","EventEmitter","nativeElement","classList","add","prototype","onVisibleChange","visible","next","onFilterClick","$event","stopPropagation","hide","markForCheck","show","Component","args","selector","exportAs","changeDetection","ChangeDetectionStrategy","OnPush","preserveWhitespaces","encapsulation","ViewEncapsulation","None","template","host","[class.ant-table-filter-trigger-container-open]","ChangeDetectorRef","ElementRef","Input","Output","NzTableFilterComponent","i18n","contentTemplate","customFilter","extraTemplate","filterMultiple","listOfFilter","filterChange","destroy$","Subject","isChanged","isChecked","isVisible","listOfParsedFilter","trackByValue","_","item","value","check","filter","map","Object","assign","checked","getCheckedStatus","confirm","emitFilterData","reset","parseListOfFilter","listOfChecked","emit","length","byDefault","text","some","ngOnInit","_this","localeChange","pipe","takeUntil","subscribe","locale","getLocaleData","ngOnChanges","changes","ngOnDestroy","complete","NzI18nService","NzRowExpandButtonDirective","expand","spaceMode","expandChange","onHostClick","Directive","[type]","[class.ant-table-row-expand-icon-expanded]","[class.ant-table-row-expand-icon-collapsed]","[class.ant-table-row-expand-icon-spaced]","(click)","indentSize","[style.padding-left.px]","NzTableSelectionComponent","listOfSelections","disabled","indeterminate","showCheckbox","showRowSelection","checkedChange","onCheckedChange","NzTableSortersComponent","sortDirections","sortOrder","isUp","isDown","indexOf","NzCellFixedDirective","renderer","nzRight","nzLeft","colspan","colSpan","changes$","isAutoLeft","isAutoRight","isFixedLeft","isFixedRight","isFixed","setAutoLeftWidth","autoLeft","setStyle","setAutoRightWidth","autoRight","setIsFirstRight","isFirstRight","setFixClass","setIsLastLeft","isLastLeft","flag","className","removeClass","addClass","validatePx","[class.ant-table-cell-fix-right]","[class.ant-table-cell-fix-left]","[style.position]","Renderer2","__decorate","decorators","target","key","desc","d","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","create","__values","o","s","Symbol","iterator","m","call","done","TypeError","__read","n","e","ar","push","error","__spread","concat","NzTableStyleService","theadTemplate$","ReplaySubject","hasFixLeft$","hasFixRight$","hostWidth$","columnCount$","showEmpty$","noResult$","listOfThWidthConfigPx$","BehaviorSubject","tableWidthConfigPx$","manualWidthConfigPx$","combineLatest","_a","_b","widthConfig","listOfWidth","listOfAutoWidthPx$","listOfListOfThWidthPx$","merge","autoWidth","manualWidth","width","index","listOfMeasureColumn$","listOfListOfThWidth$","list","parseInt","enableAutoMeasure$","setTheadTemplate","setHasFixLeft","hasFixLeft","setHasFixRight","hasFixRight","setTableWidthConfig","setListOfTh","listOfTh","columnCount","forEach","th","listOfThPx","nzWidth","setListOfMeasureColumn","listOfKeys","setListOfAutoWidth","listOfAutoWidth","setShowEmpty","showEmpty","setNoResult","noResult","setScroll","scrollX","scrollY","enableAutoMeasure","Injectable","nzTableStyleService","isInsideTable","[class.ant-table-cell]","type","Optional","NzTdAddOnComponent","nzChecked","nzDisabled","nzIndeterminate","nzIndentSize","nzShowExpand","nzShowCheckbox","nzExpand","nzCheckedChange","nzExpandChange","isNzShowExpandChanged","isNzShowCheckboxChanged","onExpandChange","isFirstChange","firstChange","undefined","currentValue","[class.ant-table-cell-with-append]","[class.ant-table-selection-column]","InputBoolean","NzThAddOnComponent","manualClickOrder$","calcOperatorChange$","nzFilterValue","sortOrderChange$","isNzShowSortChanged","isNzShowFilterChanged","nzFilterMultiple","nzSortOrder","nzSortPriority","nzSortDirections","nzFilters","nzSortFn","nzFilterFn","nzShowSort","nzShowFilter","nzCustomFilter","nzSortOrderChange","nzFilterChange","getNextSortDirection","current","emitNextSortValue","nextOrder","setSortOrder","order","clearSortOrder","onFilterValueChange","updateCalcOperator","listOfValue","[class.ant-table-column-has-sorters]","[class.ant-table-column-sort]","NzThMeasureDirective","rowspan","rowSpan","col","isNil","removeAttribute","setAttribute","row","NzThSelectionComponent","nzSelections","nzShowRowSelection","nzAlign","[style.text-align]","nzEllipsis","[class.ant-table-cell-ellipsis]","nzBreakWord","[style.word-break]","tableLayout","theadTemplate","listOfColWidth","[style.table-layout]","[class.ant-table-fixed]","[style.width]","[style.min-width]","NzTableFixedRowComponent","ngAfterViewInit","count","tdElement","ViewChild","NzTableInnerScrollComponent","ngZone","platform","resizeService","data","virtualTemplate","virtualItemSize","virtualMaxBufferPx","virtualMinBufferPx","virtualForTrackBy","headerStyleMap","bodyStyleMap","verticalScrollBarWidth","noDateVirtualHeight","data$","scroll$","setScrollPositionClassName","clear","tableBodyElement","scrollWidth","scrollLeft","clientWidth","leftClassName","rightClassName","tableMainElement","hasVerticalScrollBar","overflowX","overflowY","maxHeight","isBrowser","runOutsideAngular","scrollEvent$","startWith","delay","switchMap","fromEvent","resize$","tableHeaderElement","NgZone","Platform","NzResizeService","read","CdkVirtualScrollViewport","templateRef","TemplateRef","NzTableDataService","pageIndex$","frontPagination$","pageSize$","listOfData$","pageIndexDistinct$","distinctUntilChanged","pageSizeDistinct$","listOfCalcOperator$","queryParams$","debounceTime","skip","pageIndex","pageSize","listOfCalc","sort","sortFn","filterFn","filterValue","listOfDataAfterCalc$","_c","listOfData","listOfCalcOperator","listOfDataAfterCalc","listOfFilterOperator","Array","isArray","listOfFilterOperator_1","listOfFilterOperator_1_1","listOfSortOperator","a","b","sortPriority","record1","record2","listOfSortOperator_1","listOfSortOperator_1_1","compareResult","listOfFrontEndCurrentPageData$","Math","ceil","slice","listOfCurrentPageData$","pagination","total$","updatePageSize","size","updateFrontPagination","updatePageIndex","updateListOfData","NZ_CONFIG_MODULE_NAME","NzTableComponent","nzResizeObserver","nzConfigService","nzTableDataService","_nzModuleName","nzTableLayout","nzShowTotal","nzItemRender","nzTitle","nzFooter","nzNoResult","nzPageSizeOptions","nzVirtualItemSize","nzVirtualMaxBufferPx","nzVirtualMinBufferPx","nzVirtualForTrackBy","nzLoadingDelay","nzPageIndex","nzPageSize","nzTotal","nzWidthConfig","nzData","nzPaginationPosition","nzScroll","x","y","nzFrontPagination","nzTemplateMode","nzShowPagination","nzLoading","nzOuterBordered","nzLoadingIndicator","nzBordered","nzSize","nzShowSizeChanger","nzHideOnSinglePage","nzShowQuickJumper","nzSimple","nzPageSizeChange","nzPageIndexChange","nzQueryParams","nzCurrentPageDataChange","listOfAutoColWidth","listOfManualColWidth","showPagination","loading$","templateMode$","getConfigChangeEventForComponent","onPageSizeChange","onPageIndexChange","total","loading","templateMode","empty","measureScrollbar","setScrollOnChanges","observe","getBoundingClientRect","scrollBarWidth","floor","nzTableInnerScrollComponent","cdkVirtualScrollViewport","providers","NzResizeObserver","NzConfigService","ContentChild","NzTableVirtualScrollDirective","static","WithConfig","NzTbodyComponent","onListOfAutoWidthChange","[class.ant-table-tbody]","NzTrDirective","listOfFixedColumns$","listOfColumns$","listOfFixedColumnsChanges$","apply","flatMap","listOfFixedLeftColumnChanges$","listOfFixedRightColumnChanges$","listOfColumnsChanges$","ngAfterContentInit","listOfCellFixedDirective","listOfNzThDirective","listOfFixedLeft","cell","listOfFixedRight","listOfLeftCell","reduce","pre","cur","listOfRightCell","[class.ant-table-row]","ContentChildren","NzTheadComponent","firstTableRow$","listOfNzTrDirective","first","listOfColumnsChanges$_1","firstTableRow","EMPTY","enable","of","firstTr","listOfFixedLeftColumn","listOfFixedRightColumn","listOfColumn$_1","listOfNzThAddOnComponent","emitValue","nzColumnKey","mergeMap","removeChild","parentNode","descendants","title","footer","[class.ant-table-title]","[class.ant-table-footer]","[hidden]","NzTrMeasureComponent","listOfMeasureColumn","trackByFunc","listOfTdElement","toArray","run","ViewChildren","NgModule","declarations","NzTableCellDirective","NzTrExpandDirective","NzTableContentComponent","NzTableTitleFooterComponent","NzTableInnerDefaultComponent","NzRowIndentDirective","NzCellBreakWordDirective","NzCellAlignDirective","NzCellEllipsisDirective","exports","imports","NzMenuModule","FormsModule","NzOutletModule","NzRadioModule","NzCheckboxModule","NzDropDownModule","NzButtonModule","CommonModule","PlatformModule","NzPaginationModule","NzResizeObserversModule","NzSpinModule","NzI18nModule","NzIconModule","NzEmptyModule","ScrollingModule"],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  ViewEncapsulation\n} from '@angular/core';\nimport { NzDropdownMenuComponent } from 'ng-zorro-antd/dropdown';\n\n@Component({\n  selector: 'nz-filter-trigger',\n  exportAs: `nzFilterTrigger`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <span\n      nz-dropdown\n      class=\"ant-table-filter-trigger\"\n      nzTrigger=\"click\"\n      nzPlacement=\"bottomRight\"\n      [nzClickHide]=\"false\"\n      [nzDropdownMenu]=\"nzDropdownMenu\"\n      [class.active]=\"nzActive\"\n      [class.ant-table-filter-open]=\"nzVisible\"\n      [nzVisible]=\"nzVisible\"\n      (nzVisibleChange)=\"onVisibleChange($event)\"\n      (click)=\"onFilterClick($event)\"\n    >\n      <ng-content></ng-content>\n    </span>\n  `,\n  host: {\n    '[class.ant-table-filter-trigger-container-open]': 'nzVisible'\n  }\n})\nexport class NzFilterTriggerComponent {\n  @Input() nzActive = false;\n  @Input() nzDropdownMenu!: NzDropdownMenuComponent;\n  @Input() nzVisible = false;\n  @Output() readonly nzVisibleChange = new EventEmitter<boolean>();\n  onVisibleChange(visible: boolean): void {\n    this.nzVisible = visible;\n    this.nzVisibleChange.next(visible);\n  }\n  onFilterClick($event: MouseEvent): void {\n    $event.stopPropagation();\n  }\n  hide(): void {\n    this.nzVisible = false;\n    this.cdr.markForCheck();\n  }\n  show(): void {\n    this.nzVisible = true;\n    this.cdr.markForCheck();\n  }\n  constructor(private cdr: ChangeDetectorRef, private elementRef: ElementRef) {\n    // TODO: move to host after View Engine deprecation\n    this.elementRef.nativeElement.classList.add('ant-table-filter-trigger-container');\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzI18nService, NzTableI18nInterface } from 'ng-zorro-antd/i18n';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NzTableFilterList } from '../table.types';\n\ninterface NzThItemInterface {\n  text: string;\n  value: NzSafeAny;\n  checked: boolean;\n}\n\n@Component({\n  selector: 'nz-table-filter',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <span class=\"ant-table-filter-column-title\">\n      <ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template>\n    </span>\n    <ng-container *ngIf=\"!customFilter; else extraTemplate\">\n      <nz-filter-trigger\n        [nzVisible]=\"isVisible\"\n        [nzActive]=\"isChecked\"\n        [nzDropdownMenu]=\"filterMenu\"\n        (nzVisibleChange)=\"onVisibleChange($event)\"\n      >\n        <i nz-icon nzType=\"filter\" nzTheme=\"fill\"></i>\n      </nz-filter-trigger>\n      <nz-dropdown-menu #filterMenu=\"nzDropdownMenu\">\n        <div class=\"ant-table-filter-dropdown\">\n          <ul nz-menu>\n            <li nz-menu-item [nzSelected]=\"f.checked\" *ngFor=\"let f of listOfParsedFilter; trackBy: trackByValue\" (click)=\"check(f)\">\n              <label nz-radio *ngIf=\"!filterMultiple\" [ngModel]=\"f.checked\" (ngModelChange)=\"check(f)\"></label>\n              <label nz-checkbox *ngIf=\"filterMultiple\" [ngModel]=\"f.checked\" (ngModelChange)=\"check(f)\"></label>\n              <span>{{ f.text }}</span>\n            </li>\n          </ul>\n          <div class=\"ant-table-filter-dropdown-btns\">\n            <button nz-button nzType=\"link\" nzSize=\"small\" (click)=\"reset()\" [disabled]=\"!isChecked\">{{ locale.filterReset }}</button>\n            <button nz-button nzType=\"primary\" nzSize=\"small\" (click)=\"confirm()\">{{ locale.filterConfirm }}</button>\n          </div>\n        </div>\n      </nz-dropdown-menu>\n    </ng-container>\n  `\n})\nexport class NzTableFilterComponent implements OnChanges, OnDestroy, OnInit {\n  @Input() contentTemplate: TemplateRef<NzSafeAny> | null = null;\n  @Input() customFilter = false;\n  @Input() extraTemplate: TemplateRef<NzSafeAny> | null = null;\n  @Input() filterMultiple = true;\n  @Input() listOfFilter: NzTableFilterList = [];\n  @Output() readonly filterChange = new EventEmitter<NzSafeAny[] | NzSafeAny>();\n  private destroy$ = new Subject();\n  locale!: NzTableI18nInterface;\n  isChanged = false;\n  isChecked = false;\n  isVisible = false;\n  listOfParsedFilter: NzThItemInterface[] = [];\n\n  trackByValue(_: number, item: NzThItemInterface): NzSafeAny {\n    return item.value;\n  }\n\n  check(filter: NzThItemInterface): void {\n    this.isChanged = true;\n    if (this.filterMultiple) {\n      this.listOfParsedFilter = this.listOfParsedFilter.map(item => {\n        if (item === filter) {\n          return { ...item, checked: !filter.checked };\n        } else {\n          return item;\n        }\n      });\n      filter.checked = !filter.checked;\n    } else {\n      this.listOfParsedFilter = this.listOfParsedFilter.map(item => {\n        return { ...item, checked: item === filter };\n      });\n    }\n    this.isChecked = this.getCheckedStatus(this.listOfParsedFilter);\n  }\n\n  confirm(): void {\n    this.isVisible = false;\n    this.emitFilterData();\n  }\n\n  reset(): void {\n    this.isChanged = true;\n    this.isVisible = false;\n    this.listOfParsedFilter = this.parseListOfFilter(this.listOfFilter, true);\n    this.isChecked = this.getCheckedStatus(this.listOfParsedFilter);\n    this.emitFilterData();\n  }\n\n  onVisibleChange(value: boolean): void {\n    this.isVisible = value;\n    if (!value) {\n      this.emitFilterData();\n    }\n  }\n\n  emitFilterData(): void {\n    if (this.isChanged) {\n      const listOfChecked = this.listOfParsedFilter.filter(item => item.checked).map(item => item.value);\n      if (this.filterMultiple) {\n        this.filterChange.emit(listOfChecked);\n      } else {\n        this.filterChange.emit(listOfChecked.length > 0 ? listOfChecked[0] : null);\n      }\n      this.isChanged = false;\n    }\n  }\n\n  parseListOfFilter(listOfFilter: NzTableFilterList, reset?: boolean): NzThItemInterface[] {\n    return listOfFilter.map(item => {\n      const checked = reset ? false : !!item.byDefault;\n      return { text: item.text, value: item.value, checked };\n    });\n  }\n\n  getCheckedStatus(listOfParsedFilter: NzThItemInterface[]): boolean {\n    return listOfParsedFilter.some(item => item.checked);\n  }\n\n  constructor(private cdr: ChangeDetectorRef, private i18n: NzI18nService, private elementRef: ElementRef) {\n    // TODO: move to host after View Engine deprecation\n    this.elementRef.nativeElement.classList.add('ant-table-filter-column');\n  }\n\n  ngOnInit(): void {\n    this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.locale = this.i18n.getLocaleData('Table');\n      this.cdr.markForCheck();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { listOfFilter } = changes;\n    if (listOfFilter && this.listOfFilter && this.listOfFilter.length) {\n      this.listOfParsedFilter = this.parseListOfFilter(this.listOfFilter);\n      this.isChecked = this.getCheckedStatus(this.listOfParsedFilter);\n    }\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, ElementRef, EventEmitter, Input, Output } from '@angular/core';\n\n@Directive({\n  selector: 'button[nz-row-expand-button]',\n  host: {\n    '[type]': `'button'`,\n    '[class.ant-table-row-expand-icon-expanded]': `!spaceMode && expand === true`,\n    '[class.ant-table-row-expand-icon-collapsed]': `!spaceMode && expand === false`,\n    '[class.ant-table-row-expand-icon-spaced]': 'spaceMode',\n    '(click)': 'onHostClick()'\n  }\n})\nexport class NzRowExpandButtonDirective {\n  @Input() expand = false;\n  @Input() spaceMode = false;\n  @Output() readonly expandChange = new EventEmitter();\n\n  constructor(private elementRef: ElementRef) {\n    // TODO: move to host after View Engine deprecation\n    this.elementRef.nativeElement.classList.add('ant-table-row-expand-icon');\n  }\n\n  onHostClick(): void {\n    if (!this.spaceMode) {\n      this.expand = !this.expand;\n      this.expandChange.next(this.expand);\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, ElementRef, Input } from '@angular/core';\n\n@Directive({\n  selector: 'nz-row-indent',\n  host: {\n    '[style.padding-left.px]': 'indentSize'\n  }\n})\nexport class NzRowIndentDirective {\n  @Input() indentSize = 0;\n\n  constructor(private elementRef: ElementRef) {\n    // TODO: move to host after View Engine deprecation\n    this.elementRef.nativeElement.classList.add('ant-table-row-indent');\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\n@Component({\n  selector: 'nz-table-selection',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <label\n      *ngIf=\"showCheckbox\"\n      nz-checkbox\n      [class.ant-table-selection-select-all-custom]=\"showRowSelection\"\n      [ngModel]=\"checked\"\n      [nzDisabled]=\"disabled\"\n      [nzIndeterminate]=\"indeterminate\"\n      (ngModelChange)=\"onCheckedChange($event)\"\n    ></label>\n    <div class=\"ant-table-selection-extra\" *ngIf=\"showRowSelection\">\n      <span nz-dropdown class=\"ant-table-selection-down\" nzPlacement=\"bottomLeft\" [nzDropdownMenu]=\"selectionMenu\">\n        <i nz-icon nzType=\"down\"></i>\n      </span>\n      <nz-dropdown-menu #selectionMenu=\"nzDropdownMenu\">\n        <ul nz-menu class=\"ant-table-selection-menu\">\n          <li nz-menu-item *ngFor=\"let selection of listOfSelections\" (click)=\"selection.onSelect()\">\n            {{ selection.text }}\n          </li>\n        </ul>\n      </nz-dropdown-menu>\n    </div>\n  `\n})\nexport class NzTableSelectionComponent {\n  @Input() listOfSelections: Array<{ text: string; onSelect(...args: NzSafeAny[]): NzSafeAny }> = [];\n  @Input() checked = false;\n  @Input() disabled = false;\n  @Input() indeterminate = false;\n  @Input() showCheckbox = false;\n  @Input() showRowSelection = false;\n  @Output() readonly checkedChange = new EventEmitter<boolean>();\n\n  constructor(private elementRef: ElementRef) {\n    // TODO: move to host after View Engine deprecation\n    this.elementRef.nativeElement.classList.add('ant-table-selection');\n  }\n\n  onCheckedChange(checked: boolean): void {\n    this.checked = checked;\n    this.checkedChange.emit(checked);\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzTableSortOrder } from '../table.types';\n\n@Component({\n  selector: 'nz-table-sorters',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <span><ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template></span>\n    <span class=\"ant-table-column-sorter\" [class.ant-table-column-sorter-full]=\"isDown && isUp\">\n      <span class=\"ant-table-column-sorter-inner\">\n        <i nz-icon nzType=\"caret-up\" *ngIf=\"isUp\" class=\"ant-table-column-sorter-up\" [class.active]=\"sortOrder == 'ascend'\"></i>\n        <i nz-icon nzType=\"caret-down\" *ngIf=\"isDown\" class=\"ant-table-column-sorter-down\" [class.active]=\"sortOrder == 'descend'\"></i>\n      </span>\n    </span>\n  `\n})\nexport class NzTableSortersComponent implements OnChanges {\n  @Input() sortDirections: NzTableSortOrder[] = ['ascend', 'descend', null];\n  @Input() sortOrder: NzTableSortOrder = null;\n  @Input() contentTemplate: TemplateRef<NzSafeAny> | null = null;\n  isUp = false;\n  isDown = false;\n\n  constructor(private elementRef: ElementRef) {\n    // TODO: move to host after View Engine deprecation\n    this.elementRef.nativeElement.classList.add('ant-table-column-sorters');\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { sortDirections } = changes;\n    if (sortDirections) {\n      this.isUp = this.sortDirections.indexOf('ascend') !== -1;\n      this.isDown = this.sortDirections.indexOf('descend') !== -1;\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, ElementRef, Input, OnChanges, Renderer2 } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Directive({\n  selector: 'td[nzRight],th[nzRight],td[nzLeft],th[nzLeft]',\n  host: {\n    '[class.ant-table-cell-fix-right]': `isFixedRight`,\n    '[class.ant-table-cell-fix-left]': `isFixedLeft`,\n    '[style.position]': `isFixed? 'sticky' : null`\n  }\n})\nexport class NzCellFixedDirective implements OnChanges {\n  @Input() nzRight: string | boolean = false;\n  @Input() nzLeft: string | boolean = false;\n  @Input() colspan: number | null = null;\n  @Input() colSpan: number | null = null;\n  changes$ = new Subject<void>();\n  isAutoLeft = false;\n  isAutoRight = false;\n  isFixedLeft = false;\n  isFixedRight = false;\n  isFixed = false;\n\n  setAutoLeftWidth(autoLeft: string | null): void {\n    this.renderer.setStyle(this.elementRef.nativeElement, 'left', autoLeft);\n  }\n\n  setAutoRightWidth(autoRight: string | null): void {\n    this.renderer.setStyle(this.elementRef.nativeElement, 'right', autoRight);\n  }\n\n  setIsFirstRight(isFirstRight: boolean): void {\n    this.setFixClass(isFirstRight, 'ant-table-cell-fix-right-first');\n  }\n\n  setIsLastLeft(isLastLeft: boolean): void {\n    this.setFixClass(isLastLeft, 'ant-table-cell-fix-left-last');\n  }\n\n  private setFixClass(flag: boolean, className: string): void {\n    // the setFixClass function may call many times, so remove it first.\n    this.renderer.removeClass(this.elementRef.nativeElement, className);\n\n    if (flag) {\n      this.renderer.addClass(this.elementRef.nativeElement, className);\n    }\n  }\n\n  constructor(private renderer: Renderer2, private elementRef: ElementRef) {}\n\n  ngOnChanges(): void {\n    this.setIsFirstRight(false);\n    this.setIsLastLeft(false);\n    this.isAutoLeft = this.nzLeft === '' || this.nzLeft === true;\n    this.isAutoRight = this.nzRight === '' || this.nzRight === true;\n    this.isFixedLeft = this.nzLeft !== false;\n    this.isFixedRight = this.nzRight !== false;\n    this.isFixed = this.isFixedLeft || this.isFixedRight;\n    const validatePx = (value: string | boolean): string | null => {\n      if (typeof value === 'string' && value !== '') {\n        return value;\n      } else {\n        return null;\n      }\n    };\n    this.setAutoLeftWidth(validatePx(this.nzLeft));\n    this.setAutoRightWidth(validatePx(this.nzRight));\n    this.changes$.next();\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Injectable, TemplateRef } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { BehaviorSubject, combineLatest, merge, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { NzThMeasureDirective } from './cell/th-measure.directive';\n\n@Injectable()\nexport class NzTableStyleService {\n  theadTemplate$ = new ReplaySubject<TemplateRef<NzSafeAny>>(1);\n  hasFixLeft$ = new ReplaySubject<boolean>(1);\n  hasFixRight$ = new ReplaySubject<boolean>(1);\n  hostWidth$ = new ReplaySubject<number>(1);\n  columnCount$ = new ReplaySubject<number>(1);\n  showEmpty$ = new ReplaySubject<boolean>(1);\n  noResult$ = new ReplaySubject<string | TemplateRef<NzSafeAny> | undefined>(1);\n  private listOfThWidthConfigPx$ = new BehaviorSubject<Array<string | null>>([]);\n  private tableWidthConfigPx$ = new BehaviorSubject<Array<string | null>>([]);\n  manualWidthConfigPx$ = combineLatest([this.tableWidthConfigPx$, this.listOfThWidthConfigPx$]).pipe(\n    map(([widthConfig, listOfWidth]) => (widthConfig.length ? widthConfig : listOfWidth))\n  );\n  private listOfAutoWidthPx$ = new ReplaySubject<string[]>(1);\n  listOfListOfThWidthPx$ = merge(\n    /** init with manual width **/\n    this.manualWidthConfigPx$,\n    combineLatest([this.listOfAutoWidthPx$, this.manualWidthConfigPx$]).pipe(\n      map(([autoWidth, manualWidth]) => {\n        /** use autoWidth until column length match **/\n        if (autoWidth.length === manualWidth.length) {\n          return autoWidth.map((width, index) => {\n            if (width === '0px') {\n              return manualWidth[index] || null;\n            } else {\n              return manualWidth[index] || width;\n            }\n          });\n        } else {\n          return manualWidth;\n        }\n      })\n    )\n  );\n  listOfMeasureColumn$ = new ReplaySubject<string[]>(1);\n  listOfListOfThWidth$ = this.listOfAutoWidthPx$.pipe(map(list => list.map(width => parseInt(width, 10))));\n  enableAutoMeasure$ = new ReplaySubject<boolean>(1);\n\n  setTheadTemplate(template: TemplateRef<NzSafeAny>): void {\n    this.theadTemplate$.next(template);\n  }\n\n  setHasFixLeft(hasFixLeft: boolean): void {\n    this.hasFixLeft$.next(hasFixLeft);\n  }\n\n  setHasFixRight(hasFixRight: boolean): void {\n    this.hasFixRight$.next(hasFixRight);\n  }\n\n  setTableWidthConfig(widthConfig: Array<string | null>): void {\n    this.tableWidthConfigPx$.next(widthConfig);\n  }\n\n  setListOfTh(listOfTh: NzThMeasureDirective[]): void {\n    let columnCount = 0;\n    listOfTh.forEach(th => {\n      columnCount += (th.colspan && +th.colspan) || (th.colSpan && +th.colSpan) || 1;\n    });\n    const listOfThPx = listOfTh.map(item => item.nzWidth);\n    this.columnCount$.next(columnCount);\n    this.listOfThWidthConfigPx$.next(listOfThPx);\n  }\n\n  setListOfMeasureColumn(listOfTh: NzThMeasureDirective[]): void {\n    const listOfKeys: string[] = [];\n    listOfTh.forEach(th => {\n      const length = (th.colspan && +th.colspan) || (th.colSpan && +th.colSpan) || 1;\n      for (let i = 0; i < length; i++) {\n        listOfKeys.push(`measure_key_${i}`);\n      }\n    });\n    this.listOfMeasureColumn$.next(listOfKeys);\n  }\n\n  setListOfAutoWidth(listOfAutoWidth: number[]): void {\n    this.listOfAutoWidthPx$.next(listOfAutoWidth.map(width => `${width}px`));\n  }\n\n  setShowEmpty(showEmpty: boolean): void {\n    this.showEmpty$.next(showEmpty);\n  }\n\n  setNoResult(noResult: string | TemplateRef<NzSafeAny> | undefined): void {\n    this.noResult$.next(noResult);\n  }\n\n  setScroll(scrollX: string | null, scrollY: string | null): void {\n    const enableAutoMeasure = !!(scrollX || scrollY);\n    if (!enableAutoMeasure) {\n      this.setListOfAutoWidth([]);\n    }\n    this.enableAutoMeasure$.next(enableAutoMeasure);\n  }\n\n  constructor() {}\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { Directive, Optional } from '@angular/core';\nimport { NzTableStyleService } from '../table-style.service';\n\n@Directive({\n  selector: 'th:not(.nz-disable-th):not([mat-cell]), td:not(.nz-disable-td):not([mat-cell])',\n  host: {\n    '[class.ant-table-cell]': 'isInsideTable'\n  }\n})\nexport class NzTableCellDirective {\n  isInsideTable = false;\n  constructor(@Optional() nzTableStyleService: NzTableStyleService) {\n    this.isInsideTable = !!nzTableStyleService;\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n/* tslint:disable:component-selector */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\n@Component({\n  selector: 'td[nzChecked], td[nzDisabled], td[nzIndeterminate], td[nzIndentSize], td[nzExpand], td[nzShowExpand], td[nzShowCheckbox]',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <ng-container *ngIf=\"nzShowExpand || nzIndentSize > 0\">\n      <nz-row-indent [indentSize]=\"nzIndentSize\"></nz-row-indent>\n      <button nz-row-expand-button [expand]=\"nzExpand\" (expandChange)=\"onExpandChange($event)\" [spaceMode]=\"!nzShowExpand\"></button>\n    </ng-container>\n    <label\n      nz-checkbox\n      *ngIf=\"nzShowCheckbox\"\n      [nzDisabled]=\"nzDisabled\"\n      [ngModel]=\"nzChecked\"\n      [nzIndeterminate]=\"nzIndeterminate\"\n      (ngModelChange)=\"onCheckedChange($event)\"\n    >\n    </label>\n    <ng-content></ng-content>\n  `,\n  host: {\n    '[class.ant-table-cell-with-append]': `nzShowExpand || nzIndentSize > 0`,\n    '[class.ant-table-selection-column]': `nzShowCheckbox`\n  }\n})\nexport class NzTdAddOnComponent implements OnChanges {\n  static ngAcceptInputType_nzShowExpand: BooleanInput;\n  static ngAcceptInputType_nzShowCheckbox: BooleanInput;\n  static ngAcceptInputType_nzExpand: BooleanInput;\n\n  @Input() nzChecked = false;\n  @Input() nzDisabled = false;\n  @Input() nzIndeterminate = false;\n  @Input() nzIndentSize = 0;\n  @Input() @InputBoolean() nzShowExpand = false;\n  @Input() @InputBoolean() nzShowCheckbox = false;\n  @Input() @InputBoolean() nzExpand = false;\n  @Output() readonly nzCheckedChange = new EventEmitter<boolean>();\n  @Output() readonly nzExpandChange = new EventEmitter<boolean>();\n  private isNzShowExpandChanged = false;\n  private isNzShowCheckboxChanged = false;\n\n  onCheckedChange(checked: boolean): void {\n    this.nzChecked = checked;\n    this.nzCheckedChange.emit(checked);\n  }\n\n  onExpandChange(expand: boolean): void {\n    this.nzExpand = expand;\n    this.nzExpandChange.emit(expand);\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    const isFirstChange = (value: SimpleChange) => value && value.firstChange && value.currentValue !== undefined;\n    const { nzExpand, nzChecked, nzShowExpand, nzShowCheckbox } = changes;\n    if (nzShowExpand) {\n      this.isNzShowExpandChanged = true;\n    }\n    if (nzShowCheckbox) {\n      this.isNzShowCheckboxChanged = true;\n    }\n    if (isFirstChange(nzExpand) && !this.isNzShowExpandChanged) {\n      this.nzShowExpand = true;\n    }\n    if (isFirstChange(nzChecked) && !this.isNzShowCheckboxChanged) {\n      this.nzShowCheckbox = true;\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n/* tslint:disable:component-selector */\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NzTableFilterFn, NzTableFilterList, NzTableFilterValue, NzTableSortFn, NzTableSortOrder } from '../table.types';\n\n@Component({\n  selector: 'th[nzColumnKey], th[nzSortFn], th[nzSortOrder], th[nzFilters], th[nzShowSort], th[nzShowFilter], th[nzCustomFilter]',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <nz-table-filter\n      *ngIf=\"nzShowFilter || nzCustomFilter; else notFilterTemplate\"\n      [contentTemplate]=\"notFilterTemplate\"\n      [extraTemplate]=\"extraTemplate\"\n      [customFilter]=\"nzCustomFilter\"\n      [filterMultiple]=\"nzFilterMultiple\"\n      [listOfFilter]=\"nzFilters\"\n      (filterChange)=\"onFilterValueChange($event)\"\n    ></nz-table-filter>\n    <ng-template #notFilterTemplate>\n      <ng-template [ngTemplateOutlet]=\"nzShowSort ? sortTemplate : contentTemplate\"></ng-template>\n    </ng-template>\n    <ng-template #extraTemplate>\n      <ng-content select=\"[nz-th-extra]\"></ng-content>\n      <ng-content select=\"nz-filter-trigger\"></ng-content>\n    </ng-template>\n    <ng-template #sortTemplate>\n      <nz-table-sorters [sortOrder]=\"sortOrder\" [sortDirections]=\"sortDirections\" [contentTemplate]=\"contentTemplate\"></nz-table-sorters>\n    </ng-template>\n    <ng-template #contentTemplate>\n      <ng-content></ng-content>\n    </ng-template>\n  `,\n  host: {\n    '[class.ant-table-column-has-sorters]': 'nzShowSort',\n    '[class.ant-table-column-sort]': `sortOrder === 'descend' || sortOrder === 'ascend'`,\n    '(click)': 'emitNextSortValue()'\n  }\n})\nexport class NzThAddOnComponent implements OnChanges, OnInit, OnDestroy {\n  static ngAcceptInputType_nzShowSort: BooleanInput;\n  static ngAcceptInputType_nzShowFilter: BooleanInput;\n  static ngAcceptInputType_nzCustomFilter: BooleanInput;\n\n  manualClickOrder$ = new Subject<NzThAddOnComponent>();\n  calcOperatorChange$ = new Subject();\n  nzFilterValue: NzTableFilterValue = null;\n  sortOrder: NzTableSortOrder = null;\n  sortDirections: NzTableSortOrder[] = ['ascend', 'descend', null];\n  private sortOrderChange$ = new Subject<NzTableSortOrder>();\n  private destroy$ = new Subject();\n  private isNzShowSortChanged = false;\n  private isNzShowFilterChanged = false;\n  @Input() nzColumnKey?: string;\n  @Input() nzFilterMultiple = true;\n  @Input() nzSortOrder: NzTableSortOrder = null;\n  @Input() nzSortPriority: number | boolean = false;\n  @Input() nzSortDirections: NzTableSortOrder[] = ['ascend', 'descend', null];\n  @Input() nzFilters: NzTableFilterList = [];\n  @Input() nzSortFn: NzTableSortFn | boolean | null = null;\n  @Input() nzFilterFn: NzTableFilterFn | boolean | null = null;\n  @Input() @InputBoolean() nzShowSort = false;\n  @Input() @InputBoolean() nzShowFilter = false;\n  @Input() @InputBoolean() nzCustomFilter = false;\n  @Output() readonly nzCheckedChange = new EventEmitter<boolean>();\n  @Output() readonly nzSortOrderChange = new EventEmitter<string | null>();\n  @Output() readonly nzFilterChange = new EventEmitter<NzTableFilterValue>();\n\n  getNextSortDirection(sortDirections: NzTableSortOrder[], current: NzTableSortOrder): NzTableSortOrder {\n    const index = sortDirections.indexOf(current);\n    if (index === sortDirections.length - 1) {\n      return sortDirections[0];\n    } else {\n      return sortDirections[index + 1];\n    }\n  }\n\n  emitNextSortValue(): void {\n    if (this.nzShowSort) {\n      const nextOrder = this.getNextSortDirection(this.sortDirections, this.sortOrder!);\n      this.setSortOrder(nextOrder);\n      this.manualClickOrder$.next(this);\n    }\n  }\n\n  setSortOrder(order: NzTableSortOrder): void {\n    this.sortOrderChange$.next(order);\n  }\n\n  clearSortOrder(): void {\n    if (this.sortOrder !== null) {\n      this.setSortOrder(null);\n    }\n  }\n\n  onFilterValueChange(value: NzTableFilterValue): void {\n    this.nzFilterChange.emit(value);\n    this.nzFilterValue = value;\n    this.updateCalcOperator();\n  }\n\n  updateCalcOperator(): void {\n    this.calcOperatorChange$.next();\n  }\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    this.sortOrderChange$.pipe(takeUntil(this.destroy$)).subscribe(order => {\n      if (this.sortOrder !== order) {\n        this.sortOrder = order;\n        this.nzSortOrderChange.emit(order);\n      }\n      this.updateCalcOperator();\n      this.cdr.markForCheck();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const {\n      nzSortDirections,\n      nzFilters,\n      nzSortOrder,\n      nzSortFn,\n      nzFilterFn,\n      nzSortPriority,\n      nzFilterMultiple,\n      nzShowSort,\n      nzShowFilter\n    } = changes;\n    if (nzSortDirections) {\n      if (this.nzSortDirections && this.nzSortDirections.length) {\n        this.sortDirections = this.nzSortDirections;\n      }\n    }\n    if (nzSortOrder) {\n      this.sortOrder = this.nzSortOrder;\n      this.setSortOrder(this.nzSortOrder);\n    }\n    if (nzShowSort) {\n      this.isNzShowSortChanged = true;\n    }\n    if (nzShowFilter) {\n      this.isNzShowFilterChanged = true;\n    }\n    const isFirstChange = (value: SimpleChange) => value && value.firstChange && value.currentValue !== undefined;\n    if ((isFirstChange(nzSortOrder) || isFirstChange(nzSortFn)) && !this.isNzShowSortChanged) {\n      this.nzShowSort = true;\n    }\n    if (isFirstChange(nzFilters) && !this.isNzShowFilterChanged) {\n      this.nzShowFilter = true;\n    }\n    if ((nzFilters || nzFilterMultiple) && this.nzShowFilter) {\n      const listOfValue = this.nzFilters.filter(item => item.byDefault).map(item => item.value);\n      this.nzFilterValue = this.nzFilterMultiple ? listOfValue : listOfValue[0] || null;\n    }\n    if (nzSortFn || nzFilterFn || nzSortPriority || nzFilters) {\n      this.updateCalcOperator();\n    }\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { Directive, ElementRef, Input, OnChanges, Renderer2, SimpleChanges } from '@angular/core';\nimport { isNil } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\n\n@Directive({\n  selector: 'th'\n})\nexport class NzThMeasureDirective implements OnChanges {\n  changes$ = new Subject();\n  @Input() nzWidth: string | null = null;\n  @Input() colspan: string | number | null = null;\n  @Input() colSpan: string | number | null = null;\n  @Input() rowspan: string | number | null = null;\n  @Input() rowSpan: string | number | null = null;\n  constructor(private renderer: Renderer2, private elementRef: ElementRef) {}\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzWidth, colspan, rowspan, colSpan, rowSpan } = changes;\n    if (colspan || colSpan) {\n      const col = this.colspan || this.colSpan;\n      if (!isNil(col)) {\n        this.renderer.setAttribute(this.elementRef.nativeElement, 'colspan', `${col}`);\n      } else {\n        this.renderer.removeAttribute(this.elementRef.nativeElement, 'colspan');\n      }\n    }\n    if (rowspan || rowSpan) {\n      const row = this.rowspan || this.rowSpan;\n      if (!isNil(row)) {\n        this.renderer.setAttribute(this.elementRef.nativeElement, 'rowspan', `${row}`);\n      } else {\n        this.renderer.removeAttribute(this.elementRef.nativeElement, 'rowspan');\n      }\n    }\n    if (nzWidth || colspan) {\n      this.changes$.next();\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n/* tslint:disable:component-selector */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport { BooleanInput, NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\n@Component({\n  selector: 'th[nzSelections],th[nzChecked],th[nzShowCheckbox],th[nzShowRowSelection]',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <nz-table-selection\n      [checked]=\"nzChecked\"\n      [disabled]=\"nzDisabled\"\n      [indeterminate]=\"nzIndeterminate\"\n      [listOfSelections]=\"nzSelections\"\n      [showCheckbox]=\"nzShowCheckbox\"\n      [showRowSelection]=\"nzShowRowSelection\"\n      (checkedChange)=\"onCheckedChange($event)\"\n    ></nz-table-selection>\n    <ng-content></ng-content>\n  `\n})\nexport class NzThSelectionComponent implements OnChanges {\n  static ngAcceptInputType_nzShowCheckbox: BooleanInput;\n  static ngAcceptInputType_nzShowRowSelection: BooleanInput;\n\n  @Input() nzSelections: Array<{ text: string; onSelect(...args: NzSafeAny[]): NzSafeAny }> = [];\n  @Input() nzChecked = false;\n  @Input() nzDisabled = false;\n  @Input() nzIndeterminate = false;\n  @Input() @InputBoolean() nzShowCheckbox = false;\n  @Input() @InputBoolean() nzShowRowSelection = false;\n  @Output() readonly nzCheckedChange = new EventEmitter<boolean>();\n\n  private isNzShowExpandChanged = false;\n  private isNzShowCheckboxChanged = false;\n\n  constructor(private elementRef: ElementRef) {\n    // TODO: move to host after View Engine deprecation\n    this.elementRef.nativeElement.classList.add('ant-table-selection-column');\n  }\n\n  onCheckedChange(checked: boolean): void {\n    this.nzChecked = checked;\n    this.nzCheckedChange.emit(checked);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const isFirstChange = (value: SimpleChange) => value && value.firstChange && value.currentValue !== undefined;\n    const { nzChecked, nzSelections, nzShowExpand, nzShowCheckbox } = changes;\n    if (nzShowExpand) {\n      this.isNzShowExpandChanged = true;\n    }\n    if (nzShowCheckbox) {\n      this.isNzShowCheckboxChanged = true;\n    }\n    if (isFirstChange(nzSelections) && !this.isNzShowExpandChanged) {\n      this.nzShowRowSelection = true;\n    }\n    if (isFirstChange(nzChecked) && !this.isNzShowCheckboxChanged) {\n      this.nzShowCheckbox = true;\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, Input } from '@angular/core';\n\n@Directive({\n  selector: 'th[nzAlign],td[nzAlign]',\n  host: {\n    '[style.text-align]': 'nzAlign'\n  }\n})\nexport class NzCellAlignDirective {\n  @Input() nzAlign: 'left' | 'right' | 'center' | null = null;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, Input } from '@angular/core';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\n@Directive({\n  selector: 'th[nzEllipsis],td[nzEllipsis]',\n  host: {\n    '[class.ant-table-cell-ellipsis]': 'nzEllipsis'\n  }\n})\nexport class NzCellEllipsisDirective {\n  static ngAcceptInputType_nzEllipsis: BooleanInput;\n\n  @Input() @InputBoolean() nzEllipsis = true;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, Input } from '@angular/core';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\n@Directive({\n  selector: 'th[nzBreakWord],td[nzBreakWord]',\n  host: {\n    '[style.word-break]': `nzBreakWord ? 'break-all' : ''`\n  }\n})\nexport class NzCellBreakWordDirective {\n  static ngAcceptInputType_nzBreakWord: BooleanInput;\n\n  @Input() @InputBoolean() nzBreakWord = true;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzTableLayout } from '../table.types';\n\n@Component({\n  selector: 'table[nz-table-content]',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <col [style.width]=\"width\" [style.minWidth]=\"width\" *ngFor=\"let width of listOfColWidth\" />\n    <thead class=\"ant-table-thead\" *ngIf=\"theadTemplate\">\n      <ng-template [ngTemplateOutlet]=\"theadTemplate\"></ng-template>\n    </thead>\n    <ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template>\n    <ng-content></ng-content>\n  `,\n  host: {\n    '[style.table-layout]': 'tableLayout',\n    '[class.ant-table-fixed]': 'scrollX',\n    '[style.width]': 'scrollX',\n    '[style.min-width]': `scrollX ? '100%': null`\n  }\n})\nexport class NzTableContentComponent {\n  @Input() tableLayout: NzTableLayout = 'auto';\n  @Input() theadTemplate: TemplateRef<NzSafeAny> | null = null;\n  @Input() contentTemplate: TemplateRef<NzSafeAny> | null = null;\n  @Input() listOfColWidth: Array<string | null> = [];\n  @Input() scrollX: string | null = null;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NzTableStyleService } from '../table-style.service';\n\n@Component({\n  selector: 'tr[nz-table-fixed-row], tr[nzExpand]',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <td class=\"nz-disable-td ant-table-cell\" #tdElement>\n      <div\n        class=\"ant-table-expanded-row-fixed\"\n        *ngIf=\"enableAutoMeasure$ | async; else contentTemplate\"\n        style=\"position: sticky; left: 0px; overflow: hidden;\"\n        [style.width.px]=\"hostWidth$ | async\"\n      >\n        <ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template>\n      </div>\n    </td>\n    <ng-template #contentTemplate><ng-content></ng-content></ng-template>\n  `\n})\nexport class NzTableFixedRowComponent implements OnInit, OnDestroy, AfterViewInit {\n  @ViewChild('tdElement') tdElement!: ElementRef;\n  hostWidth$ = new BehaviorSubject<number | null>(null);\n  enableAutoMeasure$ = new BehaviorSubject<boolean>(false);\n  private destroy$ = new Subject();\n  constructor(private nzTableStyleService: NzTableStyleService, private renderer: Renderer2) {}\n  ngOnInit(): void {\n    if (this.nzTableStyleService) {\n      const { enableAutoMeasure$, hostWidth$ } = this.nzTableStyleService;\n      enableAutoMeasure$.subscribe(this.enableAutoMeasure$);\n      hostWidth$.subscribe(this.hostWidth$);\n    }\n  }\n  ngAfterViewInit(): void {\n    this.nzTableStyleService.columnCount$.pipe(takeUntil(this.destroy$)).subscribe(count => {\n      this.renderer.setAttribute(this.tdElement.nativeElement, 'colspan', `${count}`);\n    });\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, ElementRef, Input, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzTableLayout } from '../table.types';\n\n@Component({\n  selector: 'nz-table-inner-default',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <div class=\"ant-table-content\">\n      <table\n        nz-table-content\n        [contentTemplate]=\"contentTemplate\"\n        [tableLayout]=\"tableLayout\"\n        [listOfColWidth]=\"listOfColWidth\"\n        [theadTemplate]=\"theadTemplate\"\n      ></table>\n    </div>\n  `\n})\nexport class NzTableInnerDefaultComponent {\n  @Input() tableLayout: NzTableLayout = 'auto';\n  @Input() listOfColWidth: Array<string | null> = [];\n  @Input() theadTemplate: TemplateRef<NzSafeAny> | null = null;\n  @Input() contentTemplate: TemplateRef<NzSafeAny> | null = null;\n\n  constructor(private elementRef: ElementRef) {\n    // TODO: move to host after View Engine deprecation\n    this.elementRef.nativeElement.classList.add('ant-table-container');\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Platform } from '@angular/cdk/platform';\nimport { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Renderer2,\n  SimpleChanges,\n  TemplateRef,\n  TrackByFunction,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { NzResizeService } from 'ng-zorro-antd/core/services';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { fromEvent, merge, Subject } from 'rxjs';\nimport { delay, filter, startWith, switchMap, takeUntil } from 'rxjs/operators';\nimport { NzTableData } from '../table.types';\n\n@Component({\n  selector: 'nz-table-inner-scroll',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <ng-container *ngIf=\"scrollY\">\n      <div #tableHeaderElement [ngStyle]=\"headerStyleMap\" class=\"ant-table-header nz-table-hide-scrollbar\">\n        <table\n          nz-table-content\n          tableLayout=\"fixed\"\n          [scrollX]=\"scrollX\"\n          [listOfColWidth]=\"listOfColWidth\"\n          [theadTemplate]=\"theadTemplate\"\n        ></table>\n      </div>\n      <div #tableBodyElement *ngIf=\"!virtualTemplate\" class=\"ant-table-body\" [ngStyle]=\"bodyStyleMap\">\n        <table\n          nz-table-content\n          tableLayout=\"fixed\"\n          [scrollX]=\"scrollX\"\n          [listOfColWidth]=\"listOfColWidth\"\n          [contentTemplate]=\"contentTemplate\"\n        ></table>\n      </div>\n      <cdk-virtual-scroll-viewport\n        #tableBodyElement\n        *ngIf=\"virtualTemplate\"\n        [itemSize]=\"virtualItemSize\"\n        [maxBufferPx]=\"virtualMaxBufferPx\"\n        [minBufferPx]=\"virtualMinBufferPx\"\n        [style.height]=\"data.length ? scrollY : noDateVirtualHeight\"\n      >\n        <table nz-table-content tableLayout=\"fixed\" [scrollX]=\"scrollX\" [listOfColWidth]=\"listOfColWidth\">\n          <tbody>\n            <ng-container *cdkVirtualFor=\"let item of data; let i = index; trackBy: virtualForTrackBy\">\n              <ng-template [ngTemplateOutlet]=\"virtualTemplate\" [ngTemplateOutletContext]=\"{ $implicit: item, index: i }\"></ng-template>\n            </ng-container>\n          </tbody>\n        </table>\n      </cdk-virtual-scroll-viewport>\n    </ng-container>\n    <div class=\"ant-table-content\" *ngIf=\"!scrollY\">\n      <div #tableBodyElement class=\"ant-table-body\" [ngStyle]=\"bodyStyleMap\">\n        <table\n          nz-table-content\n          tableLayout=\"fixed\"\n          [scrollX]=\"scrollX\"\n          [listOfColWidth]=\"listOfColWidth\"\n          [theadTemplate]=\"theadTemplate\"\n          [contentTemplate]=\"contentTemplate\"\n        ></table>\n      </div>\n    </div>\n  `\n})\nexport class NzTableInnerScrollComponent implements OnChanges, AfterViewInit, OnDestroy {\n  @Input() data: NzTableData[] = [];\n  @Input() scrollX: string | null = null;\n  @Input() scrollY: string | null = null;\n  @Input() contentTemplate: TemplateRef<NzSafeAny> | null = null;\n  @Input() widthConfig: string[] = [];\n  @Input() listOfColWidth: Array<string | null> = [];\n  @Input() theadTemplate: TemplateRef<NzSafeAny> | null = null;\n  @Input() virtualTemplate: TemplateRef<NzSafeAny> | null = null;\n  @Input() virtualItemSize = 0;\n  @Input() virtualMaxBufferPx = 200;\n  @Input() virtualMinBufferPx = 100;\n  @Input() tableMainElement?: HTMLDivElement;\n  @Input() virtualForTrackBy: TrackByFunction<NzTableData> = index => index;\n  @ViewChild('tableHeaderElement', { read: ElementRef }) tableHeaderElement!: ElementRef;\n  @ViewChild('tableBodyElement', { read: ElementRef }) tableBodyElement!: ElementRef;\n  @ViewChild(CdkVirtualScrollViewport, { read: CdkVirtualScrollViewport })\n  cdkVirtualScrollViewport?: CdkVirtualScrollViewport;\n  headerStyleMap = {};\n  bodyStyleMap = {};\n  @Input() verticalScrollBarWidth = 0;\n  noDateVirtualHeight = '182px';\n  private data$ = new Subject<void>();\n  private scroll$ = new Subject<void>();\n  private destroy$ = new Subject<void>();\n\n  setScrollPositionClassName(clear: boolean = false): void {\n    const { scrollWidth, scrollLeft, clientWidth } = this.tableBodyElement.nativeElement;\n    const leftClassName = 'ant-table-ping-left';\n    const rightClassName = 'ant-table-ping-right';\n    if ((scrollWidth === clientWidth && scrollWidth !== 0) || clear) {\n      this.renderer.removeClass(this.tableMainElement, leftClassName);\n      this.renderer.removeClass(this.tableMainElement, rightClassName);\n    } else if (scrollLeft === 0) {\n      this.renderer.removeClass(this.tableMainElement, leftClassName);\n      this.renderer.addClass(this.tableMainElement, rightClassName);\n    } else if (scrollWidth === scrollLeft + clientWidth) {\n      this.renderer.removeClass(this.tableMainElement, rightClassName);\n      this.renderer.addClass(this.tableMainElement, leftClassName);\n    } else {\n      this.renderer.addClass(this.tableMainElement, leftClassName);\n      this.renderer.addClass(this.tableMainElement, rightClassName);\n    }\n  }\n\n  constructor(\n    private renderer: Renderer2,\n    private ngZone: NgZone,\n    private platform: Platform,\n    private resizeService: NzResizeService,\n    private elementRef: ElementRef\n  ) {\n    // TODO: move to host after View Engine deprecation\n    this.elementRef.nativeElement.classList.add('ant-table-container');\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { scrollX, scrollY, data } = changes;\n    if (scrollX || scrollY) {\n      const hasVerticalScrollBar = this.verticalScrollBarWidth !== 0;\n      this.headerStyleMap = {\n        overflowX: 'hidden',\n        overflowY: this.scrollY && hasVerticalScrollBar ? 'scroll' : 'hidden'\n      };\n      this.bodyStyleMap = {\n        overflowY: this.scrollY ? 'scroll' : 'hidden',\n        overflowX: this.scrollX ? 'auto' : null,\n        maxHeight: this.scrollY\n      };\n      this.scroll$.next();\n    }\n    if (data) {\n      this.data$.next();\n    }\n  }\n  ngAfterViewInit(): void {\n    if (this.platform.isBrowser) {\n      this.ngZone.runOutsideAngular(() => {\n        const scrollEvent$ = this.scroll$.pipe(\n          startWith(null),\n          delay(0),\n          switchMap(() => fromEvent<MouseEvent>(this.tableBodyElement.nativeElement, 'scroll').pipe(startWith(true))),\n          takeUntil(this.destroy$)\n        );\n        const resize$ = this.resizeService.subscribe().pipe(takeUntil(this.destroy$));\n        const data$ = this.data$.pipe(takeUntil(this.destroy$));\n        const setClassName$ = merge(scrollEvent$, resize$, data$, this.scroll$).pipe(startWith(true), delay(0), takeUntil(this.destroy$));\n        setClassName$.subscribe(() => this.setScrollPositionClassName());\n        scrollEvent$\n          .pipe(filter(() => !!this.scrollY))\n          .subscribe(() => (this.tableHeaderElement.nativeElement.scrollLeft = this.tableBodyElement.nativeElement.scrollLeft));\n      });\n    }\n  }\n  ngOnDestroy(): void {\n    this.setScrollPositionClassName(true);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, TemplateRef } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\n@Directive({\n  selector: '[nz-virtual-scroll]',\n  exportAs: 'nzVirtualScroll'\n})\nexport class NzTableVirtualScrollDirective {\n  constructor(public templateRef: TemplateRef<{ $implicit: NzSafeAny; index: number }>) {}\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Observable, Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, filter, map, skip, switchMap, takeUntil } from 'rxjs/operators';\nimport { NzTableData, NzTableFilterFn, NzTableFilterValue, NzTableQueryParams, NzTableSortFn, NzTableSortOrder } from './table.types';\n\n@Injectable()\nexport class NzTableDataService implements OnDestroy {\n  private destroy$ = new Subject();\n  private pageIndex$ = new BehaviorSubject<number>(1);\n  private frontPagination$ = new BehaviorSubject<boolean>(true);\n  private pageSize$ = new BehaviorSubject<number>(10);\n  private listOfData$ = new BehaviorSubject<NzTableData[]>([]);\n  pageIndexDistinct$ = this.pageIndex$.pipe(distinctUntilChanged());\n  pageSizeDistinct$ = this.pageSize$.pipe(distinctUntilChanged());\n  listOfCalcOperator$ = new BehaviorSubject<\n    Array<{\n      key?: string;\n      sortFn: NzTableSortFn | null | boolean;\n      sortOrder: NzTableSortOrder;\n      filterFn: NzTableFilterFn | null | boolean;\n      filterValue: NzTableFilterValue;\n      sortPriority: number | boolean;\n    }>\n  >([]);\n  queryParams$: Observable<NzTableQueryParams> = combineLatest([\n    this.pageIndexDistinct$,\n    this.pageSizeDistinct$,\n    this.listOfCalcOperator$\n  ]).pipe(\n    debounceTime(0),\n    skip(1),\n    map(([pageIndex, pageSize, listOfCalc]) => {\n      return {\n        pageIndex,\n        pageSize,\n        sort: listOfCalc\n          .filter(item => item.sortFn)\n          .map(item => {\n            return {\n              key: item.key!,\n              value: item.sortOrder\n            };\n          }),\n        filter: listOfCalc\n          .filter(item => item.filterFn)\n          .map(item => {\n            return {\n              key: item.key!,\n              value: item.filterValue\n            };\n          })\n      };\n    })\n  );\n  private listOfDataAfterCalc$ = combineLatest([this.listOfData$, this.listOfCalcOperator$]).pipe(\n    map(([listOfData, listOfCalcOperator]) => {\n      let listOfDataAfterCalc = [...listOfData];\n      const listOfFilterOperator = listOfCalcOperator.filter(item => {\n        const { filterValue, filterFn } = item;\n        const isReset = filterValue === null || filterValue === undefined || (Array.isArray(filterValue) && filterValue!.length === 0);\n        return !isReset && typeof filterFn === 'function';\n      });\n      for (const item of listOfFilterOperator) {\n        const { filterFn, filterValue } = item;\n        listOfDataAfterCalc = listOfDataAfterCalc.filter(data => (filterFn as NzTableFilterFn)(filterValue, data));\n      }\n      const listOfSortOperator = listOfCalcOperator\n        .filter(item => item.sortOrder !== null && typeof item.sortFn === 'function')\n        .sort((a, b) => +b.sortPriority - +a.sortPriority);\n      if (listOfCalcOperator.length) {\n        listOfDataAfterCalc.sort((record1, record2) => {\n          for (const item of listOfSortOperator) {\n            const { sortFn, sortOrder } = item;\n            if (sortFn && sortOrder) {\n              const compareResult = (sortFn as NzTableSortFn)(record1, record2, sortOrder);\n              if (compareResult !== 0) {\n                return sortOrder === 'ascend' ? compareResult : -compareResult;\n              }\n            }\n          }\n          return 0;\n        });\n      }\n      return listOfDataAfterCalc;\n    })\n  );\n  private listOfFrontEndCurrentPageData$ = combineLatest([this.pageIndexDistinct$, this.pageSizeDistinct$, this.listOfDataAfterCalc$]).pipe(\n    takeUntil(this.destroy$),\n    filter(value => {\n      const [pageIndex, pageSize, listOfData] = value;\n      const maxPageIndex = Math.ceil(listOfData.length / pageSize) || 1;\n      return pageIndex <= maxPageIndex;\n    }),\n    map(([pageIndex, pageSize, listOfData]) => {\n      return listOfData.slice((pageIndex - 1) * pageSize, pageIndex * pageSize);\n    })\n  );\n  listOfCurrentPageData$ = this.frontPagination$.pipe(\n    switchMap(pagination => (pagination ? this.listOfFrontEndCurrentPageData$ : this.listOfData$))\n  );\n  total$ = this.frontPagination$.pipe(\n    switchMap(pagination => (pagination ? this.listOfDataAfterCalc$ : this.listOfData$)),\n    map(list => list.length),\n    distinctUntilChanged()\n  );\n\n  updatePageSize(size: number): void {\n    this.pageSize$.next(size);\n  }\n  updateFrontPagination(pagination: boolean): void {\n    this.frontPagination$.next(pagination);\n  }\n  updatePageIndex(index: number): void {\n    this.pageIndex$.next(index);\n  }\n  updateListOfData(list: NzTableData[]): void {\n    this.listOfData$.next(list);\n  }\n  constructor() {}\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  TrackByFunction,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { NzConfigKey, NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { NzResizeObserver } from 'ng-zorro-antd/core/resize-observers';\nimport { BooleanInput, NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { InputBoolean, measureScrollbar } from 'ng-zorro-antd/core/util';\nimport { PaginationItemRenderContext } from 'ng-zorro-antd/pagination';\nimport { BehaviorSubject, combineLatest, Subject } from 'rxjs';\nimport { filter, map, takeUntil } from 'rxjs/operators';\nimport { NzTableDataService } from '../table-data.service';\nimport { NzTableStyleService } from '../table-style.service';\nimport { NzTableData, NzTableLayout, NzTablePaginationPosition, NzTableQueryParams, NzTableSize } from '../table.types';\nimport { NzTableInnerScrollComponent } from './table-inner-scroll.component';\nimport { NzTableVirtualScrollDirective } from './table-virtual-scroll.directive';\n\nconst NZ_CONFIG_MODULE_NAME: NzConfigKey = 'table';\n\n@Component({\n  selector: 'nz-table',\n  exportAs: 'nzTable',\n  providers: [NzTableStyleService, NzTableDataService],\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <nz-spin [nzDelay]=\"nzLoadingDelay\" [nzSpinning]=\"nzLoading\" [nzIndicator]=\"nzLoadingIndicator\">\n      <ng-container *ngIf=\"nzPaginationPosition === 'both' || nzPaginationPosition === 'top'\">\n        <ng-template [ngTemplateOutlet]=\"paginationTemplate\"></ng-template>\n      </ng-container>\n      <div\n        #tableMainElement\n        class=\"ant-table\"\n        [class.ant-table-fixed-header]=\"nzData.length && scrollY\"\n        [class.ant-table-fixed-column]=\"scrollX\"\n        [class.ant-table-has-fix-left]=\"hasFixLeft\"\n        [class.ant-table-has-fix-right]=\"hasFixRight\"\n        [class.ant-table-bordered]=\"nzBordered\"\n        [class.nz-table-out-bordered]=\"nzOuterBordered && !nzBordered\"\n        [class.ant-table-middle]=\"nzSize === 'middle'\"\n        [class.ant-table-small]=\"nzSize === 'small'\"\n      >\n        <nz-table-title-footer [title]=\"nzTitle\" *ngIf=\"nzTitle\"></nz-table-title-footer>\n        <nz-table-inner-scroll\n          *ngIf=\"scrollY || scrollX; else defaultTemplate\"\n          [data]=\"data\"\n          [scrollX]=\"scrollX\"\n          [scrollY]=\"scrollY\"\n          [contentTemplate]=\"contentTemplate\"\n          [listOfColWidth]=\"listOfAutoColWidth\"\n          [theadTemplate]=\"theadTemplate\"\n          [verticalScrollBarWidth]=\"verticalScrollBarWidth\"\n          [virtualTemplate]=\"nzVirtualScrollDirective ? nzVirtualScrollDirective.templateRef : null\"\n          [virtualItemSize]=\"nzVirtualItemSize\"\n          [virtualMaxBufferPx]=\"nzVirtualMaxBufferPx\"\n          [virtualMinBufferPx]=\"nzVirtualMinBufferPx\"\n          [tableMainElement]=\"tableMainElement\"\n          [virtualForTrackBy]=\"nzVirtualForTrackBy\"\n        ></nz-table-inner-scroll>\n        <ng-template #defaultTemplate>\n          <nz-table-inner-default\n            [tableLayout]=\"nzTableLayout\"\n            [listOfColWidth]=\"listOfManualColWidth\"\n            [theadTemplate]=\"theadTemplate\"\n            [contentTemplate]=\"contentTemplate\"\n          ></nz-table-inner-default>\n        </ng-template>\n        <nz-table-title-footer [footer]=\"nzFooter\" *ngIf=\"nzFooter\"></nz-table-title-footer>\n      </div>\n      <ng-container *ngIf=\"nzPaginationPosition === 'both' || nzPaginationPosition === 'bottom'\">\n        <ng-template [ngTemplateOutlet]=\"paginationTemplate\"></ng-template>\n      </ng-container>\n    </nz-spin>\n    <ng-template #paginationTemplate>\n      <nz-pagination\n        *ngIf=\"nzShowPagination && showPagination && data.length\"\n        class=\"ant-table-pagination ant-table-pagination-right\"\n        [nzShowSizeChanger]=\"nzShowSizeChanger\"\n        [nzPageSizeOptions]=\"nzPageSizeOptions\"\n        [nzItemRender]=\"nzItemRender!\"\n        [nzShowQuickJumper]=\"nzShowQuickJumper\"\n        [nzHideOnSinglePage]=\"nzHideOnSinglePage\"\n        [nzShowTotal]=\"nzShowTotal\"\n        [nzSize]=\"nzSize === 'default' ? 'default' : 'small'\"\n        [nzPageSize]=\"nzPageSize\"\n        [nzTotal]=\"nzTotal\"\n        [nzSimple]=\"nzSimple\"\n        [nzPageIndex]=\"nzPageIndex\"\n        (nzPageSizeChange)=\"onPageSizeChange($event)\"\n        (nzPageIndexChange)=\"onPageIndexChange($event)\"\n      ></nz-pagination>\n    </ng-template>\n    <ng-template #contentTemplate>\n      <ng-content></ng-content>\n    </ng-template>\n  `\n})\nexport class NzTableComponent<T = NzSafeAny> implements OnInit, OnDestroy, OnChanges, AfterViewInit {\n  readonly _nzModuleName: NzConfigKey = NZ_CONFIG_MODULE_NAME;\n\n  static ngAcceptInputType_nzFrontPagination: BooleanInput;\n  static ngAcceptInputType_nzTemplateMode: BooleanInput;\n  static ngAcceptInputType_nzShowPagination: BooleanInput;\n  static ngAcceptInputType_nzLoading: BooleanInput;\n  static ngAcceptInputType_nzBordered: BooleanInput;\n  static ngAcceptInputType_nzOuterBordered: BooleanInput;\n  static ngAcceptInputType_nzShowSizeChanger: BooleanInput;\n  static ngAcceptInputType_nzHideOnSinglePage: BooleanInput;\n  static ngAcceptInputType_nzShowQuickJumper: BooleanInput;\n  static ngAcceptInputType_nzSimple: BooleanInput;\n\n  @Input() nzTableLayout: NzTableLayout = 'auto';\n  @Input() nzShowTotal: TemplateRef<{ $implicit: number; range: [number, number] }> | null = null;\n  @Input() nzItemRender: TemplateRef<PaginationItemRenderContext> | null = null;\n  @Input() nzTitle: string | TemplateRef<NzSafeAny> | null = null;\n  @Input() nzFooter: string | TemplateRef<NzSafeAny> | null = null;\n  @Input() nzNoResult: string | TemplateRef<NzSafeAny> | undefined = undefined;\n  @Input() nzPageSizeOptions = [10, 20, 30, 40, 50];\n  @Input() nzVirtualItemSize = 0;\n  @Input() nzVirtualMaxBufferPx = 200;\n  @Input() nzVirtualMinBufferPx = 100;\n  @Input() nzVirtualForTrackBy: TrackByFunction<NzTableData> = index => index;\n  @Input() nzLoadingDelay = 0;\n  @Input() nzPageIndex = 1;\n  @Input() nzPageSize = 10;\n  @Input() nzTotal = 0;\n  @Input() nzWidthConfig: Array<string | null> = [];\n  @Input() nzData: T[] = [];\n  @Input() nzPaginationPosition: NzTablePaginationPosition = 'bottom';\n  @Input() nzScroll: { x?: string | null; y?: string | null } = { x: null, y: null };\n  @Input() @InputBoolean() nzFrontPagination = true;\n  @Input() @InputBoolean() nzTemplateMode = false;\n  @Input() @InputBoolean() nzShowPagination = true;\n  @Input() @InputBoolean() nzLoading = false;\n  @Input() @InputBoolean() nzOuterBordered = false;\n  @Input() @WithConfig() nzLoadingIndicator: TemplateRef<NzSafeAny> | null = null;\n  @Input() @WithConfig() @InputBoolean() nzBordered: boolean = false;\n  @Input() @WithConfig() nzSize: NzTableSize = 'default';\n  @Input() @WithConfig() @InputBoolean() nzShowSizeChanger: boolean = false;\n  @Input() @WithConfig() @InputBoolean() nzHideOnSinglePage: boolean = false;\n  @Input() @WithConfig() @InputBoolean() nzShowQuickJumper: boolean = false;\n  @Input() @WithConfig() @InputBoolean() nzSimple: boolean = false;\n  @Output() readonly nzPageSizeChange = new EventEmitter<number>();\n  @Output() readonly nzPageIndexChange = new EventEmitter<number>();\n  @Output() readonly nzQueryParams = new EventEmitter<NzTableQueryParams>();\n  @Output() readonly nzCurrentPageDataChange = new EventEmitter<NzTableData[]>();\n\n  /** public data for ngFor tr */\n  public data: T[] = [];\n  public cdkVirtualScrollViewport?: CdkVirtualScrollViewport;\n  scrollX: string | null = null;\n  scrollY: string | null = null;\n  theadTemplate: TemplateRef<NzSafeAny> | null = null;\n  listOfAutoColWidth: Array<string | null> = [];\n  listOfManualColWidth: Array<string | null> = [];\n  hasFixLeft = false;\n  hasFixRight = false;\n  showPagination = true;\n  private destroy$ = new Subject<void>();\n  private loading$ = new BehaviorSubject<boolean>(false);\n  private templateMode$ = new BehaviorSubject<boolean>(false);\n  @ContentChild(NzTableVirtualScrollDirective, { static: false })\n  nzVirtualScrollDirective!: NzTableVirtualScrollDirective;\n  @ViewChild(NzTableInnerScrollComponent) nzTableInnerScrollComponent!: NzTableInnerScrollComponent;\n  verticalScrollBarWidth = 0;\n  onPageSizeChange(size: number): void {\n    this.nzTableDataService.updatePageSize(size);\n  }\n\n  onPageIndexChange(index: number): void {\n    this.nzTableDataService.updatePageIndex(index);\n  }\n\n  constructor(\n    private elementRef: ElementRef,\n    private nzResizeObserver: NzResizeObserver,\n    private nzConfigService: NzConfigService,\n    private cdr: ChangeDetectorRef,\n    private nzTableStyleService: NzTableStyleService,\n    private nzTableDataService: NzTableDataService\n  ) {\n    // TODO: move to host after View Engine deprecation\n    this.elementRef.nativeElement.classList.add('ant-table-wrapper');\n    this.nzConfigService\n      .getConfigChangeEventForComponent(NZ_CONFIG_MODULE_NAME)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.cdr.markForCheck();\n      });\n  }\n\n  ngOnInit(): void {\n    const { pageIndexDistinct$, pageSizeDistinct$, listOfCurrentPageData$, total$, queryParams$ } = this.nzTableDataService;\n    const { theadTemplate$, hasFixLeft$, hasFixRight$ } = this.nzTableStyleService;\n    queryParams$.pipe(takeUntil(this.destroy$)).subscribe(this.nzQueryParams);\n    pageIndexDistinct$.pipe(takeUntil(this.destroy$)).subscribe(pageIndex => {\n      if (pageIndex !== this.nzPageIndex) {\n        this.nzPageIndex = pageIndex;\n        this.nzPageIndexChange.next(pageIndex);\n      }\n    });\n    pageSizeDistinct$.pipe(takeUntil(this.destroy$)).subscribe(pageSize => {\n      if (pageSize !== this.nzPageSize) {\n        this.nzPageSize = pageSize;\n        this.nzPageSizeChange.next(pageSize);\n      }\n    });\n    total$\n      .pipe(\n        takeUntil(this.destroy$),\n        filter(() => this.nzFrontPagination)\n      )\n      .subscribe(total => {\n        if (total !== this.nzTotal) {\n          this.nzTotal = total;\n          this.cdr.markForCheck();\n        }\n      });\n    listOfCurrentPageData$.pipe(takeUntil(this.destroy$)).subscribe(data => {\n      this.data = data;\n      this.nzCurrentPageDataChange.next(data);\n      this.cdr.markForCheck();\n    });\n\n    theadTemplate$.pipe(takeUntil(this.destroy$)).subscribe(theadTemplate => {\n      this.theadTemplate = theadTemplate;\n      this.cdr.markForCheck();\n    });\n\n    hasFixLeft$.pipe(takeUntil(this.destroy$)).subscribe(hasFixLeft => {\n      this.hasFixLeft = hasFixLeft;\n      this.cdr.markForCheck();\n    });\n\n    hasFixRight$.pipe(takeUntil(this.destroy$)).subscribe(hasFixRight => {\n      this.hasFixRight = hasFixRight;\n      this.cdr.markForCheck();\n    });\n\n    combineLatest([total$, this.loading$, this.templateMode$])\n      .pipe(\n        map(([total, loading, templateMode]) => total === 0 && !loading && !templateMode),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(empty => {\n        this.nzTableStyleService.setShowEmpty(empty);\n      });\n\n    this.verticalScrollBarWidth = measureScrollbar('vertical');\n    this.nzTableStyleService.listOfListOfThWidthPx$.pipe(takeUntil(this.destroy$)).subscribe(listOfWidth => {\n      this.listOfAutoColWidth = listOfWidth;\n      this.cdr.markForCheck();\n    });\n    this.nzTableStyleService.manualWidthConfigPx$.pipe(takeUntil(this.destroy$)).subscribe(listOfWidth => {\n      this.listOfManualColWidth = listOfWidth;\n      this.cdr.markForCheck();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzScroll, nzPageIndex, nzPageSize, nzFrontPagination, nzData, nzWidthConfig, nzNoResult, nzLoading, nzTemplateMode } = changes;\n    if (nzPageIndex) {\n      this.nzTableDataService.updatePageIndex(this.nzPageIndex);\n    }\n    if (nzPageSize) {\n      this.nzTableDataService.updatePageSize(this.nzPageSize);\n    }\n    if (nzData) {\n      this.nzData = this.nzData || [];\n      this.nzTableDataService.updateListOfData(this.nzData);\n    }\n    if (nzFrontPagination) {\n      this.nzTableDataService.updateFrontPagination(this.nzFrontPagination);\n    }\n    if (nzScroll) {\n      this.setScrollOnChanges();\n    }\n    if (nzWidthConfig) {\n      this.nzTableStyleService.setTableWidthConfig(this.nzWidthConfig);\n    }\n    if (nzLoading) {\n      this.loading$.next(this.nzLoading);\n    }\n    if (nzTemplateMode) {\n      this.templateMode$.next(this.nzTemplateMode);\n    }\n    if (nzNoResult) {\n      this.nzTableStyleService.setNoResult(this.nzNoResult);\n    }\n\n    this.showPagination =\n      (this.nzHideOnSinglePage && this.nzData.length > this.nzPageSize) || (this.nzData.length > 0 && !this.nzHideOnSinglePage);\n  }\n\n  ngAfterViewInit(): void {\n    this.nzResizeObserver\n      .observe(this.elementRef)\n      .pipe(\n        map(([entry]) => {\n          const { width } = entry.target.getBoundingClientRect();\n          const scrollBarWidth = this.scrollY ? this.verticalScrollBarWidth : 0;\n          return Math.floor(width - scrollBarWidth);\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(this.nzTableStyleService.hostWidth$);\n    if (this.nzTableInnerScrollComponent && this.nzTableInnerScrollComponent.cdkVirtualScrollViewport) {\n      this.cdkVirtualScrollViewport = this.nzTableInnerScrollComponent.cdkVirtualScrollViewport;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private setScrollOnChanges(): void {\n    this.scrollX = (this.nzScroll && this.nzScroll.x) || null;\n    this.scrollY = (this.nzScroll && this.nzScroll.y) || null;\n    this.nzTableStyleService.setScroll(this.scrollX, this.scrollY);\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n/* tslint:disable:component-selector */\n\nimport { ChangeDetectionStrategy, Component, Optional, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { BehaviorSubject } from 'rxjs';\nimport { NzTableStyleService } from '../table-style.service';\n\n@Component({\n  selector: 'tbody',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <ng-container *ngIf=\"listOfMeasureColumn$ | async as listOfMeasureColumn\">\n      <tr\n        nz-table-measure-row\n        *ngIf=\"isInsideTable && listOfMeasureColumn.length\"\n        [listOfMeasureColumn]=\"listOfMeasureColumn\"\n        (listOfAutoWidth)=\"onListOfAutoWidthChange($event)\"\n      ></tr>\n    </ng-container>\n    <ng-content></ng-content>\n    <tr class=\"ant-table-placeholder\" nz-table-fixed-row *ngIf=\"showEmpty$ | async\">\n      <nz-embed-empty nzComponentName=\"table\" [specificContent]=\"(noResult$ | async)!\"></nz-embed-empty>\n    </tr>\n  `,\n  host: {\n    '[class.ant-table-tbody]': 'isInsideTable'\n  }\n})\nexport class NzTbodyComponent {\n  isInsideTable = false;\n  showEmpty$ = new BehaviorSubject<boolean>(false);\n  noResult$ = new BehaviorSubject<string | TemplateRef<NzSafeAny> | undefined>(undefined);\n  listOfMeasureColumn$ = new BehaviorSubject<string[]>([]);\n\n  constructor(@Optional() private nzTableStyleService: NzTableStyleService) {\n    this.isInsideTable = !!this.nzTableStyleService;\n    if (this.nzTableStyleService) {\n      const { showEmpty$, noResult$, listOfMeasureColumn$ } = this.nzTableStyleService;\n      noResult$.subscribe(this.noResult$);\n      listOfMeasureColumn$.subscribe(this.listOfMeasureColumn$);\n      showEmpty$.subscribe(this.showEmpty$);\n    }\n  }\n\n  onListOfAutoWidthChange(listOfAutoWidth: number[]): void {\n    this.nzTableStyleService.setListOfAutoWidth(listOfAutoWidth);\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { AfterContentInit, ContentChildren, Directive, OnDestroy, Optional, QueryList } from '@angular/core';\nimport { combineLatest, merge, Observable, ReplaySubject, Subject } from 'rxjs';\nimport { flatMap, map, startWith, switchMap, takeUntil } from 'rxjs/operators';\nimport { NzCellFixedDirective } from '../cell/cell-fixed.directive';\nimport { NzThMeasureDirective } from '../cell/th-measure.directive';\nimport { NzTableStyleService } from '../table-style.service';\n\n@Directive({\n  selector: 'tr:not([mat-row]):not([mat-header-row]):not([nz-table-measure-row]):not([nzExpand]):not([nz-table-fixed-row])',\n  host: {\n    '[class.ant-table-row]': 'isInsideTable'\n  }\n})\nexport class NzTrDirective implements AfterContentInit, OnDestroy {\n  @ContentChildren(NzThMeasureDirective) listOfNzThDirective!: QueryList<NzThMeasureDirective>;\n  @ContentChildren(NzCellFixedDirective) listOfCellFixedDirective!: QueryList<NzCellFixedDirective>;\n  private destroy$ = new Subject<void>();\n  private listOfFixedColumns$ = new ReplaySubject<NzCellFixedDirective[]>(1);\n  private listOfColumns$ = new ReplaySubject<NzThMeasureDirective[]>(1);\n  listOfFixedColumnsChanges$: Observable<NzCellFixedDirective[]> = this.listOfFixedColumns$.pipe(\n    switchMap(list =>\n      merge(...[this.listOfFixedColumns$, ...list.map((c: NzCellFixedDirective) => c.changes$)]).pipe(\n        flatMap(() => this.listOfFixedColumns$)\n      )\n    ),\n    takeUntil(this.destroy$)\n  );\n  listOfFixedLeftColumnChanges$ = this.listOfFixedColumnsChanges$.pipe(map(list => list.filter(item => item.nzLeft !== false)));\n  listOfFixedRightColumnChanges$ = this.listOfFixedColumnsChanges$.pipe(map(list => list.filter(item => item.nzRight !== false)));\n  listOfColumnsChanges$: Observable<NzThMeasureDirective[]> = this.listOfColumns$.pipe(\n    switchMap(list =>\n      merge(...[this.listOfColumns$, ...list.map((c: NzThMeasureDirective) => c.changes$)]).pipe(flatMap(() => this.listOfColumns$))\n    ),\n    takeUntil(this.destroy$)\n  );\n  isInsideTable = false;\n\n  constructor(@Optional() private nzTableStyleService: NzTableStyleService) {\n    this.isInsideTable = !!nzTableStyleService;\n  }\n\n  ngAfterContentInit(): void {\n    if (this.nzTableStyleService) {\n      this.listOfCellFixedDirective.changes\n        .pipe(startWith(this.listOfCellFixedDirective), takeUntil(this.destroy$))\n        .subscribe(this.listOfFixedColumns$);\n      this.listOfNzThDirective.changes.pipe(startWith(this.listOfNzThDirective), takeUntil(this.destroy$)).subscribe(this.listOfColumns$);\n      /** set last left and first right **/\n      this.listOfFixedLeftColumnChanges$.subscribe(listOfFixedLeft => {\n        listOfFixedLeft.forEach(cell => cell.setIsLastLeft(cell === listOfFixedLeft[listOfFixedLeft.length - 1]));\n      });\n      this.listOfFixedRightColumnChanges$.subscribe(listOfFixedRight => {\n        listOfFixedRight.forEach(cell => cell.setIsFirstRight(cell === listOfFixedRight[0]));\n      });\n      /** calculate fixed nzLeft and nzRight **/\n      combineLatest([this.nzTableStyleService.listOfListOfThWidth$, this.listOfFixedLeftColumnChanges$]).subscribe(\n        ([listOfAutoWidth, listOfLeftCell]) => {\n          listOfLeftCell.forEach((cell, index) => {\n            if (cell.isAutoLeft) {\n              const currentArray = listOfLeftCell.slice(0, index);\n              const count = currentArray.reduce((pre, cur) => pre + (cur.colspan || cur.colSpan || 1), 0);\n              const width = listOfAutoWidth.slice(0, count).reduce((pre, cur) => pre + cur, 0);\n              cell.setAutoLeftWidth(`${width}px`);\n            }\n          });\n        }\n      );\n      combineLatest([this.nzTableStyleService.listOfListOfThWidth$, this.listOfFixedRightColumnChanges$]).subscribe(\n        ([listOfAutoWidth, listOfRightCell]) => {\n          listOfRightCell.forEach((_, index) => {\n            const cell = listOfRightCell[listOfRightCell.length - index - 1];\n            if (cell.isAutoRight) {\n              const currentArray = listOfRightCell.slice(listOfRightCell.length - index, listOfRightCell.length);\n              const count = currentArray.reduce((pre, cur) => pre + (cur.colspan || cur.colSpan || 1), 0);\n              const width = listOfAutoWidth\n                .slice(listOfAutoWidth.length - count, listOfAutoWidth.length)\n                .reduce((pre, cur) => pre + cur, 0);\n              cell.setAutoRightWidth(`${width}px`);\n            }\n          });\n        }\n      );\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n/* tslint:disable:component-selector */\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  QueryList,\n  Renderer2,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { EMPTY, merge, Observable, of, Subject } from 'rxjs';\nimport { delay, map, mergeMap, startWith, switchMap, takeUntil } from 'rxjs/operators';\nimport { NzThAddOnComponent } from '../cell/th-addon.component';\nimport { NzTableDataService } from '../table-data.service';\nimport { NzTableStyleService } from '../table-style.service';\nimport { NzTrDirective } from './tr.directive';\n\n@Component({\n  selector: 'thead:not(.ant-table-thead)',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <ng-template #contentTemplate>\n      <ng-content></ng-content>\n    </ng-template>\n    <ng-container *ngIf=\"!isInsideTable\">\n      <ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template>\n    </ng-container>\n  `\n})\nexport class NzTheadComponent implements AfterContentInit, OnDestroy, AfterViewInit, OnInit {\n  private destroy$ = new Subject<void>();\n  isInsideTable = false;\n  @ViewChild('contentTemplate', { static: true }) templateRef!: TemplateRef<NzSafeAny>;\n  @ContentChildren(NzTrDirective, { descendants: true }) listOfNzTrDirective!: QueryList<NzTrDirective>;\n  @ContentChildren(NzThAddOnComponent, { descendants: true }) listOfNzThAddOnComponent!: QueryList<NzThAddOnComponent>;\n  @Output() readonly nzSortOrderChange = new EventEmitter<{ key: NzSafeAny; value: string | null }>();\n\n  constructor(\n    private elementRef: ElementRef,\n    private renderer: Renderer2,\n    @Optional() private nzTableStyleService: NzTableStyleService,\n    @Optional() private nzTableDataService: NzTableDataService\n  ) {\n    this.isInsideTable = !!this.nzTableStyleService;\n  }\n\n  ngOnInit(): void {\n    if (this.nzTableStyleService) {\n      this.nzTableStyleService.setTheadTemplate(this.templateRef);\n    }\n  }\n\n  ngAfterContentInit(): void {\n    if (this.nzTableStyleService) {\n      const firstTableRow$ = this.listOfNzTrDirective.changes.pipe(\n        startWith(this.listOfNzTrDirective),\n        map(item => item && item.first)\n      ) as Observable<NzTrDirective>;\n      const listOfColumnsChanges$ = firstTableRow$.pipe(\n        switchMap(firstTableRow => (firstTableRow ? firstTableRow.listOfColumnsChanges$ : EMPTY)),\n        takeUntil(this.destroy$)\n      );\n      listOfColumnsChanges$.subscribe(data => this.nzTableStyleService.setListOfTh(data));\n      /** TODO: need reset the measure row when scrollX change **/\n      this.nzTableStyleService.enableAutoMeasure$\n        .pipe(switchMap(enable => (enable ? listOfColumnsChanges$ : of([]))))\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(data => this.nzTableStyleService.setListOfMeasureColumn(data));\n      const listOfFixedLeftColumnChanges$ = firstTableRow$.pipe(\n        switchMap(firstTr => (firstTr ? firstTr.listOfFixedLeftColumnChanges$ : EMPTY)),\n        takeUntil(this.destroy$)\n      );\n      const listOfFixedRightColumnChanges$ = firstTableRow$.pipe(\n        switchMap(firstTr => (firstTr ? firstTr.listOfFixedRightColumnChanges$ : EMPTY)),\n        takeUntil(this.destroy$)\n      );\n      listOfFixedLeftColumnChanges$.subscribe(listOfFixedLeftColumn => {\n        this.nzTableStyleService.setHasFixLeft(listOfFixedLeftColumn.length !== 0);\n      });\n      listOfFixedRightColumnChanges$.subscribe(listOfFixedRightColumn => {\n        this.nzTableStyleService.setHasFixRight(listOfFixedRightColumn.length !== 0);\n      });\n    }\n    if (this.nzTableDataService) {\n      const listOfColumn$ = this.listOfNzThAddOnComponent.changes.pipe(startWith(this.listOfNzThAddOnComponent)) as Observable<\n        QueryList<NzThAddOnComponent>\n      >;\n      const manualSort$ = listOfColumn$.pipe(\n        switchMap(() => merge(...this.listOfNzThAddOnComponent.map(th => th.manualClickOrder$))),\n        takeUntil(this.destroy$)\n      );\n      manualSort$.subscribe((data: NzThAddOnComponent) => {\n        const emitValue = { key: data.nzColumnKey, value: data.sortOrder };\n        this.nzSortOrderChange.emit(emitValue);\n        if (data.nzSortFn && data.nzSortPriority === false) {\n          this.listOfNzThAddOnComponent.filter(th => th !== data).forEach(th => th.clearSortOrder());\n        }\n      });\n      const listOfCalcOperator$ = listOfColumn$.pipe(\n        switchMap(list =>\n          merge(...[listOfColumn$, ...list.map((c: NzThAddOnComponent) => c.calcOperatorChange$)]).pipe(mergeMap(() => listOfColumn$))\n        ),\n        map(list =>\n          list\n            .filter(item => !!item.nzSortFn || !!item.nzFilterFn)\n            .map(item => {\n              const { nzSortFn, sortOrder, nzFilterFn, nzFilterValue, nzSortPriority, nzColumnKey } = item;\n              return {\n                key: nzColumnKey,\n                sortFn: nzSortFn,\n                sortPriority: nzSortPriority,\n                sortOrder: sortOrder!,\n                filterFn: nzFilterFn!,\n                filterValue: nzFilterValue\n              };\n            })\n        ),\n        // TODO: after checked error here\n        delay(0)\n      );\n      listOfCalcOperator$.subscribe(list => {\n        this.nzTableDataService.listOfCalcOperator$.next(list);\n      });\n    }\n  }\n\n  ngAfterViewInit(): void {\n    if (this.nzTableStyleService) {\n      this.renderer.removeChild(this.renderer.parentNode(this.elementRef.nativeElement), this.elementRef.nativeElement);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\n@Component({\n  selector: 'nz-table-title-footer',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <ng-container *nzStringTemplateOutlet=\"title\">{{ title }}</ng-container>\n    <ng-container *nzStringTemplateOutlet=\"footer\">{{ footer }}</ng-container>\n  `,\n  host: {\n    '[class.ant-table-title]': `title !== null`,\n    '[class.ant-table-footer]': `footer !== null`\n  }\n})\nexport class NzTableTitleFooterComponent {\n  @Input() title: string | TemplateRef<NzSafeAny> | null = null;\n  @Input() footer: string | TemplateRef<NzSafeAny> | null = null;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, ElementRef, Input } from '@angular/core';\n\n@Directive({\n  selector: 'tr[nzExpand]',\n  host: {\n    '[hidden]': `!nzExpand`\n  }\n})\nexport class NzTrExpandDirective {\n  @Input() nzExpand = true;\n\n  constructor(private elementRef: ElementRef) {\n    // TODO: move to host after View Engine deprecation\n    this.elementRef.nativeElement.classList.add('ant-table-expanded-row');\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n/* tslint:disable:component-selector */\n\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnDestroy,\n  Output,\n  QueryList,\n  ViewChildren,\n  ViewEncapsulation\n} from '@angular/core';\nimport { NzResizeObserver } from 'ng-zorro-antd/core/resize-observers';\nimport { combineLatest, Observable, Subject } from 'rxjs';\nimport { debounceTime, map, startWith, switchMap, takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'tr[nz-table-measure-row]',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <td\n      #tdElement\n      class=\"nz-disable-td\"\n      style=\"padding: 0px; border: 0px; height: 0px;\"\n      *ngFor=\"let th of listOfMeasureColumn; trackBy: trackByFunc\"\n    ></td>\n  `\n})\nexport class NzTrMeasureComponent implements AfterViewInit, OnDestroy {\n  @Input() listOfMeasureColumn: string[] = [];\n  @Output() readonly listOfAutoWidth = new EventEmitter<number[]>();\n  @ViewChildren('tdElement') listOfTdElement!: QueryList<ElementRef>;\n  private destroy$ = new Subject();\n  constructor(private nzResizeObserver: NzResizeObserver, private ngZone: NgZone, private elementRef: ElementRef) {\n    // TODO: move to host after View Engine deprecation\n    this.elementRef.nativeElement.classList.add('ant-table-measure-now');\n  }\n  trackByFunc(_: number, key: string): string {\n    return key;\n  }\n  ngAfterViewInit(): void {\n    this.listOfTdElement.changes\n      .pipe(startWith(this.listOfTdElement))\n      .pipe(\n        switchMap(list => {\n          return combineLatest(\n            list.toArray().map((item: ElementRef) => {\n              return this.nzResizeObserver.observe(item).pipe(\n                map(([entry]) => {\n                  const { width } = entry.target.getBoundingClientRect();\n                  return Math.floor(width);\n                })\n              );\n            })\n          ) as Observable<number[]>;\n        }),\n        debounceTime(16),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(data => {\n        this.ngZone.run(() => {\n          this.listOfAutoWidth.next(data);\n        });\n      });\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzResizeObserversModule } from 'ng-zorro-antd/core/resize-observers';\nimport { NzDropDownModule } from 'ng-zorro-antd/dropdown';\nimport { NzEmptyModule } from 'ng-zorro-antd/empty';\nimport { NzI18nModule } from 'ng-zorro-antd/i18n';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzMenuModule } from 'ng-zorro-antd/menu';\nimport { NzPaginationModule } from 'ng-zorro-antd/pagination';\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\nimport { NzSpinModule } from 'ng-zorro-antd/spin';\nimport { NzFilterTriggerComponent } from './addon/filter-trigger.component';\nimport { NzTableFilterComponent } from './addon/filter.component';\nimport { NzRowExpandButtonDirective } from './addon/row-expand-button.directive';\nimport { NzRowIndentDirective } from './addon/row-indent.directive';\nimport { NzTableSelectionComponent } from './addon/selection.component';\nimport { NzTableSortersComponent } from './addon/sorters.component';\nimport { NzCellFixedDirective } from './cell/cell-fixed.directive';\nimport { NzTableCellDirective } from './cell/cell.directive';\nimport { NzTdAddOnComponent } from './cell/td-addon.component';\nimport { NzThAddOnComponent } from './cell/th-addon.component';\nimport { NzThMeasureDirective } from './cell/th-measure.directive';\nimport { NzThSelectionComponent } from './cell/th-selection.component';\nimport { NzCellAlignDirective } from './styled/align.directive';\nimport { NzCellEllipsisDirective } from './styled/ellipsis.directive';\nimport { NzCellBreakWordDirective } from './styled/word-break.directive';\nimport { NzTableContentComponent } from './table/table-content.component';\nimport { NzTableFixedRowComponent } from './table/table-fixed-row.component';\nimport { NzTableInnerDefaultComponent } from './table/table-inner-default.component';\nimport { NzTableInnerScrollComponent } from './table/table-inner-scroll.component';\nimport { NzTableVirtualScrollDirective } from './table/table-virtual-scroll.directive';\nimport { NzTableComponent } from './table/table.component';\nimport { NzTbodyComponent } from './table/tbody.component';\nimport { NzTheadComponent } from './table/thead.component';\nimport { NzTableTitleFooterComponent } from './table/title-footer.component';\nimport { NzTrExpandDirective } from './table/tr-expand.directive';\nimport { NzTrMeasureComponent } from './table/tr-measure.component';\nimport { NzTrDirective } from './table/tr.directive';\n\n@NgModule({\n  declarations: [\n    NzTableComponent,\n    NzThAddOnComponent,\n    NzTableCellDirective,\n    NzThMeasureDirective,\n    NzTdAddOnComponent,\n    NzTheadComponent,\n    NzTbodyComponent,\n    NzTrDirective,\n    NzTrExpandDirective,\n    NzTableVirtualScrollDirective,\n    NzCellFixedDirective,\n    NzTableContentComponent,\n    NzTableTitleFooterComponent,\n    NzTableInnerDefaultComponent,\n    NzTableInnerScrollComponent,\n    NzTrMeasureComponent,\n    NzRowIndentDirective,\n    NzRowExpandButtonDirective,\n    NzCellBreakWordDirective,\n    NzCellAlignDirective,\n    NzTableSortersComponent,\n    NzTableFilterComponent,\n    NzTableSelectionComponent,\n    NzCellEllipsisDirective,\n    NzFilterTriggerComponent,\n    NzTableFixedRowComponent,\n    NzThSelectionComponent\n  ],\n  exports: [\n    NzTableComponent,\n    NzThAddOnComponent,\n    NzTableCellDirective,\n    NzThMeasureDirective,\n    NzTdAddOnComponent,\n    NzTheadComponent,\n    NzTbodyComponent,\n    NzTrDirective,\n    NzTableVirtualScrollDirective,\n    NzCellFixedDirective,\n    NzFilterTriggerComponent,\n    NzTrExpandDirective,\n    NzCellBreakWordDirective,\n    NzCellAlignDirective,\n    NzCellEllipsisDirective,\n    NzTableFixedRowComponent,\n    NzThSelectionComponent\n  ],\n  imports: [\n    NzMenuModule,\n    FormsModule,\n    NzOutletModule,\n    NzRadioModule,\n    NzCheckboxModule,\n    NzDropDownModule,\n    NzButtonModule,\n    CommonModule,\n    PlatformModule,\n    NzPaginationModule,\n    NzResizeObserversModule,\n    NzSpinModule,\n    NzI18nModule,\n    NzIconModule,\n    NzEmptyModule,\n    ScrollingModule\n  ]\n})\nexport class NzTableModule {}\n"]}