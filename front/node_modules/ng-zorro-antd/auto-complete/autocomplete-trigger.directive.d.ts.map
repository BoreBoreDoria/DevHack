{"version":3,"file":"autocomplete-trigger.directive.d.ts","sources":["autocomplete-trigger.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { Overlay } from '@angular/cdk/overlay';\nimport { ElementRef, ExistingProvider, OnDestroy, ViewContainerRef } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { NzSafeAny, OnChangeType, OnTouchedType } from 'ng-zorro-antd/core/types';\nimport { NzInputGroupWhitSuffixOrPrefixDirective } from 'ng-zorro-antd/input';\nimport { NzAutocompleteOptionComponent } from './autocomplete-option.component';\nimport { NzAutocompleteComponent } from './autocomplete.component';\nexport declare const NZ_AUTOCOMPLETE_VALUE_ACCESSOR: ExistingProvider;\nexport declare function getNzAutocompleteMissingPanelError(): Error;\nexport declare class NzAutocompleteTriggerDirective implements ControlValueAccessor, OnDestroy {\n    private elementRef;\n    private overlay;\n    private viewContainerRef;\n    private nzInputGroupWhitSuffixOrPrefixDirective;\n    private document;\n    /** Bind nzAutocomplete component */\n    nzAutocomplete: NzAutocompleteComponent;\n    onChange: OnChangeType;\n    onTouched: OnTouchedType;\n    panelOpen: boolean;\n    /** Current active option */\n    get activeOption(): NzAutocompleteOptionComponent | void;\n    private destroy$;\n    private overlayRef;\n    private portal;\n    private positionStrategy;\n    private previousValue;\n    private selectionChangeSubscription;\n    private optionsChangeSubscription;\n    private overlayOutsideClickSubscription;\n    constructor(elementRef: ElementRef, overlay: Overlay, viewContainerRef: ViewContainerRef, nzInputGroupWhitSuffixOrPrefixDirective: NzInputGroupWhitSuffixOrPrefixDirective, document: NzSafeAny);\n    ngOnDestroy(): void;\n    writeValue(value: NzSafeAny): void;\n    registerOnChange(fn: (value: {}) => {}): void;\n    registerOnTouched(fn: () => {}): void;\n    setDisabledState(isDisabled: boolean): void;\n    openPanel(): void;\n    closePanel(): void;\n    handleKeydown(event: KeyboardEvent): void;\n    handleInput(event: KeyboardEvent): void;\n    handleFocus(): void;\n    handleBlur(): void;\n    /**\n     * Subscription data source changes event\n     */\n    private subscribeOptionsChange;\n    /**\n     * Subscription option changes event and set the value\n     */\n    private subscribeSelectionChange;\n    private subscribeOverlayOutsideClick;\n    private attachOverlay;\n    private updateStatus;\n    private destroyPanel;\n    private getOverlayConfig;\n    private getConnectedElement;\n    private getHostWidth;\n    private getOverlayPosition;\n    private resetActiveItem;\n    private setValueAndClose;\n    private setTriggerValue;\n    private doBackfill;\n    private canOpen;\n}\n"]}