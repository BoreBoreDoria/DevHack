{"version":3,"file":"autocomplete.component.d.ts","sources":["autocomplete.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { AfterContentInit, AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, NgZone, OnDestroy, QueryList, TemplateRef } from '@angular/core';\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\nimport { BooleanInput, CompareWith, NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { Observable } from 'rxjs';\nimport { NzAutocompleteOptionComponent, NzOptionSelectionChange } from './autocomplete-option.component';\nexport interface AutocompleteDataSourceItem {\n    value: string;\n    label: string;\n}\nexport declare type AutocompleteDataSource = Array<AutocompleteDataSourceItem | string | number>;\nexport declare class NzAutocompleteComponent implements AfterContentInit, AfterViewInit, OnDestroy {\n    private changeDetectorRef;\n    private ngZone;\n    noAnimation?: NzNoAnimationDirective | undefined;\n    static ngAcceptInputType_nzDefaultActiveFirstOption: BooleanInput;\n    static ngAcceptInputType_nzBackfill: BooleanInput;\n    nzWidth?: number;\n    nzOverlayClassName: string;\n    nzOverlayStyle: {\n        [key: string]: string;\n    };\n    nzDefaultActiveFirstOption: boolean;\n    nzBackfill: boolean;\n    compareWith: CompareWith;\n    nzDataSource?: AutocompleteDataSource;\n    readonly selectionChange: EventEmitter<NzAutocompleteOptionComponent>;\n    showPanel: boolean;\n    isOpen: boolean;\n    activeItem: NzAutocompleteOptionComponent;\n    /**\n     * Options accessor, its source may be content or dataSource\n     */\n    get options(): QueryList<NzAutocompleteOptionComponent>;\n    /** Provided by content */\n    fromContentOptions: QueryList<NzAutocompleteOptionComponent>;\n    /** Provided by dataSource */\n    fromDataSourceOptions: QueryList<NzAutocompleteOptionComponent>;\n    /** cdk-overlay */\n    template?: TemplateRef<{}>;\n    panel?: ElementRef;\n    content?: ElementRef;\n    private activeItemIndex;\n    private selectionChangeSubscription;\n    private optionMouseEnterSubscription;\n    private dataSourceChangeSubscription;\n    /** Options changes listener */\n    readonly optionSelectionChanges: Observable<NzOptionSelectionChange>;\n    readonly optionMouseEnter: Observable<NzAutocompleteOptionComponent>;\n    constructor(changeDetectorRef: ChangeDetectorRef, ngZone: NgZone, noAnimation?: NzNoAnimationDirective | undefined);\n    ngAfterContentInit(): void;\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n    setVisibility(): void;\n    setActiveItem(index: number): void;\n    setNextItemActive(): void;\n    setPreviousItemActive(): void;\n    getOptionIndex(value: NzSafeAny): number;\n    getOption(value: NzSafeAny): NzAutocompleteOptionComponent | null;\n    private optionsInit;\n    /**\n     * Clear the status of options\n     */\n    clearSelectedOptions(skip?: NzAutocompleteOptionComponent | null, deselect?: boolean): void;\n    private subscribeOptionChanges;\n}\n"]}